This is emacspeak.info, produced by makeinfo version 6.5 from
emacspeak.texi.

INFO-DIR-SECTION Accessibility
START-INFO-DIR-ENTRY
* Emacspeak:(emacspeak).		Speech-enabled Audio Desktop.
END-INFO-DIR-ENTRY

INFO-DIR-SECTION Emacs
START-INFO-DIR-ENTRY
* Emacspeak:(emacspeak).		Speech-enabled Audio Desktop.
END-INFO-DIR-ENTRY


File: emacspeak.info,  Node: Top,  Next: Copyright,  Up: (dir)

Emacspeak
*********

This manual documents *Emacspeak, The Complete Audio Desktop* and was
last updated on September 6, 2019.

   The manual is divided into the following chapters:

* Menu:

* Copying: Copyright.
* Announce: Announce.
* Background: Background.
* Introduction: Introduction.
* Installation: Installation.
* Basic Usage: Basic Usage.
* Audio Desktop: Audio Desktop.
* Voice Lock: Voice Lock.
* Using Online Help: Using Online Help.
* Emacs Packages:  Emacs Packages.
* Running Terminal Based Applications: Running Terminal Based Applications.
* Emacspeak Commands And Options:  Emacspeak Commands And Options.
* Emacspeak Keyboard Commands: Emacspeak Keyboard Commands.
* TTS Servers:  TTS Servers.
*  Emacspeak At Twenty: Emacspeak At Twenty.
* Acknowledgments: Acknowledgments.

Indices:

* Concept Index: Concept Index.
* Key Index: Key Index.


File: emacspeak.info,  Node: Copyright,  Next: Announce,  Prev: Top,  Up: Top

1 Copyright
***********

This manual documents Emacspeak, a speech extension to Emacs.

   Copyright (C)1994 – 2018 T. V. Raman All Rights Reserved.

   Permission is granted to make and distribute verbatim copies of this
manual without charge provided the copyright notice and this permission
notice are preserved on all copies.  Sections of this manual are
auto-generated from the source code, and the documentation inherits the
same license as the original source code.


File: emacspeak.info,  Node: Announce,  Next: Background,  Prev: Copyright,  Up: Top

2 Announcing Emacspeak Manual 2nd Edition As An Open Source Project
*******************************************************************

This is to announce the launch of a new open source project to create a
user manual for Emacspeak — an Emacs speech extension that provides a
complete audio desktop.

* Menu:

* Contributing: Contributing.
* Authoring Guidelines: Authoring Guidelines.
* Credits: Credits.


File: emacspeak.info,  Node: Contributing,  Next: Authoring Guidelines,  Up: Announce

2.1 How To Contribute To This Manual
====================================

This manual is organized as a series of chapters, with each chapter in a
separate file.  If you feel capable of contributing to a specific
section, send out a message to the Emacspeak mailing list
‘emacspeak@cs.vassar.edu’.  You can then start adding content to a local
copy of the chapter to which you are contributing.  When you feel you
have something to submit, mail out the file to the emacspeak mailing
list — I’ll integrate new content as it comes in.


File: emacspeak.info,  Node: Authoring Guidelines,  Next: Credits,  Prev: Contributing,  Up: Announce

2.2 Authoring Guidelines
========================

For this manual to hang together and make sense to the new user at whom
it is targeted, contributors need to stick to a consistent style.  If
you plan to contribute content, you should take some time to read the
existing sections — note that many of these are skeletal and the first
contributions will be to flesh these sections out.

   If you are familiar with texinfo, go ahead and mark up your content
using texinfo.  If you are not, simply author the documentation you
create as plain formatted ASCII. If you do submit files as texinfo
source, make sure to validate them at your end first by running the
files through ‘makeinfo’ — badly created or malformed texinfo source
takes more time to fix than marking up straight text.


File: emacspeak.info,  Node: Credits,  Prev: Authoring Guidelines,  Up: Announce

2.3 Credits
===========

This initial version draws heavily from the original Emacspeak user
manual, and includes contributions from Jim Van Zandt and Jason White.
Authors who contribute complete sections will be acknowledged here as
well as in the specific section they author.


File: emacspeak.info,  Node: Background,  Next: Introduction,  Prev: Announce,  Up: Top

3 Background
************

Emacspeak was originally developed in late 1994 and released as Open
Source in May 1995.  Since then, the system has been regularly updated
every six months to provide an up-to-date _Audio Desktop_.  Here is a
brief overview of some of the significant aspects of the system, and the
lessons learnt from its development and use.  The work on Emacspeak was
presented at CHI96 and the co-located Assets96 conference in Vancouver,
BC. This overview is being written nearly 15 years later to trace the
impact of the work.

* Menu:

* Speech-Enabling Applicationss::
* Audio Formatting And Aural CSS::
* Auditory Icons::
* Summary::


File: emacspeak.info,  Node: Speech-Enabling Applicationss,  Next: Audio Formatting And Aural CSS,  Up: Background

3.1 Speech-Enabling Applicationss
=================================

The underlying thesis behind AsTeR (Audio System For Technical Readings)
and later Emacspeak is that information is display-independent.  This
leads to the insight that producing auditory renderings of information
starting from the true source of that information often produces better
renderings than those that result from working from a modality-specific
representation; thus, attempting to speak visually rendered information
can often prove suboptimal.  AsTeR applied these ideas to documents
authored in LaTeX; Emacspeak generalized these ideas to user interfaces.

   Emacspeak was therefore designed from the ground-up to enable
applications generate their own spoken feedback, rather than having an
external software program construct the spoken feedback by responding to
events in its environment.

   In Emacspeak, theory meets practice to deliver a working
implementation; Emacspeak leverages the power of Emacs and its embedded
Lisp interpreter to inject spoken feedback into applications that run
within Emacs.  For a detailed overview on how the _advice_ mechanism in
Emacs is used, see the original Assets96 paper, as well as the chapter
on Emacspeak in the OReilly publication entitled Beautiful Code
(http://emacspeak.sourceforge.net/raman/publications/bc-emacspeak/publish-emacspeak-bc.html).


File: emacspeak.info,  Node: Audio Formatting And Aural CSS,  Next: Auditory Icons,  Prev: Speech-Enabling Applicationss,  Up: Background

3.2 Audio Formatting And Aural CSS
==================================

AsTeR introduced the notion of _audio formatting_ a concept analogous to
the well-understood notion of visual formatting.  The work on AsTeR
coincided with the Web being at its infancy.  As the Web evolved to
acquire Cascaded Style Sheets (CSS), ideas from AsTeR were used to
define Aural CSS as an appendix to CSS1 in 1995.  Emacspeak proved an
ideal platform to prototype the ideas within Aural CSS — first within
the Emacs/W3 browser.  Around this time, Emacs itself evolved to support
multiple fonts and _font-locking_ to implement syntax coloring for
various types of content.  Emacspeak applied the ideas of audio
formatting to create the auditory analog of _font-lock_ — Emacspeak
calls this _voice locking_.

   Voice locking in Emacspeak continues to be a unique feature among
systems that provide auditory feedback.  Later in 1997, Emacspeak’s
implementation was overhauled to use Aural CSS for all aspects of
voice-locking, rather than just for Web content.


File: emacspeak.info,  Node: Auditory Icons,  Next: Summary,  Prev: Audio Formatting And Aural CSS,  Up: Background

3.3 Auditory Icons
==================

Emacspeak augments spoken feedback with short auditory icons that vastly
speed up interaction.  Combined with audio formatting, the resulting
experience is analogous to moving from a monochrome character-cell
display to a high-quality color display — the overall user experience is
rich in comparison.  This enabled Emacspeak to explore innovative means
of auditory communication — as an example, see my Assets-98 paper
entitled _Conversational Gestures For The Audio Desktop_ that details
how one can play Tetris on the Emacspeak desktop.


File: emacspeak.info,  Node: Summary,  Prev: Auditory Icons,  Up: Background

3.4 Summary
===========

The lessons learnt from developing Emacspeak are many — here are a few
highlights:

   • A model for browsing tabular data — see relevant chapter in my book
     _Auditory User Interfaces_
   • Audio formatting and Aural CSS
   • Auditory icons for efficient feedback.
   • Web widgets for rapid task completion on the Web.

   And many more than will fit this margin.


File: emacspeak.info,  Node: Introduction,  Next: Installation,  Prev: Background,  Up: Top

4 Introduction
**************

Emacspeak provides a complete audio desktop by speech-enabling all of
Emacs.

   In the past, screen reading programs have allowed visually impaired
users to get feedback using synthesized speech.  Such programs have been
commercially available for a long time.  Most of them originally ran on
PC’s under DOS, and have moved over to the Windows environment.
However, screen-readers for the UNIX environment have been conspicuous
in their absence.  Note that this is now changing with the availability
of console-level Linux screenreaders such as ‘speakup’.  Such Linux
screenreaders provide the same level of UNIX accessibility provided in
the late 80’s by PC terminal emulators running a DOS screenreader.  This
means that most visually impaired computer users face the additional
handicap of being DOS-impaired — a far more serious problem:-)

   Emacspeak is an emacs subsystem that provides complete speech access.
It is _not_ a screen-reader — rather, it is a complete user environment
with built-in speech feedback.  Emacspeak has a significant advantage;
since it runs inside Emacs, a structure-sensitive, fully customizable
environment, Emacspeak has more context-specific information about what
it is speaking than its screenreader counterparts.  This is why
Emacspeak is not a “screenreader”, it is a system that produces speech
output.

   A Traditional screen-reader speaks the content of the screen, leaving
it to the user to interpret the visual layout.  Emacspeak, on the other
hand, treats speech as a first-class output modality; it speaks the
information in a manner that is easy to comprehend when listening.

   The basic concepts used by Emacspeak are simple; all interactive
Emacs commands have been adapted to provide speech feedback.  Hence, you
use Emacs as normal; Emacspeak works behind the scene to give audio
feedback in addition to updating the screen.

   Emacspeak consists of a core speech system that provides speech and
audio services to the rest of the Emacspeak desktop;
application-specific extensions provide context-specific spoken feedback
using these services.  Emacspeak currently comes with speech extensions
for several popular Emacs subsystems and editing modes.  I would like to
thank their respective authors for their wonderful work which makes
Emacs more than a text editor(1).

   ---------- Footnotes ----------

   (1) I have now been using Emacspeak under Linux as the only source of
speech feedback since 1994.


File: emacspeak.info,  Node: Installation,  Next: Basic Usage,  Prev: Introduction,  Up: Top

5 Installation Instructions
***************************

This chapter gives brief and detailed installation instructions for
configuring, installing and starting Emacspeak.

* Menu:

* Obtaining Emacspeak::         Obtaining Emacspeak.
* Quick Installation::          Default installation  and startup.
* Building And Testing The Speech Server::


File: emacspeak.info,  Node: Obtaining Emacspeak,  Next: Quick Installation,  Up: Installation

5.1 Obtaining Emacspeak
=======================

Emacspeak is available on the Internet at:
WWW
     http://emacspeak.sf.net
WWW
     https://github.com/tvraman/emacspeak
Mail List
     emacspeak@cs.vassar.edu
List Request
     emacspeak-request@cs.vassar.edu

   The Emacspeak mailing list is maintained by Greg E. Priest-Dorman.
If you are using Emacspeak, you should join the list by sending mail to
the request address.


File: emacspeak.info,  Node: Quick Installation,  Next: Building And Testing The Speech Server,  Prev: Obtaining Emacspeak,  Up: Installation

5.2 Quick Installation
======================

Here are the quick installation instructions.  See the next section for
detailed installation instructions.

   Packages for Linux distributions such as Debian typically become
available on the WWW a few weeks or months after a new version is
released.  The instructions below are for building and installing
Emacspeak from the source distribution.  If you install one of the
pre-packaged distributions, use the install instructions that come with
that package.

   • Obtain the source code — either by downloading the tar.bz2 file for
     the latest release — or by cloning the git repository.  ‘git clone
     https://github.com/tvraman/emacspeak’
   • Change to the ‘emacspeak’ directory.  Type ‘make config’ to
     configure the sources.
   • Type
          make
     to compile the files.
   • Next, decide which text-to-speech engine you will be using, and
     proceed to install that engine.  Your choices are:
        • Open Source ESpeak on Linux.  Install the ESpeak packages for
          your system, then compile the Emacspeak ESpeak server by
          doing:
               cd servers/native-espeak; make
        • ViaVoice Outloud (AKA Eloquent).  You need to purchase this
          engine from the voxin site.  That purchase will give you
          install-ready packages for installing the speech engine as
          well as Emacspeak.  See <https://voxin.oralux.net/rss.xml> for
          the latest packages, and <https://voxin.oralux.net> for the
          main Voxin Web site.
        • On the Mac, you can use the builtin Mac TTS engine — emacspeak
          comes with a speech server for that TTS engine written in
          Python.
   • Having installed and configured the TTS engine of your choice, and
     having built the associated speech server, set Emacspeak up to use
     that engine by setting environment variable ‘DTK_PROGRAM’.  If
     using Bash as your shell, add the line
          export DTK_PROGRAM=<engine-name>
     to your ‘.bash_profile’.  As an example, to use ESpeak, add
          export DTK_PROGRAM=espeak
   • Run it by doing
        • Add the line
               (load-file "<emacspeak-dir>/lisp/emacspeak-setup.el")
          to the top of your .emacs file.
     In the above, ‘<emacspeak-dir>’ refers to the directory where you
     unpacked the sources.

   See the next section for details on building and testing the speech
server.


File: emacspeak.info,  Node: Building And Testing The Speech Server,  Prev: Quick Installation,  Up: Installation

5.3 Building And Testing The Speech Server
==========================================

5.3.1 Speech Servers
--------------------

Speech servers are located in the ‘emacspeak/servers’ directory.

   • ESpeak: servers/espeak.  This is a TCL script that uses a library
     built in ‘servers/native-espeak/’.
   • Dectalk: ‘servers/dtk-exp’.  This is a TCL script that does not
     depend on any native code.
   • Outloud: ‘servers/outloud’ or ‘servres/32-outloud’ (for 64-bit
     machines).  This is a TCL script that uses the library built in
     ‘servers/linux-outloud’.  Note that a checkout from GitHub gives
     you a prebuilt library — however you will need to purchase the TTS
     engine from <http://voxin.oralux.net>.
   • Mac: ‘servers/mac’.  This is a Python script that binds to the
     native Mac TTS.

5.3.1.1 Testing The Selected Server.
....................................

Once you have picked the TTS engine to use, run the selected server
script at a shell prompt, e.g.  for the ‘espeak’ engine, do:
     ./servers/espeak

   This will result in a TCL prompt.  Here, you can test the TTS engine
by:

   •      q "this is a test."
          d

     You should hear the TTS engine speak the text.
   • ‘s’ The above command stops speech.  You should see a TCL prompt
     when you execute it.

   Quit this TCL session by typing ‘C-D’.


File: emacspeak.info,  Node: Basic Usage,  Next: Audio Desktop,  Prev: Installation,  Up: Top

6 Basic Usage.
**************

This chapter gives an overview of how to use Emacspeak; for a full
listing of Emacspeak keybindings, see *Note emacspeak::.  Note: This
documentation should be used in conjunction with the online Emacs info
pages that extensively document Emacs itself.  These sections briefly
describe the speech-enabling extensions.  However, they should not be
considered a substitute for reading the Emacs manual.  How successfully
you use Emacspeak will depend on how well you learn your Emacs.

   All Emacs navigation and editing commands have been speech enabled.
Thus, moving to the next or previous word, line or paragraph results in
the text around point being spoken.  Exactly how much text is spoken is
determined by the amount by which you moved.

   In addition, Emacspeak provides basic reading functions that can be
invoked to listen to chunks of text without moving.

* Menu:

* Overview::                     Basic Overview.
* Working::                      Working in Emacspeak.
* Reading::                      Reading chunks of information.
* Speech System::                Controlling Speech Output.
* Voice-lock::                   Audio Formatting.
* Status Information::           Speaking Status Information.


File: emacspeak.info,  Node: Overview,  Next: Working,  Up: Basic Usage

6.1 Overview of Emacspeak
=========================

Emacspeak provides a small number of core services around which the
remainder of the audio interface is constructed.  These essential
features of the software are briefly outlined in the following
paragraphs; the commands by which they can be controlled will be
described later in the manual.

   Apart from providing a fluent spoken interface to all of Emacs’ basic
editing functions, Emacspeak also includes software modules which add
speech feedback to a range of applications that can be run from within
Emacs.  In this sense, Emacspeak amounts to much more than a talking
text editor; indeed, it can more aptly be characterized as a true “audio
desktop”, in which speech is treated as a first-class output modality.

   Emacspeak implements a special minor mode, known as “voice lock mode”
(*note Voice-lock::) which uses distinct speech characteristics to
provide aural highlighting of specific textual constructs, such as
comments in program code, quoted strings and reserved words *Note Voice
Lock::.  This facility is further extended when Emacspeak is used with
the ‘EWW’ and ‘W3’ Web browsers, to enable the semantic and structural
distinctions captured by the HTML markup to be communicated efficiently
*Note Web Browsing::.

   It is often desirable to exercise control over the pronunciation of a
word (E.G. a technical term or a reserved word in a programming
language) within specific contexts.  Emacspeak maintains pronunciation
dictionaries for this purpose, which may be customized by the user.
Moreover, individual dictionaries can be activated selectively,
depending for example on the current major mode or the name of the file
which is being visited *Note emacspeak-pronounce::.

   In addition to spoken feedback, Emacspeak can generate “auditory
icons” — short sound cues which alert the user to significant events,
for example the opening or deletion of a file, the completion of an
action, the arrival of an electronic mail message or the creation of a
completion buffer.  Sound cues act as a supplement to the spoken
interface, and are especially valuable to the experienced user in
facilitating rapid interaction.  Note that in order to support auditory
icons, the computer must be equipped with sound hardware for which the
operating system has been correctly configured *Note emacspeak-sounds::.


File: emacspeak.info,  Node: Working,  Next: Reading,  Prev: Overview,  Up: Basic Usage

6.2 Working In Emacs Buffers.
=============================

While typing in an Emacs buffer, hitting space speaks the recently typed
word.  I use completion all the time; so Emacspeak will speak the
completion just inserted as well as the next possible completion.  In
Emacs, use ‘load-library ret completion ret’ for loading the completion
package.

   The standard Emacs prompting functions have also been speech-enabled.
Emacs prompts with available lists of completions in response to partial
input wherever appropriate — all forms of completion provide speech
feedback.

   In addition, Emacspeak provides a number of commands for reading
portions of the current buffer, getting status information, and
modifying Emacspeak’s state.

   All of the commands are documented in the subsequent sections.  They
can be classified into types:

   • Emacspeak commands for listening to chunks of information.  The
     names of these commands all start with the common prefix
     ‘emacspeak-speak-’.  All Emacspeak commands are bound to the keymap
     EMACSPEAK-KEYMAP and are accessed with the key ‘Control e’(1).
     Thus, the Emacspeak command “emacspeak-speak-line” is bound to ‘l’
     in keymap EMACSPEAK-KEYMAP and can be accessed with the keystroke
     ‘Control-e l’.  If for some reason you wish to use some key other
     than ‘control-e’ as the common keyboard prefix for all Emacspeak
     commands, set the variable EMACSPEAK-PREFIX.
   • 
     The second category of commands provided by Emacspeak manipulate
     the state of the speech device.  The names of these commands start
     with the common prefix ‘dtk-’ and are bound in keymap
     EMACSPEAK-DTK-SUBMAP.  You can access these commands via the prefix
     ‘Control-e d’(2).  Thus, the command “dtk-set-rate” is bound to ‘r’
     in keymap EMACSPEAK-DTK-SUBMAP and can be executed by pressing
     ‘Control e d r’.

   Emacs has extensive online help; so does emacspeak.  Please use it.

   This info manual is only to get you started.  You can get a summary
of Emacspeak’s features by pressing ‘Control-h Control-e’

   ---------- Footnotes ----------

   (1) Control e is mnemonic for Emacspeak.

   (2) Historically, d was mnemonic for Dectalk; note that nothing in
Emacspeak is DECTalk specific.


File: emacspeak.info,  Node: Reading,  Next: Speech System,  Prev: Working,  Up: Basic Usage

6.3 Reading Without Moving The Cursor.
======================================

Emacspeak speaks information as you move around within a buffer.  How
much text is spoken depends on how you move, thus, when you move by
words, you hear the current word; when you move by paragraphs, you hear
the current paragraph spoken.  In addition, the following commands allow
you to listen to information without moving point (point is emacs
terminology for the editing cursor).

   Reading without moving point:

‘control e c’
     emacspeak-speak-char Speak character under point.  Pronounces
     character phonetically unless called with a PREFIX arg.

‘control e w’
     emacspeak-speak-word Speak current word.  With prefix ARG, speaks
     the rest of the word from point.  Negative prefix arg speaks from
     start of word to point.  If executed on the same buffer position a
     second time, the word is spelled instead of being spoken.

‘control e l’
     emacspeak-speak-line Speaks current line.  With prefix ARG, speaks
     the rest of the line from point.  Negative prefix optional arg
     speaks from start of line to point.  Voicifies if option
     ‘voice-lock-mode’ is on.  Indicates indentation with a tone or a
     spoken cue if audio indentation is in use.  Indicates position of
     point with an aural highlight if option ‘emacspeak-show-point’ is
     turned on — see command ‘emacspeak-show-point’ bound to M-x
     emacspeak-show-point.  Lines that start hidden blocks of text, e.g.
     outline header lines, or header lines of blocks created by command
     ‘emacspeak-hide-or-expose-block’ are indicated with auditory icon
     ellipses.

‘control e up’
     emacspeak-read-previous-line Read previous line, specified by an
     offset, without moving.  Default is to read the previous line.

‘control e down’
     emacspeak-read-next-line Read next line, specified by an offset,
     without moving.  Default is to read the next line.

‘control e p’
     emacspeak-speak-paragraph Speak paragraph.  With prefix arg, speaks
     rest of current paragraph.  Negative prefix arg will read from
     start of current paragraph to point.  If voice-lock-mode is on,
     then it will use any defined personality.

‘control e r’
     emacspeak-speak-region Speak current region delimited by “point”
     and “mark”.  When called from a program, argument START and END
     specify region to speak.

‘control e cap R’
     emacspeak-speak-rectangle Speak a rectangle of text.  Rectangle is
     delimited by point and mark.  When call from a program, arguments
     specify the START and END of the rectangle.

‘control e b’
     emacspeak-speak-buffer Speak current buffer contents.  With prefix
     ARG, speaks the rest of the buffer from point.  Negative prefix arg
     speaks from start of buffer to point.  If voice lock mode is on,
     the paragraphs in the buffer are voice annotated first, see command
     ‘emacspeak-speak-voice-annotate-paragraphs’.  This provides the
     auditory equivalent of _dropped caps_ from visual typography.

‘control e n’
     emacspeak-speak-rest-of-buffer Speak remainder of the buffer
     starting at point

‘control e /’
     emacspeak-speak-this-buffer-other-window-display Speak this buffer
     as displayed in a different frame.  Emacs allows you to display the
     same buffer in multiple windows or frames.  These different windows
     can display different portions of the buffer.  This is equivalent
     to leaving a book open at places at once.  This command allows you
     to listen to the places where you have left the book open.  The
     number used to invoke this command specifies which of the displays
     you wish to speak.  Typically you will have two or at most three
     such displays open.  The current display is 0, the next is 1, and
     so on.  Optional argument ARG specifies the display to speak.

‘control e left’
     emacspeak-speak-this-buffer-previous-display Speak this buffer as
     displayed in a ‘previous’ window.  See documentation for command
     ‘emacspeak-speak-this-buffer-other-window-display’ for the meaning
     of ‘previous’.

‘control e right’
     emacspeak-speak-this-buffer-next-display Speak this buffer as
     displayed in a ‘previous’ window.  See documentation for command
     ‘emacspeak-speak-this-buffer-other-window-display’ for the meaning
     of ‘previous’.

‘control e [’
     emacspeak-speak-page Speak a page.  With prefix ARG, speaks rest of
     current page.  Negative prefix arg will read from start of current
     page to point.  If option ‘voice-lock-mode’ is on, then it will use
     any defined personality.

‘control e [0..9]’
     emacspeak-speak-predefined-window Speak one of the first 10 windows
     on the screen.  In general, you’ll never have Emacs split the
     screen into more than two or three.  Argument ARG determines the
     ’other’ window to speak.  Speaks entire window irrespective of
     point.  Semantics of ‘other’ is the same as for the builtin Emacs
     command ‘other-window’.

‘control e control n’
     emacspeak-speak-next-window Speak the next window.

‘control e control p’
     emacspeak-speak-previous-window Speak the previous window.

‘emacspeak-speak-other-window’
     Speak contents of ‘other’ window.  Speaks entire window
     irrespective of point.  Semantics of ‘other’ is the same as for the
     builtin Emacs command ‘other-window’.  Optional argument ARG
     specifies ‘other’ window to speak.

‘ESCAPE up’
     emacspeak-owindow-previous-line Move to the next line in the other
     window and speak it.  Numeric prefix arg COUNT specifies number of
     lines to move.

‘ESCAPE down’
     emacspeak-owindow-next-line Move to the next line in the other
     window and speak it.  Numeric prefix arg COUNT can specify number
     of lines to move.

‘ESCAPE next’
     emacspeak-owindow-scroll-up Scroll up the window that command
     ‘other-window’ would move to.  Speak the window contents after
     scrolling.

‘ESCAPE prior’
     emacspeak-owindow-scroll-down Scroll down the window that command
     ‘other-window’ would move to.  Speak the window contents after
     scrolling.

‘emacspeak-speak-sexp’
     Speak current sexp.  With prefix ARG, speaks the rest of the sexp
     from point.  Negative prefix arg speaks from start of sexp to
     point.

‘control e meta control @’
     emacspeak-speak-spaces-at-point Speak the white space at point.


File: emacspeak.info,  Node: Speech System,  Next: Voice-lock,  Prev: Reading,  Up: Basic Usage

6.4 Speech System Commands
==========================

This section documents Emacspeak’s various user commands for controlling
the text to speech (TTS) system.

* Menu:

* Controlling Echo::             Character, Word and Line Echo.
* Speech Output  Control::       Indicating case, capitalization and indentation.
* Miscellaneous:: Miscellaneous TTS Commands.


File: emacspeak.info,  Node: Controlling Echo,  Next: Speech Output Control,  Up: Speech System

6.4.1 Character, Word And Line Echo.
------------------------------------

By default, Emacspeak speaks characters as they are typed — this is
called character echo; Words are spoken as they are completed — this is
called word echo.  Emacspeak can also optionally speak each line as it
is typed — this is called line echo.

   Character, word and line echo can be toggled — either in the current
buffer — or for all buffers (globally).  To toggle the specific echo
functionality for all buffers, precede the specific command with ‘C-u’.
Note that in the documentation below, this use of ‘C-u’ is indicated
using the common Emacs terminology of _prefix arg_ or _interactive
prefix arg_.

‘control e d k’
     emacspeak-toggle-character-echo Toggle state of Emacspeak character
     echo.  Interactive PREFIX arg means toggle the global default
     value, and then set the current local value to the result.

‘control e d w’
     emacspeak-toggle-word-echo Toggle state of Emacspeak word echo.
     Interactive PREFIX arg means toggle the global default value, and
     then set the current local value to the result.

‘control e d l’
     emacspeak-toggle-line-echo Toggle state of Emacspeak line echo.
     Interactive PREFIX arg means toggle the global default value, and
     then set the current local value to the result.


File: emacspeak.info,  Node: Speech Output Control,  Next: Miscellaneous,  Prev: Controlling Echo,  Up: Speech System

6.4.2 Setting Various Characteristics Of Speech Output.
-------------------------------------------------------

Emacspeak user commands can set different characteristics of the speech
output such as speech rate and punctuations mode.

   Emacspeak provides a number of settings that affect how attributes of
the text such as capitalization are conveyed.  These include settings
that produce a short tone for each upper case letter, as well as a smart
mode for speaking mixed case words which is especially useful when
programming.  These settings can be made locally in a given buffer or be
applied to all buffers by preceding these commands with ‘C-u’.

‘control e d r’
     dtk-set-rate Set speaking RATE for the tts.  Interactive PREFIX arg
     means set the global default value, and then set the current local
     value to the result.

‘control e d f’
     dtk-set-character-scale Set scale FACTOR for speech rate.  Speech
     rate is scaled by this factor when speaking characters.
     Interactive PREFIX arg means set the global default value, and then
     set the current local value to the result.

     This function is advised.

     Before-advice ‘emacspeak-auto’: Automatically defined advice to
     speak interactive prompts.

‘control e d 9 control e d 8 control e d 7 control e d 6 control e d 5 control e d 4 control e d 3 control e d 2 control e d 1 control e d 0’
     dtk-set-predefined-speech-rate Set speech rate to one of nine
     predefined levels.  Interactive PREFIX arg says to set the rate
     globally.

‘control e d p’
     dtk-set-punctuations Set punctuation mode to MODE. Possible values
     are ‘some’, ‘all’, or ‘none’.  Interactive PREFIX arg means set the
     global default value, and then set the current local value to the
     result.

‘control e d m’
     dtk-set-pronunciation-mode Set pronunciation MODE. This command is
     valid only for newer Dectalks, e.g.  the Dectalk Express.  Possible
     values are ‘math, name, europe, spell’, all of which can be turned
     on or off.  Argument STATE specifies new state.

‘control e d s’
     dtk-toggle-split-caps Toggle split caps mode.  Split caps mode is
     useful when reading Hungarian notation in program source code.
     Interactive PREFIX arg means toggle the global default value, and
     then set the current local value to the result.

‘control e d c’
     dtk-toggle-capitalization Toggle capitalization.  when set,
     capitalization is indicated by a short beep.  Interactive PREFIX
     arg means toggle the global default value, and then set the current
     local value to the result.

‘control e d cap C’
     dtk-toggle-allcaps-beep Toggle allcaps-beep.  when set, allcaps
     words are indicated by a short beep.  Interactive PREFIX arg means
     toggle the global default value, and then set the current local
     value to the result.  Note that allcaps-beep is a very useful thing
     when programming.  However it is irritating to have it on when
     reading documents.

   In addition, Emacspeak can convey the indentation of lines as they
are spoken — this is relevant when programming and is the default when
working with program source.

‘control e d i’
     emacspeak-toggle-audio-indentation Toggle state of Emacspeak audio
     indentation.  Interactive PREFIX arg means toggle the global
     default value, and then set the current local value to the result.
     Specifying the method of indentation as ‘tones’ results in the
     speech-server producing a tone whose length is a function of the
     line’s indentation.  Specifying ‘speak’ results in the number of
     initial spaces being spoken.

     Indentation feedback style is set by option
     emacspeak-audio-indentation-method

     The default value is ‘"speak"’

     See variable ‘emacspeak-audio-indentation-methods’ for possible
     values.  Automatically becomes local in any buffer where it is set.


File: emacspeak.info,  Node: Miscellaneous,  Prev: Speech Output Control,  Up: Speech System

6.4.3 Miscellaneous Speech Commands
-----------------------------------

Speech can be stopped using command ‘dtk-stop’ — though in normal use,
the action of moving the cursor will stop ongoing speech.  The speech
server can be stopped and restarted for cases where the user wants to
switch to a different server — or in the rare case to nuke a runaway
speech server.

‘Control e s’
     dtk-stop Stop speech now.

‘control e d q’
     dtk-toggle-quiet Toggle state of the speech device between being
     quiet and talkative.  Useful if you want to continue using an Emacs
     session that has emacspeak loaded but wish to make the speech shut
     up.  Optional argument PREFIX specifies whether speech is turned
     off in the current buffer or in all buffers.

‘control e control s’
     dtk-emergency-restart Use this to nuke the currently running dtk
     server and restart it.  Useful if you want to switch to another
     synthesizer while emacspeak is running.  Also useful for emergency
     stopping of speech.

   Finally, here are the remaining commands available via the TTS
related keymap ‘C-e d’.

‘control e d a’
     dtk-add-cleanup-pattern Add this pattern to the list of repeating
     patterns that are cleaned up.  Optional interactive prefix arg
     deletes this pattern if previously added.  Cleaning up repeated
     patterns results in emacspeak speaking the pattern followed by a
     repeat count instead of speaking all the characters making up the
     pattern.  Thus, by adding the repeating pattern ‘.’ (this is
     already added by default) emacspeak will say “aw fifteen dot” when
     speaking the string “...............” instead of “period period
     period period ”.

‘control e d d’
     dtk-select-server Select a speech server interactively.  This will
     be the server that is used when you next call either M-x
     dtk-initialize or C-e C-s.  Argument PROGRAM specifies the speech
     server program.

‘control e d SPACE’
     dtk-toggle-splitting-on-white-space Toggle splitting of speech on
     white space.  This affects the internal state of emacspeak that
     decides if we split text purely by clause boundaries, or also
     include whitespace.  By default, emacspeak sends a clause at a time
     to the speech device.  This produces fluent speech for normal use.
     However in modes such as ‘shell-mode’ and some programming language
     modes, clause markers appear infrequently, and this can result in
     large amounts of text being sent to the speech device at once,
     making the system unresponsive when asked to stop talking.
     Splitting on white space makes emacspeak’s stop command responsive.
     However, when splitting on white space, the speech sounds choppy
     since the synthesizer is getting a word at a time.

‘control e d RETURN’
     dtk-set-chunk-separator-syntax Interactively set how text is split
     in chunks.  See the Emacs documentation on syntax tables for
     details on how characters are classified into various syntactic
     classes.  Argument S specifies the syntax class.

‘control e d t’
     emacspeak-dial-dtk Prompt for and dial a phone NUMBER with the
     Dectalk.

‘control e d cap V’
     emacspeak-dtk-speak-version Use this to find out which version of
     the TTS firmware you are running.

‘control e d z’
     emacspeak-zap-dtk Send this command to the TTS engine directly.


File: emacspeak.info,  Node: Voice-lock,  Next: Status Information,  Prev: Speech System,  Up: Basic Usage

6.5 Voice Lock Mode
===================

The status of voice lock mode can be toggled on and off in the current
buffer by issuing the command ‘C-e d v’ (M-x voice-lock-toggle).

   Voice-lock is turned on automatically in all buffers that support it
when Emacspeak is started.

   Emacspeak can be set to disable voice lock in all of the major modes
that support it.  To do so, insert the following statement into your
Emacs initialization file:

     (global-voice-lock-mode -1)

   Note that the list of major modes in which ‘global-voice-lock-mode’
will provide automatic activation is specified in the variable
VOICE-LOCK-GLOBAL-MODES *Note Voice Lock::.

   The characteristics of the different voice personalities used by
voice lock mode vary according to the capabilities of the speech
synthesizer.  The definitions applicable to the Dectalk family of
synthesizers are contained in ‘dectalk-voices.el’, which is supplied as
part of the Emacspeak distribution.  The Emacspeak distribution also
contains voice definitions for many other synthesizers.

   Using voice lock mode, Emacspeak also supports many of the aural
style properties defined in level 2 of the World Wide Web Consortium’s
Cascading Style Sheet specification (see
<http://www.w3.org/TR/REC-CSS2/>.  Thus, when Emacspeak is running in
conjunction with a cooperating user agent, such as William Perry’s
Emacspeak/W3 web browser, the rendering of HTML documents can be
regulated by style sheets.  Examples of style rules which employ the CSS
audio properties can be found in the default style sheet which is
supplied in the Emacs/W3 distribution.


File: emacspeak.info,  Node: Status Information,  Prev: Voice-lock,  Up: Basic Usage

6.6 Commands For Speaking Status Information.
=============================================

The following commands provide miscellaneous information.

‘control e a’
     emacspeak-speak-message-again Speak the last message from Emacs
     once again.

‘control e m’
     emacspeak-speak-mode-line Speak the mode-line.

‘control e cap M’
     emacspeak-speak-minor-mode-line Speak the minor mode-information.

‘control e SPC’
     emacspeak-speak-header-line Speak the header-line.

‘control e control w’
     emacspeak-speak-window-information Speaks information about current
     windows.

‘control e t’
     emacspeak-speak-time Speak the time.

‘control e cap V’
     emacspeak-speak-version Announce version information for running
     emacspeak.

‘control e f’
     emacspeak-speak-buffer-filename Speak name of file being visited in
     current buffer.  Speak default directory if invoked in a dired
     buffer, or when the buffer is not visiting any file.

‘control e h’
     emacspeak-speak-help Speak help buffer if one present.  With prefix
     arg, speaks the rest of the buffer from point.  Negative prefix arg
     speaks from start of buffer to point.

‘control e k’
     emacspeak-speak-current-kill Speak the current kill entry.  This is
     the text that will be yanked in by the next C-y.  Prefix numeric
     arg, COUNT, specifies that the text that will be yanked as a result
     of a C-y followed by count-1 M-y be spoken.  The kill number that
     is spoken says what numeric prefix arg to give to command ‘yank’.

‘control e v’
     emacspeak-view-register Display the contents of a register, and
     then speak it.

‘control e control @’
     emacspeak-speak-current-mark Speak the line containing the mark.
     With no argument, speaks the line containing the mark — this is
     where ‘exchange-point-and-mark’ C-x C-x would jump.  Numeric prefix
     arg ’COUNT’ speaks line containing mark ’n’ where ’n’ is one less
     than the number of times one has to jump using ‘set-mark-command’
     to get to this marked position.  The location of the mark is
     indicated by an aural highlight achieved by a change in voice
     personality.

‘control e control l’
     emacspeak-speak-line-number Speak the line number of the current
     line.

‘control e =’
     emacspeak-speak-current-column Speak the current column.

‘control e %’
     emacspeak-speak-current-percentage Announce the percentage into the
     current buffer.


File: emacspeak.info,  Node: Audio Desktop,  Next: Voice Lock,  Prev: Basic Usage,  Up: Top

7 The Emacspeak Audio Desktop.
******************************

This chapter describes the Emacspeak audio desktop and gives tips and
tricks for making use of many of Emacs’ powerful features.

   The desktop is the work area where you organize the tools of your
trade and the information objects relevant to your current activities.
In the conventional world of visual GUI-based computing, these tools and
information objects manifest themselves as a collection of icons
organized in a two-dimensional work-area — this organization is designed
to place frequently used objects within easy reach.

   Notice that organizing one’s work area in terms of visual icons
arranged in a two-dimensional area where such an organization is
optimized for the available "conversational gestures" of pointing and
clicking is an artifact of visual interaction.

   In the spirit of a truly speech-enabled application, Emacspeak does
not simply provide you spoken access to a particular presentation of
your work environment that was initially designed with the "sign
language" of visual interaction in mind.  Instead, Emacspeak enables you
to work with documents and other information objects in a manner that is
optimized to aural, eyes-free interaction.  A necessary consequence of
this setup is that users accustomed to the purely visual manifestation
of today’s electronic desktop do not immediately perceive the Emacspeak
environment as an electronic desktop.  This section of the manual hopes
to introduce you to a work-style that encourages a different perspective
on how one interacts with the computer in performing day-to-day
computing tasks.

   The end result in my case has been a marked increase in personal
productivity.

* Menu:

* Desktop Objects:: Desktop Objects
* Object Oriented Desktop:: Object Oriented Desktop
* Context-Sensitive Interaction:: Context-Sensitive Interaction


File: emacspeak.info,  Node: Desktop Objects,  Next: Object Oriented Desktop,  Up: Audio Desktop

7.1 Objects Making Up The Emacspeak Desktop
===========================================

A "buffer" is the basic building block of the Emacs and hence the
Emacspeak desktop.  Any information presented by Emacs is placed in a
"buffer".  For example, when perusing this manual within Emacs, the
"file" containing the documentation is presented in a "buffer".  All
information objects such as WWW pages, email messages, output from user
interaction with command-line shells etc., are presented by Emacs in
individual "buffers".

   Buffers provide a base level of user interaction; Emacs derives its
power by allowing applications to specialize buffers to enable specific
types of user-interaction that is optimized for a specific class of
information.


File: emacspeak.info,  Node: Object Oriented Desktop,  Next: Context-Sensitive Interaction,  Prev: Desktop Objects,  Up: Audio Desktop

7.2 An Object-Oriented Desktop
==============================

The basic "buffer object" can be specialized by Emacs applications to
provide optimal interaction.  This kind of specialization makes the
Emacs environment an object-oriented environment; thus, the basic
conversational gesture of "move to the next statement" can be assigned
behavior that is appropriate to the content that the user is currently
navigating.  As an example of such specialization, Emacs provides
"specialized modes" for working with English text, programming
languages, markup source e.g.  HTML or LaTeX documents and so on.


File: emacspeak.info,  Node: Context-Sensitive Interaction,  Prev: Object Oriented Desktop,  Up: Audio Desktop

7.3 Emacspeak Specializes Aural Interaction
===========================================

The content-specific user interaction described above is a very powerful
feature of Emacs, and this is where Emacspeak derives its power.
Traditionally, the ability to create buffers specialized for working
with specific content-types has been used by the Emacs community to
develop versatile programming environments, messaging applications such
as mail and news readers, and authoring environments.  The clean design
present in all of these Emacs extensions in terms of separating
application functionality from the user-interface, combined with the
availability of the entire source code making up these packages under
the open-source model has laid the ground-work for developing Emacspeak
as a versatile aural counterpart to the product of years of software
engineering that has been invested by the Emacs community.  In short,
Emacspeak would not exist in its present shape or form without this
prior effort.

7.3.1 Audio Formatted Output
----------------------------

Emacspeak takes advantage of the content-specific knowledge available
within specialized buffers to produce "audio formatted" output designed
to optimize user interaction.  A basic consequence of the above is
"voice locking" in specialized modes; a more interesting consequence is
the implementation of Aural Cascading Style Sheets (ACSS) in conjunction
with the Emacs EWW and W3 Web browsers.

7.3.2 Structured Navigation:
----------------------------

Emacspeak also exploits content-specific knowledge to provide structured
navigation of different types of electronic content.  In many cases,
such structured navigation is an extension of what Emacs provides by
default; in other cases, Emacspeak implements the necessary extensions
to provide the level of structural navigation needed to work efficiently
in an eyes-free environment.

   Notable among such structured navigation is Emacs’ powerful outline
feature.

   An example of content-sensitive navigation is provided by the imenu
package which dynamically creates a "table of contents" based on the
content that is being displayed in a given buffer.  Emacs “Selective
Display” lets one easily hide and expose portions of a buffer based on
indentation — this feature can be used to advantage when working with
program source code.

7.3.3 Navigating The Desktop
----------------------------

In addition to navigating individual information objects, the Emacspeak
environment provides speech-enabled navigation of the various buffers
that are currently open on the Emacspeak desktop via Emacs’ built-in
list-buffers feature.  Emacs’ dired — directory editor — for browsing
the file system, along with the new speedbar package that combines
features from dired and imenu round off the suite of navigational tools.

7.3.4 Everything Is Searchable:
-------------------------------

Emacs derives one final advantage from using buffers as the basic
building block for the entire desktop.  Every Emacs buffer is searchable
via a uniform and powerful search interface.  Emacs’ incremental search
works efficiently and consistently to enable you locate "objects" of
interest either within a given document or to locate a given object from
among the various objects that are currently open on the Emacspeak
desktop.  This is very powerful — where a GUI user is typically limited
to quickly locating an object from a relatively small collection — the
size of the collection being a direct function of available display
real-estate — the Emacspeak user can typically work with a far larger
collection of objects.  This is well-suited to the eyes-free
environment, where display real-estate has no meaning; so bringing up a
list of currently open buffers and performing an incremental search to
locate a specific buffer is just as efficient independent of whether you
have a few dozen or a few hundred buffers open.

   To illustrate the above, my typical working Emacs session lasts
between two and three weeks — over that time I typically accumulate
several hundred open buffers holding a large variety of content ranging
from program source code to email messages and WWW pages.

   Ubiquitous search in the eyes-free environment is critical — as a
comparison, when using a conventional, purely visual WWW browser, users
have no means of easily "searching" for say the "submit" button on a WWW
page.  This inability is a minor annoyance in visual interaction, and
the typical mouse-enabled user never uses the find dialog to find a
submit button — it is simply more efficient to point at the submit
button given the eye’s ability to quickly scan the two-dimensional
display.  This luxury is absent in an eyes-free environment; as a
consequence, blind users confronted by the combination of a visual
interface and screen-reader are typically limited to either tabbing
through all the controls on a WWW page, or using the sub-optimal find
dialog.


File: emacspeak.info,  Node: Voice Lock,  Next: Using Online Help,  Prev: Audio Desktop,  Up: Top

8 Voice Lock
************

See <http://tvraman.github.io/emacspeak/blog/voice-lock-refreshed.html>
for a high-level overview of how Emacspeak Voice-Lock has evolved over
the years.

  1. Emacspeak defines a number of voice overlays such as
     ‘voice-bolden’, and ‘voice-lighten’ that can be applied to a given
     voice to change what it sounds like.

  2. Voice overlays are defined in terms of Aural CSS (ACSS
     (http://www.w3.org/tr/css2/aural.html)) to keep them independent of
     a specific TTS engine.

  3. For each such overlay there is a corresponding
     ‘<overlay-name>-settings’ variable that can be customized via
     custom.

  4. The numbers in ‘voice-bolden-settings as an example’:

Setting                              Value
family                               nil
average-pitch                        1
pitch-range                          6
stress                               6
richness                             nil
punctuation                          nil
   Unset values (‘nil’) show up as “unspecified” in the customize
interface.

  1. Do not directly customize ‘voice-bolden’ and friends, instead
     customize the corresponding ‘voice-bolden-settings’, since that
     ensures that all voices that are defined in terms of ‘voice-bolden’
     get correctly updated.

  2. Discovering what to customize:

   Command ‘emacspeak-show-personality-at-point’ (bound by default to
C-e M-v) will show you the value of properties personality and face at
point.  Describe-variable on these names should tell you what to
customize; so as an example:

   Put point on a comment line, and hit ‘C-e M-v’: you will hear

     Personality emacspeak-voice-lock-comment-personality
     Face font-lock-comment-delimiter-face

   Describe-variable of ‘emacspeak-voice-lock-comment-personality’
gives:

     emacspeak-voice-lock-comment-personality's value is acss-p0-s0-all

     Documentation:
     Personality used for font-lock-comment-face
     This personality uses  voice-monotone whose  effect can be changed globally by customizing voice-monotone-settings.


* Menu:

* How It All Works.::
* What this gives.::


File: emacspeak.info,  Node: How It All Works.,  Next: What this gives.,  Up: Voice Lock

8.1 How It All Works
====================

Here is a brief explanation of the connection between ‘voice-bolden’ and
its associated ‘voice-bolden-settings’.

  1. Voice settings are initially in ‘voice-bolden-settings’ which is a
     list of numbers.

  2. That list of numbers needs to be translated to appropriate
     device-specific codes to send to the TTS engine.

  3. You do not want to do this translation _each_ time you speak
     something.

  4. So when ‘voice-bolden’ is defined, the definition happens in two
     steps:

   • The list of settings is stored away in ‘voice-bolden-settings’,
   • A corresponding voice-name is generated —
     ‘acss-a<n>-p<n>-r<n>-s<n>’ and the corresponding control codes to
     send to the device are stored away in a hash-table keyed by the
     above symbol.

   • Finally, ‘voice-bolden’ is assigned the above symbol.


File: emacspeak.info,  Node: What this gives.,  Prev: How It All Works.,  Up: Voice Lock

8.2 What this gives
===================

  1. The ability to customize the voice via custom by editing the list
     of numbers in ‘voice-bolden-settings’

  2. When that list is edited, ‘voice-bolden’ is arranged to be updated
     automatically.

   The following additional commands from module *Note
emacspeak-wizards::, are useful when designing aural styles.

  1. emacspeak-wizards-generate-voice-sampler

     Generate a buffer containing text that demonstrates the effect of
     various aural settings.

  2. emacspeak-wizards-voice-sampler

     Applied specified aural style to text in current region.


File: emacspeak.info,  Node: Using Online Help,  Next: Emacs Packages,  Prev: Voice Lock,  Up: Top

9 Using Online Help With Emacspeak.
***********************************

Emacs provides an extensive online help system for helping you learn
about various aspects of using Emacs.  Emacspeak provides online help
for its various extensions using this same help system.  This chapter
explains how to use the online help facilities in order to empower you
in discovering powerful and versatile working techniques that will make
you more and more productive in your day to day computing.

   The online help options are accessed via the ‘C-h’ prefix key, which
must be followed by an additional letter or control character to
designate the kind of help desired.  For example, ‘C-h t’
‘help-with-tutorial’ visits the Emacs tutorial in a new buffer; ‘C-h i’
‘info’ enters the Info documentation system, from which you can read
Texinfo manuals that have been installed on your system, including the
Emacs and Emacspeak documentation; and ‘C-h k’ ‘describe-key’ provides a
description of the Emacs function which is bound to the next key that
you type.  For learning about the various options that are available via
the ‘C-h’ mechanism described above, view the online help for command
‘help-for-help’ bound to ‘C-h C-h’ — using what has been described so
far, you would achieve this by pressing ‘C-h k’ followed by ‘C-h C-h’.

   Emacspeak users should note that online help is typically displayed
in a separate Emacs window.  Where it makes sense to do so, Emacspeak
will automatically speak the displayed help.  Once you’ve asked for
help, you can have the displayed documentation as many times as you wish
using Emacspeak command ‘emacspeak-speak-help’ bound to ‘C-e h’.  If you
want to move through the displayed help a line at a time, switch to the
buffer where the help is displayed — the buffer is called ‘*Help*’.

   Often, in adding an auditory interface to an Emacs extension, such as
a web browser or mail reader, Emacspeak defines additional commands and
key bindings which enhance the functionality of the spoken feedback
provided by the application.  This manual does not purport to document
all such commands.  It is important, therefore, when learning to use the
various Emacs extensions which comprise the ‘audio desktop’ (*note Audio
Desktop::) that you take advantage of online help to obtain details of
any context-specific features provided by Emacspeak.  The following two
commands are of particular importance in this regard:

   • ‘C-h m’ ‘describe-mode’ explains which major and minor modes are
     currently in effect, and lists the commands and key bindings
     associated with them.

   • ‘C-h b’ ‘describe-bindings’ lists all of the key bindings which are
     currently defined.

   The importance of these help functions can be illustrated by the
Emacs/W3 web browser.  When point is positioned inside a table, certain
key bindings are established with which you can access Emacspeak
commands that make it possible to read the rows and columns of the table
and explore its structure efficiently.  To get a description of these
key bindings, you can use W3 to visit the sample HTML file supplied as
part of the Emacspeak distribution, and, after having moved point onto
the first row of the table, issue the command ‘C-h m’ ‘describe-mode’ to
create a help buffer containing an explanation of the features offered
by W3 mode.

   Emacspeak supplements the online help facilities available within
Emacs by defining several commands of its own, as follows:

   • ‘C-h c-e’ ‘describe-emacspeak’ presents a list of standard
     Emacspeak commands.

   • ‘C-e F’ ‘emacspeak-view-emacspeak-faq’ opens a new buffer
     containing the Emacspeak FAQ, a list of frequently asked questions
     about Emacspeak together with their answers.

   • ‘C-e <F1>’ ‘emacspeak-learn-mode’ enters a mode in which the
     function of every key that you type is spoken; this mode can be
     terminated with the ‘C-g’ ‘keyboard-quit’ command.


File: emacspeak.info,  Node: Emacs Packages,  Next: Running Terminal Based Applications,  Prev: Using Online Help,  Up: Top

10 Emacs Packages.
******************

Emacs — The extensible, self-documenting editor, derives its
functionality from its powerful extension mechanism.  This extension
mechanism is used to implement many user-level applications such as mail
readers, web browsers, software development environments and so on.
This chapter gives directions on how to locate the right Emacs package
for addressing specific tasks.  The chapter is organized into logical
sections that each pertain to a specific class of tasks; in individual
subsections within a section give a brief overview of particular Emacs
packages that have been speech-enabled.

   For a categorized list of speech-enabled applications on theEmacspeak
desktop, see <http://emacspeak.sf.net/applications.html>.  In Emacs 24
and later, you can use Emacs’ builtin package manager to install and
update packages.

* Menu:

* Document Authoring::
* Structured Editing::
* Browsing Structure::
* Web Browsing::
* Messaging::
* Editing Code::
* Development Environment::
* Desktop Management::
* Personal Information Management::
* Desktop Applications::


File: emacspeak.info,  Node: Document Authoring,  Next: Structured Editing,  Up: Emacs Packages

10.1 Document Authoring
=======================

The Emacspeak environment provides a rich collection of structured
document authoring tools.  These are well-suited for working in an
eyes-free environment — you clearly do not want to use a What You See Is
What You Get (WYSIWYG) authoring tool if you cannot see what you’re
getting.  Structure-based authoring tools allow you to focus on the act
of content creation, leaving the minutiae of visual layout to the
computer.

* Menu:

* Creating Well-formatted Documents::   Authoring Content.
* Search replace and spell check::   Fixing errors.


File: emacspeak.info,  Node: Creating Well-formatted Documents,  Next: Search replace and spell check,  Up: Document Authoring

10.1.1 Creating Well-formatted Documents
----------------------------------------

Before authoring a document, decide its primary audience if the document
contains relatively simple content e.g., no mathematical equations etc.
and is primarily targeted at the WWW, you are probably better off using
HTML. You can create well-structured HTML documents with the help of
package ‘nxml-mode’ for editing XML documents.  Another option is to use
‘org-mode’ to create a Wiki-like text document that can be easily
published to multiple output formats including HTML.

   Packages ‘org-mode’ and ‘nxml-mode’ are speech-enabled by Emacspeak
to provide auditory icons, structured navigation and outlines, as well
as voice locking for audio formatted feedback as you work.

   If the document being authored is more complex, you are usually
better off creating it in LaTeX. Note that LaTeX documents can be
converted to HTML either via package ‘tex4ht’ — available on the WWW.

   The TeX family of typesetting languages is suitable for producing
well-formatted documents in an eyes-free environment.  Unlike WYSIWYG
environments, the author of a TeX or LaTeX document works with the
content of the document, leaving it to the formatting system (TeX) to
format the document for good visual presentation.

   The ‘auctex’ package is an Emacs extension that facilitates authoring
and maintaining structured documents in TeX and LaTeX. Package ‘bibtex’
facilitates maintenance and use of ‘bibtex’ bibliography databases.  The
Texinfo package allows creation of software documentation that is
suitable for both printing as well as online viewing as hypertext.
Emacspeak speech-enables packages ‘auctex’, ‘bibtex’ and ‘texinfo’ to
provide convenient spoken feedback as you create documents.  For details
on using these packages, see their accompanying online info
documentation.

   As the document preparation system of choice, Emacspeak supports a
fluent speech-enabled interface to editing and formatting LaTeX
documents.  This interface is provided by speech-enabling _auctex_ mode.

   Mode _auctex_ provides efficient keyboard shortcuts for inserting and
maintaining LaTeX markup as a document is being authored.  All of these
editing commands provide succinct auditory feedback when used with
Emacspeak.  The syntax coloring provided by this mode is extended to
provide _ voice locking_ — consequently, Emacspeak uses different voices
to speak the embedded markup to set it apart from the content.

   Mode _auctex_ can be used to create empty document templates and to
insert document content at the appropriate places in the template.  The
mode also enables structured navigation of the document as it is being
edited.  Emacspeak speech-enables these template creation and structured
navigation commands to produce auditory icons and succinct spoken
feedback.  For example, while editing, the user can quickly browse
through the sections of the document and have each section title spoken.
Document elements such as paragraphs and bulleted lists can be
manipulated as logical units.  These features are especially relevant in
an eyes-free environment where the user needs to select logical parts of
the document without having to point at portions of a visual display.


File: emacspeak.info,  Node: Search replace and spell check,  Prev: Creating Well-formatted Documents,  Up: Document Authoring

10.1.2 Searching, Replacing, And Spell Checking
-----------------------------------------------

Incremental search, a process by which the system prompts the user for a
search string and moves the selection to the next available match while
allowing the user to add more characters to the search string, is the
search technique of choice among most Emacs users.  As the system
successively finds each match, it provides the user the option of
continuing the search.  Incremental search is a more complex instance of
traditional search interaction because in addition to either stopping or
continuing the search, the user can modify the current search in a
number of ways including specifying a longer (or shorter) search string.

   All of the user commands available during incremental search are
documented in the online Emacs info manual.  These are speech-enabled by
Emacspeak to provide spoken prompts as the dialog begins; auditory icons
indicate a search hit or search miss as the search progresses.  Along
with auditory icons _search-hit_ and _search-miss_ the user also hears
the current line spoken, and in the case of a search hit, the matching
text is _aurally_ highlighted by using the standard audio formatting
technique of changing voice characteristic.  This feedback proves
extremely effective when the search pattern appears several times on a
single line; the user is unambiguously cued to the current match.

   Search and replace actions are an extension to the basic
conversational gestures of a search dialog.  In addition to specifying a
search string, the user also specifies a replacement string.  On the
Emacspeak desktop, this functionality is provided by command
_query-replace_.  The speech-enabled version of this interaction prompts
the user for the search and replacement texts.  The auditory feedback
during the interactive search and replacement process parallels that
described in the case of incremental search.  Audio formatting to
indicate the occurrence that is about to be replaced proves an effective
means of avoiding erroneous modifications to the text being edited.  As
an example, consider using command _ query-replace_ to locate and
replace the second occurrence of foo with bar in the text

   ‘Do not change this fool, but change this food.’

   When the search matches the first occurrence of foo in word _fool_,
the aural highlighting helps the user in answering “no” in response to
question “should this occurrence be replaced”.  In addition to allowing
the user to supply a simple “yes or no” answer for each match, command _
query-replace_ also allows the user to specify a number of other valid
answers as described in the online Emacs documentation.

Spell Checking
..............

A more complex instance of conversational gesture “search and replace”
is exhibited by standard spell checking dialogues.  Spell checking
differs from the search and replace dialog described above in that the
search and replacement text is guessed by the system based on an
available dictionary.  Words that are not found in the dictionary are
flagged as potential spelling errors, and the system offers an
interactive search and replace dialog for each of these possible errors.
During this dialog, the system successively selects each occurrence of
the possibly erroneous word and offers a set of possible replacements.
Unlike in the case of simple search and replace, more than one possible
replacement string is offered, since a potential spelling error can be
corrected by more than one word appearing in the dictionary.

   In the visual interface, such spell checking dialogues are realized
by displaying the available choices in a pop-up window and allowing the
user to pick a correction Once a correction is selected, the user is
offered the choice of interactively replacing the erroneous word with
the correction.

   The spell checking interface on the Emacspeak desktop is
speech-enabled to provide fluent auditory feedback.  The visual
interface parallels that described above and is provided by package
‘ispell’ which is part of the standard Emacs distribution.  Emacspeak
provides a spoken prompt that is composed of the line containing the
possibly erroneous word (which is aurally highlighted to set it apart
from the rest of the text on that line) and the available corrections.
Each correction is prefixed with a number that the user can use to
select it.  Once a correction is selected, the interaction continues
with the query and replace interaction described earlier.  The speech
interface to the spell checker is as fluent as the visual interface.
Notice that Emacspeak users do not need to concern themselves with the
details of the visual display such as “the corrections are displayed in
a window at the top of the screen”.

   In addition to the standard spell checker described above, newer
versions of Emacs include an “on-the-fly” spell checker that flags
erroneous words as they are typed.  Emacspeak speech-enables package
‘flyspell’ so that such erroneous words are aurally highlighted.


File: emacspeak.info,  Node: Structured Editing,  Next: Browsing Structure,  Prev: Document Authoring,  Up: Emacs Packages

10.2 Structured Editing And Templates
=====================================

Editing documents based on the inherent structure present in the
electronic encoding can be very efficient when using spoken interaction.
We described mode _ auctex_ — a specialized interface to authoring LaTeX
documents as a special instance of such structured editing in *note
Document Authoring::.

   The Emacspeak desktop allows the user to efficiently author and
maintain an electronic document based either on the structure present in
the markup (as in the case of mode auctex) or on special outlining
constructs that allow the user to impose a desired logical structure on
the document.  This section describes the effect of speech-enabling such
editing tools and points out the advantages in using these in a speech
oriented interface.

   Template-based authoring — a technique that allows the user to create
a document by inserting contents into appropriate positions in a
predefined template — goes hand in hand with such structured editing.
Finally, structured editing can vastly simplify the creation and
maintenance of structured data, for example, the data present in a UNIX
password file.  Such data files are in fact nothing more than a
collection of database records, where each record (or line) consists of
a set of fields delimited by a special character.  Maintaining such
files without exploiting the underlying structure often tends to be
error prone.  We describe editing modes that can exploit such record
structure to provide a fluent editing interface.  Finally, we outline a
speech-enabled interface to a spreadsheet application as a complex
instance of such structured data editing.

* Menu:

* Outline Editing ::             Editing and navigating outlines.
* Template-based Authoring::     Creating and Filling Templates.
* Maintaining Structured Data::   Structured Data.


File: emacspeak.info,  Node: Outline Editing,  Next: Template-based Authoring,  Up: Structured Editing

10.2.1 Outline Editing
----------------------

All of the various outline editing interfaces on the Emacs desktop allow
the user to _ hide_ or _ show_ the contents at the different levels of a
possibly nested tree structure.  Components of this tree structure can
be manipulated as a unit, e.g., entire subtrees can be deleted or
copied.  Outline editing thus provides an efficient means of obtaining
quick overviews of a document.

   The visual interface displays such hidden content as a series of
ellipses following the visible outline heading.  Emacspeak produces
auditory icon _ ellipses_ when speaking such outline headings.

   The basic _ outline mode_ allows the user to specify the syntax and
level of outline header lines as a regular expression.  This simple
technique can be used to advantage in the structured navigation of large
electronic texts such as those available on the Internet from online
book projects such as project Gutenberg and the Internet Wiretap.  For
example, when this feature is activated while reading the electronic
text of a Shakespearean play, the different acts can be recognized as
separate nodes in the logical structure of the document.  The user can
then hide the document body with a single keystroke, navigate the
outline headings to find a particular act, and have that portion
rendered either visually or aurally.  Hiding an outline level produces
auditory icon _ close-object_; exposing a hidden level produces auditory
icon _ open-object_.  For details on using mode ‘outline’, see the
relevant section of the online Emacs info manual.

   The basic outline facility described above is applicable to all
content being edited or browsed on the Emacspeak desktop.  In addition,
Emacspeak has other specialized outline editing modes such as _ folding
mode_ that provide extended outlining facilities.  In mode _ folding_,
the user can create (possibly nested) _ folds_ — logical containers of
content that are delimited by a special _ fold mark_.  The fold mark is
typically a text string that is chosen based on the type of content that
is being manipulated.  Thus, when _ folding_ a C~program source file,
fold marks are created from C~comments.  The user can _ open_ or _
close_ any or all folds in a document, and these actions are accompanied
by auditory icons _ open-object_ and _ close-object_.  By entering a
fold, all editing actions are restricted to the contents of that fold;
this proves a simple yet convenient way of constraining editing actions
such as search and replace to specific portions of large documents.
Folds can be manipulated as a unit and can be deleted, copied or moved.

   Mode _ folding_ proves especially effective in maintaining large
software modules.  The technique can be used to advantage by creating
folds for different sections in a module and by further placing each
function appearing in a particular % section in a fold of its own.
Complex functions can themselves be folded into sections where each
section reflects a different stage in the algorithm implemented by that
function.  Thus, the technique of folding can be used as an effective
aid in _ literate_ programming.  I typically write software modules by
first creating an outline structure using folds that reflect the various
components of that module.  Next, I populate each fold with the function
signatures and documentation for the functions in each section.  When I
am satisfied with the overall architecture of the module, I fill in the
function skeletons with actual program code.  This technique is used
extensively in maintaining the Emacspeak code base.


File: emacspeak.info,  Node: Template-based Authoring,  Next: Maintaining Structured Data,  Prev: Outline Editing,  Up: Structured Editing

10.2.2 Template-based Authoring
-------------------------------

Emacspeak supports two powerful template-based authoring subsystems that
enable the user to quickly create and fill in templates.  _ Dmacro_
(short for “dynamic macros”) allows the user to define and invoke
template-based macros that are specialized for creating different types
of content.  For example, when programming in C, the user can invoke
dynamic macros that insert skeletons of standard C constructs with a few
keystrokes.  This form of editing has numerous advantages in creating
consistently structured code when developing large software modules.
Emacspeak speech-enables mode _ dmacro_ to provide succinct spoken
feedback as templates are created and filled.  The user invokes _
dmacro_ via command _ insert dmacro_, which is typically bound to a
single key.  This results in a dialog where the user is prompted to pick
one of the dynamic macros available in the current context.  If the
users choice can be uniquely completed, that completion is spoken;
otherwise, the list of possible completions based on the available
partial input is spoken, accompanied by auditory icon _ help_.

   An alternative template-editing facility is provided by mode _ tempo_
This mode is designed to be used in creating template-based editing
tools for specific markup languages; a good example is mode _
html-helper_, a mode for creating and updating HTML documents for
publishing on the WWW (see *note Document Authoring::).


File: emacspeak.info,  Node: Maintaining Structured Data,  Prev: Template-based Authoring,  Up: Structured Editing

10.2.3 Maintaining Structured Data
----------------------------------

Consider the following entry from file ‘ /etc/passwd’ on my laptop.

   ‘aster:KoUxwQ2:501:100:Aster Labrador:/home/aster:/bin/bash’

   File ‘ /etc/passwd’ is a simple instance of a text file that stores
structured data records as a series of fields delimited by a special
character.  Each item in the file acquires _ meaning_ from the _
position_ in which it occurs for example, the fifth field contains the
user name, Aster Labrador.  More generally, structured data where each
field in a record has _ meaning_ is found throughout the desktop in
applications ranging from entries in a rolodex to rows in a spreadsheet.

   Typically, users do not directly edit the stored representation of
the data.  Instead, application front-ends provide a more human-centric
(and hopefully less error prone) user interface for modifying and
maintaining the data.  Thus, spreadsheet applications present the data
as a two dimensional table that is automatically updated to reflect
changes in the underlying data.  The two dimensional table is perhaps
the most commonly found visual front-end to structured data tables with
row and column headers prove a succinct way of implicitly displaying the
_ meaning_ along with the _value_ of the fields making up each data
record.


File: emacspeak.info,  Node: Browsing Structure,  Next: Web Browsing,  Prev: Structured Editing,  Up: Emacs Packages

10.3 Browsing Structure
=======================

This section describes packages that allow you to browse structured
information — these are distinct from the tools described in *note
Structured Editing::, in that they are typically used for working with
content that is read-only e.g., online documentation.


File: emacspeak.info,  Node: Web Browsing,  Next: Messaging,  Prev: Browsing Structure,  Up: Emacs Packages

10.4 Web Browsing.
==================

Note that there is newer material at
<http://emacspeak.blogspot.com/2014/05/emacspeak-eww-updates-for-complete.html>
and in *Note emacspeak-eww::.  For Emacs 24.4 and later, note that the
built-in Web browser EWW is also the browser of choice for emacspeak.

   — T. V. Raman, October 2014.

   This document, “The State of Web Browsing in Emacspeak” describes the
primary web browsers in use under emacspeak and ways they might be used
more efficiently.

   Version 1.0 — February, 2007.

   Copyright © 2007 Robert D. Crawford <rdc1x@comcast.net>

* Menu:

* Intro::               Why this document and what it is about
* emacs-w3::            Browsing the web with emacs/w3
* Add-ons::             Add-ons to make life better
* Conclusion::          Wrapping it up


File: emacspeak.info,  Node: Intro,  Next: emacs-w3,  Up: Web Browsing

10.4.1 Intro
------------

Web browsing in emacspeak can be made as simple or as complicated as you
wish to make it.  On the one hand, all that need be done is to open a
web browser and fetch a particular url.  This works fine in many cases
with exceptions being things like html tables.  On the other hand, if
you spend a little time learning a particular browser and its
functionality, web browsing can be made more efficient and the web more
navigable.

   This document is intended to be an introduction to the 2 primary
browsers that run under emacs: emacs/w3 and EWW. I also intend to
introduce a couple of add-on packages intended to make life easier and
to address specific shortcomings.

   The primary reason for this documentation is the fact that a lot of
the documentation of the various functions tells exactly what it does,
but not why or in what circumstance one might use it.  Hopefully I can
remedy that here.

Who this document is intended for
=================================

While this document is geared toward emacspeak users, it might be
helpful for other users as well.  I have tried to note where functions
are specific to emacspeak.

Assumptions
===========

This document assumes emacs is installed.  If reading the section on a
particular browser and trying out the associated functions, it, of
course, assumes that the browser is installed and working.  For features
specific to emacspeak, a working install of emacspeak is necessary.  It
is far beyond the scope of this document to help with the installation
of these programs.

   For help with installing any of the above bits of software, the
following mailing lists and / or newsgroups are available:

   • emacs - ‘gnu.emacs.help’

   • emacs/w3 - the mailing list for w3 is pretty dead.  Sorry.  The
     documentation is, however, not terrible.

   • emacspeak - see <http://emacspeak.sf.net>

   It is highly suggested that the mailing list archives, google, and
the relevant documentation be consulted before posting messages to any
mailing list.  Nothing is more irritating than answering the same
questions over and over.  Those of you with kids know what I am talking
about.

   It is also assumed that the reader is comfortable with using emacs
itself.  Understanding the convention for communicating keystrokes to
run commands, navigating documents, and the like are not covered.


File: emacspeak.info,  Node: emacs-w3,  Next: Add-ons,  Prev: Intro,  Up: Web Browsing

10.4.2 emacs-w3
---------------

emacs/w3 is a web browser written completely in emacs lisp.  It has some
really nice features applicable to the emacspeak community such as the
ability to navigate tables and support for the w3c’s aural cascading
stylesheets.

emacs/w3 advantages
===================

As mentioned above, the ability to navigate tables is a super help.
emacs/w3 also has support for cascading stylesheets.  This allows
incredible control of voices used for what would normally be visual
attributes of the text such as bold, italics, preformatted text and the
like.

   Another advantage of emacs/w3 is that it is written completely in
emacs lisp.  With some effort, emacs/w3 is very customizable and quite
extendable.

emacs/w3 disadvantages
======================

Rendering can be slow.  Sometimes it can be painfully, excruciatingly
slow.  That might be a slight exaggeration, but slow it is.  This is
because it is written in lisp...  something I mentioned just above as a
strength.  It is a trade-off, but one that some see as worth it.  There
are, however, some things that can be done to speed up the browsing
process.  See *Note ‘emacspeak-w3-xsl-transform’: xsl-transform, for
more information.

   Another disadvantage is that emacs/w3 chokes on some pages.
Sometimes it gives error messages and doesn’t display anything.
Sometimes it does this to some people and doesn’t do it to others as we
saw on the emacspeak mailing list a short time ago.  Sometimes it gives
error messages and renders the page anyway.

   One other major annoyance of emacs/w3 is that sometimes it simply
stops doing anything while rendering a page.  There is a way I have
found to get around this.  I hit ‘C-g’.  I usually wait five to ten
seconds and then simply quit, using ‘C-g’.  Not always, but usually, the
page has already completed downloading and is being rendered and it
therefore is not a problem.

   emacs/w3 also has no bookmark functionality.  This can be remedied in
several ways.  One simple way, mentioned below, is to use the emacs
package bmk-mgr.  Another way is to use org mode with remember which is
the method used by Dr.  Raman, the author of emacspeak.  See *Note
bmk-mgr: bmk-mgr, later in this manual, for more information.

   History back and next in the browser also seem to be broken but this
is not generally a problem for me as I never look back.

emacs/w3 native functions
=========================

Many functions for efficient navigation of the internet are native to
emacs/w3.  Some of the most useful functions are listed below

   Unlike emacs-w3m, the information presented by ‘describe-mode’ is
very complete, but a little terse.  All the function names are listed
and asking for help on particular functions works well.  That being
said, use this list to augment, not replace, the built-in help that is
available in emacs.

   ‘C-f’ will open a new buffer containing the cell point is in.  In
most instances, this works very well.  Imagine you are looking at a page
that is divided into 4 distinct areas: a cell at the top of the page
that contains a banner and some navigation, and a “body” area that is
divided into three sections consisting of more navigation, an article,
and advertisement.  If point is in the main article cell, using ‘C-f’
will open another buffer that contains only the text of that cell, the
article you are interested in.

   One caveat is that this does not always work as advertised.
Sometimes the leftmost character of each line is missing.  At least it
makes for interesting reading.  Usually when I have this problem I
simply exit that buffer and linearize the tables in the original page.

   The ‘m’ key executes a very useful command.  It will complete a link
on the page.  Imagine that you are reading through a document and you
hear a link that you need to visit.  You could tab through all the links
until you hear the one you want or you could hit the ‘m’ key and enter
the link text at the prompt.  Completion is available and it is not
case-sensitive.  Efficient, no?

   The period in a cell will speak the contents of that particular cell.
This command is, in my opinion, most useful when navigating tables with
cells that have only one paragraph or less.  I tend to not read whole
articles in this manner because, inevitably, someone will interrupt me
and I will lose my place.

   The equals key, while in a table cell will give you the cell
information.  It tells you the row and column position, the size of the
table, and at what nesting level the table is.

   The pipe key, is used to read the table column.  As this command
seems to read the rectangle the column is in, this command is most
useful when used in a table where there is no column spanning, i.e.  all
rows and columns are uniform.

   Here is a list of table navigation commands:

   • ‘C-e +’ moves to the beginning of the next table row.

   • ‘C-e -’ moves to the beginning of the previous table row.

   • ‘C-e <’ moves to the beginning of the table.

   • ‘C-e >’ moves to the end of the table.

   • ‘C-e =’ moves to the top of the table column.

   • ‘C-e <DOWN>’ moves to the next cell down in the same column.

   • ‘C-e <UP>’ moves to the previous cell in the same column.

   • ‘C-e <LEFT>’ moves to the previous cell in the same row.

   • ‘C-e <RIGHT>’ moves to the next cell in the same row.

   As you can see, table navigation in w3 can be easy and fun.

emacspeak specific functions for emacs/w3
=========================================

An incredible amount of work has been done by the emacspeak community to
make emacs/w3 accessible to those with visual impairments.  Here is an
explanation of some of those functions.

   The command ‘C-t’ will toggle the visibility of table borders.  This
command might be useful where you want to hear all punctuation symbols
on a page but the table characters get in the way.

   The quote key will execute a command that allows you to skim the
contents of the buffer.  it will read the page, paragraph-by-paragraph,
pausing between paragraphs to prompt you to move on by pressing <SPACE>.
If you hit <SPACE> in the middle of a paragraph, it skips to the next
paragraph.

   Another skimming command is bound to the ‘z’ key.  This will allow
you to zip through web pages by logical blocks such as div, paragraph,
and table tags.

   Using the imenu facilities is another way of skimming the document
and getting to the information you desire.  imenu works especially well
for well-structured documents.  The first thing that need be done is to
copy the ‘w3-imenu.el’ file from the ‘contrib’ directory of the ‘w3’
directory to somewhere in your load path.  I am using the cvs version of
w3 and my w3 directory is under ‘/home/rdc/sourceforge’.  The easiest
thing to do is probably to do an ‘M-x locate’ and search for
‘w3-imenu.el’ to see where it is.  After locating the file, move it into
your load path.  In my case I have it under
‘/home/rdc/share/emacs/site-lisp/’.

   There are two ways to use the imenu facilities: automatically and
manually.  Since I do not use imenu on every site, I prefer to invoke it
manually to save the time required to build the index.

   Once things are in place, invoke imenu with the ‘j’ key.  This will
ask you for an index position.  Hitting <TAB> will give you a list of
the possible index positions.  Another way of navigating the document
would now be to use the keys ‘M-n’ and ‘M-p’ to go to the next and
previous index positions.  Note that you have to build an index for a
page before you can use these commands.

   ‘Cap A’ and ‘cap R’ serve the same function.  ‘Cap A’ browses the
Atom feed at point and ‘cap R’ browses the rss feed at point.  This is
useful to sample the feed, so to speak, before going through the trouble
of configuring your feed reader to fetch the feed.  It might also be
useful to grab the headlines from a page and present them in a more
concise, readable format.  If using the sort-tables xsl transform, there
will be a link at the top of the page if there is an rss feed available.
See *Note emacspeak atom and emacspeak rss: rss, for more information.

   Google provides many useful tools for web surfers.  The following
commands are useful to access much google goodness.

   ‘Cap C’ extracts the current page from the google cache.  With a
prefix argument it will extract the link under point.  This is useful
for those times when a particular site is down...  maybe it is in the
cache...  maybe it is not.  It can also be used for when particular
pages are removed from a site like in the case of a government
conspiracy.  Are we at war with Eurasia or East Asia?

   The slash key will search google for pages similar to the current
page.

   The command ‘g’ will do a google search restricted to the site of the
document.

   The ‘l’ command googles for who links to this page.

   The command ‘t’ runs the url under point through the google
transcoder.  This is useful for sites that are heavy on the use of
tables and the xsl transforms are not helpful.  It also works on some
sites that use javascript to go to the next page in the story, such as
Reuters.  Using a prefix argument with this command will untranscode the
url under point for pages that are currently transcoded.

   ‘Cap T’ will jump to the first occurrence of the title in the
document.  Multiple consecutive executions of this command will jump to
further occurrences.  This command is probably one of the most useful
timesavers while web browsing.

   ‘M-s’ jumps to the “submit” button for the form you are editing.

   ‘M-r’ plays the media stream at point with the default media player.

   The ‘y’ command will rewrite the url of the url under point.  This is
useful for those sites you frequent.  Often, sites that have printer
friendly content have a specific way in which the url is written.  For
The first time you run this command in a particular buffer you are
prompted for a pattern to use.  The pattern is in the form of

   ‘("from string" "to string")’

   The opening paren is supplied.  Remember to quote the strings or you
will get an error.  From this point on, until you kill the buffer in
which you wrote the rule, hitting ‘y’ on a link will use this rewrite
rule to visit the page.  If you mistyped the rule, providing a numeric
argument will allow you to rewrite the rewrite rule.  I love
alliteration.

   Saving the best for last, ‘e’ is the xsl map prefix.  As I mentioned
in the section on emacs-w3m, xsl transforms are some powerful magic that
takes a web page and transforms it in some way.  Linearizing tables is a
good example, and the one I use most often.

   The keystroke ‘e a’ prompts for an xsl transform to apply to the
current page.  If you know the name of the particular transform you want
you can use tab completion to select it.  Otherwise, you can hit <TAB>
to get a buffer that contains the list of choices.

   If you know that you want a particular transform done automatically
you can use the command ‘e s’ to select a transform and then ‘e o’ to
turn xslt on (the same command will turn xslt off).  Then, every page
opened from that point on will have the transform applied.

   There is the variable ‘emacspeak-w3-xsl-transform’ that can be set
via the usual methods.  This variable specifies a transform to use
before displaying a web page.  There is an advantage to turning on xsl
transforms all the time.  If you use the ‘identity.xsl’, the
‘linearize-tables.xsl’ or the ‘sort-tables.xsl’ it can actually speed up
rendering of the page.  This is because the transforms provide clean and
balanced html to the renderer.  Additionally, using ‘sort-tables.xsl’ or
‘linearize-tables.xsl’ will provide a little more boost as rendering
nested tables is particularly difficult for a web browser.

   Sometimes it is just easier to read the printer friendly version of a
story instead of having to linearize the tables and search for the
content.  Also, some sites, like the New York Times, I believe, make you
navigate several pages to read the whole story, but if you select a
“Print this story” link you can read the entire story on one page
formatted without a lot of the cruft on the normal page.  This is where
the ‘e Cap P’ command comes in.  It will extract all the print streams
from the current document.

   Closely associated commands are ‘e r’ and ‘e Cap R’ which extract the
media streams from the current page and from the link under point,
respectively.

   The command ‘e y’ is another command that is useful for frequented
sites.  It does the same as the ‘y’ command above in that it rewrites
the url at point and follows it.  In addition, it filters the output by
a particular CSS class.

   The command ‘e e’ does more magic to the url at point.  It processes
the url using a specific function.  For example, it can be used in
retrieving radio content from the BBC. If you execute ‘C-e u’ and type
in ‘BBC Channel On Demand’ or use tab completion to get the same, and
then type in ‘radio4’ you will be presented with a page containing a
plethora of links to other pages containing information about particular
shows.  On these pages there is, somewhere, a link that will play the
program.  If you hit enter on one of the links on the first page, you
will be taken to one of these description pages.  By using the ‘e e’
command on a link you cut out this middle step and proceed directly to
playing the program you are interested in.

   If there is no executor defined for a current buffer, hitting <TAB>
after ‘e e’ will give you a list of possibilities to choose from.  One
nice feature of this function is that it can be used for any function.
If you cannot remember the keystroke that will play the url under point
in ‘emacspeak-m-player’, but you know what it is called, you can hit ‘e
e’ and then enter the name of the function.  Nice.

   The ‘e f’ command will run the current page through an XPath filter
and return the results.  For more information on XPath, see
<http://en.wikipedia.org/wiki/XPath>.  If you wanted to see only the
links on a page, when prompted enter ‘//a’ and you will be returned
every link on the page.  If you wanted to see only the contents of “p”
tags, you would enter ‘//p’.  This can be useful for many things, form
elements included.  Giving this command a prefix argument will reverse
the filter, giving you everything but the content of the specified tag.

   A related command can be invoked with the ‘e p’ keystroke.  This
command does the same as the filter above but works on the url under
point.

emacs/w3 tips and tricks
========================

As I mentioned above, using ‘C-g’ when it seems the browser is not
responding will often display the page with no ill effects.  Your
mileage may vary.  Taxes, tags and title are extra.

   Also mentioned above is the use of sort-tables or identity as an xsl
transform to speed up the rendering of pages.  Every little bit helps.

   Another useful tip is the use of the ‘k’ key.  This key will place
the current url in the kill-ring for later yanking.  If a page will not
render correctly, using ‘k’ will get the url and allow me to pass it to
emacs-w3m.  The counterpart to this command, ‘cap K’ puts the url under
point in the kill-ring.


File: emacspeak.info,  Node: Add-ons,  Next: Conclusion,  Prev: emacs-w3,  Up: Web Browsing

10.4.3 Add-ons
--------------

Some of these are emacspeak specific, some are not.  You can usually
tell by the name.

emacspeak url template
======================

I love this package.  Since changing my primary browser to emacs/w3 I
have really been giving the ‘url-template’ package a workout.  The
‘url-template’ package contains templates that prompt you for
information to supply to various sites to retrieve information without
all the fuss of having to go to the site and navigate it.  One really
nice thing about url-templates is the fact that they need not be web
pages.  Media streams can also be made into url-templates.

   The way to get to the templates is with the command ‘C-e u’.  A <TAB>
at the prompt will give you a list of the available templates.  You
should go now and have a look at the info manual section on *Note URL
Templates: URL Templates, and read it.  I’ll wait here.

   By the way, the ones I find most useful are the “Google Hits”,
“emacswiki search” “NPR On Demand” and “Weather forecast from Weather
Underground”.

emacspeak atom and emacspeak rss
================================

These are fairly simple rss and atom browsers for the emacspeak desktop.
Using the Customize interface you add feeds in the form of titles and
urls.  Then you call the readers with ‘C-e C-u’ for rss feeds and use
‘M-x emacspeak-atom-browse’ for atom feeds.  There is also emacspeak
support for newsticker, an rss / atom reader that is a part of emacs 22,
but I have never used it.

   I personally use *note gnus: (gnus)Top, for rss feeds but setting
gnus up for only that purpose is like hunting rabbits with a bazooka.

emacspeak websearch
===================

‘emacspeak-websearch’ provides more search options than you can shake a
stick at; ‘emacspeak-websearch’ provides search for dictionaries, news
sites, software sites, google tools, weather, currency converter and
much more.  It can be accessed with the keystroke ‘C-e ?’.  At the
prompt, you can enter another question mark to get a list of the
available search options.  You will then be prompted for the necessary
information.  One of the nice things about this package is that it
attempts to jump to and read the most relevant information on the result
page.  Module ‘emacspeak-websearch’ is complemented by module
‘emacspeak-url-template’; that module provides URL templates that prompt
for and retrieve the relevant information from complex Web pages.

   *Note emacspeak-websearch: emacspeak-websearch, and *Note
emacspeak-url-template: emacspeak-url-template, for more information.

bmk-mgr
=======

This is a newcomer to the emacspeak world.  In the interest of full
disclosure, I am the one that wrote the emacspeak module that makes this
package accessible.  It is a bookmarks manager that works with both
emacs/w3 and emacs-w3m.  As of the writing of this document there are
still some issues, especially when using it on emacs version 22, but
those are being worked on.  I think this is a good solution to the
problem of emacs/w3 not having bookmarks functionality and providing one
central bookmark location for those who regularly use both browsers.
See <http://www.emacswiki.org/cgi-bin/wiki/EmacsBmkMgr>, for more
information.


File: emacspeak.info,  Node: Conclusion,  Prev: Add-ons,  Up: Web Browsing

10.4.4 Conclusion
-----------------

emacspeak makes the internet not only accessible to those with visual
impairments, but it makes browsing and information retrieval quick and
efficient.  If a user will spend a little time up front to learn the
tools available to access the web, the increase in efficiency and
ability will more than make up for the time spent.  The nice thing about
these tools is that you can integrate them in your day-to-day as you
have the time.  While it is not necessary to use everything mentioned in
the above document, if you add some of these tools to your repertoire
you will not be sorry.

   In the end, no one makes you use a hammer to drive nails but it sure
beats using a banana.


File: emacspeak.info,  Node: Messaging,  Next: Editing Code,  Prev: Web Browsing,  Up: Emacs Packages

10.5 Messaging
==============

Working with messaging applications involves both authoring and browsing
content.  Emacspeak provides a rich set of speech-enabled messaging
tools.  Further, all of the tools described in the previous sections
integrate smoothly with the messaging applications described here; this
means that you do not need to re-learn a new set of work habits when
dealing with content in your messaging application.


File: emacspeak.info,  Node: Editing Code,  Next: Development Environment,  Prev: Messaging,  Up: Emacs Packages

10.6 Editing Code
=================

Files containing program source code form a very specific class of
structured documents.  Unlike documents meant for human consumption that
are often only loosely structured, program source (as a concession to
the computer’s intolerance of lack of structure) are per force
well-structured and adhere to a fairly stringent syntax.

   The Emacs environment provides editing modes that are specific to
creating and maintaining software written in most popular programming
languages.  Many of these editing modes are speech-enabled by Emacspeak.
Speech-enabling these modes includes providing a rich set of
navigational commands that allow you to move through the source
efficiently.  In addition, Emacspeak’s core voice-lock facilities are
used to produce audio formatted output — this helps you spot errors
quickly.


File: emacspeak.info,  Node: Development Environment,  Next: Desktop Management,  Prev: Editing Code,  Up: Emacs Packages

10.7 Development Environment
============================

In addition to providing specialized editing modes for creating and
maintaining program source, Emacs provides a rich set of software
development tools that can be combined to create powerful Integrated
Development Environments (IDE). These IDEs are speech-enabled by
Emacspeak to provide a versatile and powerful environment for eyes-free
software development.


File: emacspeak.info,  Node: Desktop Management,  Next: Personal Information Management,  Prev: Development Environment,  Up: Emacs Packages

10.8 Desktop Management
=======================

Emacs provides an integrated environment for performing all of ones
day-to-day computing tasks ranging from electronic messaging to software
development.  The environment derives its power from the fact that this
integration allows for content to be handled across different tasks in a
seamless manner.  In order to work effectively with large Emacs sessions
with many documents and applications open at the same time, the
Emacspeak desktop provides a powerful collection of desktop management
tools designed to help the user easily locate objects that pertain to a
given task.


File: emacspeak.info,  Node: Personal Information Management,  Next: Desktop Applications,  Prev: Desktop Management,  Up: Emacs Packages

10.9 Personal Information Management
====================================

This section describes speech-enabled tools designed to aid in personal
information management such as maintaining a daily calendar.


File: emacspeak.info,  Node: Desktop Applications,  Prev: Personal Information Management,  Up: Emacs Packages

10.10 Desktop Applications
==========================

10.10.1 Spread Sheets
---------------------

Spreadsheet applications present a two dimensional view of structured
data where the field values are (possibly) mutually dependent.  On the
Emacspeak desktop, a speech-enabled spreadsheet application can be used
to manipulate such data-driven documents ranging from simple cheque
books and expense reports to complex investment portfolios.  Where the
traditional visual interface to spreadsheets is typically independent of
the semantics of the data stored in the spreadsheet, the speech-enabled
interface is derived from the _ meaning_ of the various fields making up
the data.  When presenting such information on a visual display,
implicit visual layout can be used to cue the user to the meaning of
different data fields.  On the other hand, in the case of an actively
scrolling auditory display, the spoken output needs to explicitly convey
both the value and interpretation of the different data items.  In
addition, the interface needs to enable an active dialog between user
and application where the user is able to query the system about the
possible meaning of a particular item of data.  Finally, the aural
interface needs to enable _ multiple_ views of the display.  In the
visual interface, such _ multiple_ views are automatically enabled by
the two dimensional layout combined with the eye’s ability to move
rapidly around the layout structure.  Thus, while viewing any particular
row of a portfolio, one can immediately see the current total value as
well as the net gain or loss.  The Emacs spread-sheet package ‘dismal’
can be retrieved from ‘ftp://cs.nyu.edu/pub/local/fox/dismal’.

10.10.2 Forms Mode
------------------

_ Forms_ mode an Emacs mode designed to edit structured data records
like the line shown from file ‘ /etc/passwd’ presents a user-friendly
visual interface that displays the field name along with the field
value.  The user can edit the field value and save the file, at which
point the data is written out using the underlying ‘ :’ delimited
representation.  Mode _ forms_ provides a flexible interface to
associating meaning to the fields of such structured data files.  For
details on it use, see the forms-mode section of the online Emacs info
documentation.

10.10.3 OCR — Reading Print Documents
-------------------------------------

Module ‘emacspeak-ocr’ implements an OCR front-end for the Emacspeak
desktop.

   Page image is acquired using tools from package ‘SANE’ (Scanner
Access Now Easy).  The acquired image is run through the OCR engine if
one is available, and the results placed in a buffer that is suitable
for browsing the results.  This buffer is placed in mode
‘emacspeak-ocr-mode’ a specialized mode for reading and scanning
documents.

10.10.3.1 Emacspeak OCR Mode
............................

Emacspeak OCR mode is a special major mode for document scanning and
OCR.

   Pre-requisites:

   • A working scanner back-end like SANE on Linux.

   • An OCR engine.

   Make sure your scanner back-end works, and that you have the
utilities to scan a document and acquire an image as a tiff file.  Then
set variable EMACSPEAK-OCR-SCAN-IMAGE-PROGRAM to point at this utility.
By default, this is set to ‘scanimage’ which is the image scanning
utility provided by SANE.

   By default, this front-end attempts to compress the acquired tiff
image; make sure you have a utility like ‘tiffcp’.  Variable
EMACSPEAK-OCR-COMPRESS-IMAGE is set to ‘tiffcp’ by default; if you use
something else, you should customize this variable.

   Next, make sure you have an OCR engine installed and working.  By
default this front-end assumes that OCR is available as ‘/usr/bin/ocr’.

   Once you have ensured that acquiring an image and applying OCR to it
work independently of Emacs, you can use this Emacspeak front-end to
enable easy OCR access from within Emacspeak.

   The Emacspeak OCR front-end is launched by command “emacspeak-ocr”
bound to ‘C-e C-o’.

   This command switches to a special buffer that has OCR commands
bounds to single keystrokes — see the key-binding list at the end of
this description.  Use Emacs online help facility to look up help on
these commands.

   Mode “emacspeak-ocr-mode” provides the necessary functionality to
scan, OCR, read and save documents.  By default, scanned images and the
resulting text are saved under directory ‘~/ocr’; see variable
EMACSPEAK-OCR-WORKING-DIRECTORY.  Invoking command
“emacspeak-ocr-open-working-directory” bound to ‘d’ will open this
directory.

   By default, the document being scanned is named ‘untitled’.  You can
name the document by using command “emacspeak-ocr-name-document” bound
to ‘n’.  The document name is used in constructing the name of the image
and text files.

   Here is a list of all emacspeak OCR commands along with their
key-bindings and a brief description:
‘digit’
     “emacspeak-ocr-page” Jumps to specified page in the OCR output.

‘c’
     “emacspeak-ocr-set-compress-image-options”

     Interactively update image compression options.  Prompts with
     current setting in the minibuffer.  Setting persists for current
     Emacs session.

‘i’
     “emacspeak-ocr-set-scan-image-options” Interactively update scan
     image options.  Prompts with current setting in the minibuffer.
     Setting persists for current Emacs session.

‘spc’
     “emacspeak-ocr-read-current-page” Speaks current page.
‘s’
     “emacspeak-ocr-save-current-page” Saves current page as a text
     file.

‘p’
     “emacspeak-ocr-page” Prompts for a page number and moves to the
     specified page.

‘]’
     “emacspeak-ocr-forward-page” Move forward to the next page.

‘[’
     “emacspeak-ocr-backward-page” Move back to the previous page.

‘d’
     “emacspeak-ocr-open-working-directory” Open directory containing
     the results of OCR.

‘n’
     “emacspeak-ocr-name-document” Name current document.

‘o’
     “emacspeak-ocr-recognize-image” Launch OCR engine on a scanned
     image.

‘i’
     “emacspeak-ocr-scan-image” Acquire an image using ‘scanimage’.

‘RET’
     “emacspeak-ocr-scan-and-recognize” Scan and recognize a page.

‘w’
     “emacspeak-ocr-write-document” Write all pages of current document
     to a text file.

‘q’
     “bury-buffer” Bury the OCR buffer.
‘c’
     “emacspeak-ocr-customize” Customize Emacspeak OCR settings.

‘?’
     “describe-mode” Describe OCR mode.


File: emacspeak.info,  Node: Running Terminal Based Applications,  Next: Emacspeak Commands And Options,  Prev: Emacs Packages,  Up: Top

11 Running Terminal Based Applications.
***************************************

You can use the terminal emulator mode to run arbitrary terminal-based
programs from within Emacs.  You open a terminal emulator buffer using
M-x term, with an extra carriage return to accept the default shell
(such as bash).  (Incidentally, don’t confuse this command with M-x
terminal-emulator, which starts an older terminal emulator mode not
supported by Emacspeak.)

   Three kinds of commands are used within the terminal emulator.
Normal term commands use a prefix of C-c.  The emacspeak commands for
eterm mode use a prefix of C-t.  Anything else is a normal shell
command.

   There are two sub-modes of term mode: char sub-mode and line
sub-mode.  In char sub-mode, emacspeak will only speak the final chunk
of output — typically the last line displayed.  Each character typed
(except ‘term-escape-char‘) is sent immediately.  Use char sub-mode for
screen oriented programs like vi or pine.

   In line sub-mode, program output is spoken if user option
‘eterm-autospeak’ is turned on.  When you type a return at the end of
the buffer, that line is sent as input, while return not at end copies
the rest of the line to the end and sends it.  When using terminal line
mode with option ‘eterm-autospeak’ turned on, speech feedback is similar
to that obtained in regular ‘shell-mode’ buffers.

   The default is char sub-mode.  You can switch to line sub-mode with
C-c C-j (recall that control J is a linefeed), and back to char sub-mode
with C-c C-k (think of character spelled with a K).

   Note: Use char-mode with the terminal emulator for running
screen-oriented programs like Lynx or Pine.  For regular shell
interaction just use M-x shell instead of using the terminal emulator.

11.1 Char Sub-mode of Term Mode
===============================

In char sub-mode of term, each character you type is sent directly to
the inferior process without intervention from emacs, except for the
escape character (usually C-c).

   Here are some of the useful commands for the char sub-mode.  Note
that the usual commands for killing a buffer or switching buffers do not
work in this mode, so new key bindings are supplied.  The first five
commands are different ways of leaving this mode.

‘C-c C-j’
‘M-x term-line-mode’
     Switch to line sub-mode of term mode.

‘C-c o’
‘M-x other-window’
     Select the next window on this frame.  All windows on current frame
     are arranged in a cyclic order.  This command selects the next
     window in that order.  If there are no other windows, this command
     does nothing.

‘C-c C-f’
‘M-x find-file’
     Switch to a buffer visiting a file, creating one if none already
     exists.

‘C-c 0’
‘M-x delete-window’
     Remove current window from the display.

‘C-c k’
‘M-x kill-buffer’
     Kill the current buffer.

‘C-c C-x C-c’
‘M-x save-buffers-kill-emacs’
     Offer to save each buffer, then kill this Emacs process.

‘C-c C-d’
‘M-x list-directory’
     Display a list of files in or matching DIRNAME, a la ‘ls’.  DIRNAME
     is globbed by the shell if necessary.  Prefix arg (C-u) means
     supply -l switch to ‘ls’.  The list appears in a second window.

‘C-c 1’
‘M-x delete-other-windows’
     Delete all other windows in the frame, making the current window
     fill its frame.

‘C-c C-c’
‘M-x term-send-raw’
     Send the last character typed through the terminal-emulator without
     any interpretation.

‘C-c (’
‘M-x start-kbd-macro’
     Record subsequent keyboard input, defining a keyboard macro.  The
     commands are recorded even as they are executed.  Use C-c ) to
     finish recording and make the macro available.  Use M-x
     name-last-kbd-macro to give it a permanent name.  Prefix arg (C-u)
     means append to last macro defined; This begins by re-executing
     that macro as if you had typed it again.

‘C-c )’
‘M-x end-kbd-macro’
     Finish defining a keyboard macro.  The definition was started by
     C-c (.  The macro is now available for use via C-c e, or it can be
     given a name with M-x name-last-kbd-macro and then invoked under
     that name.

‘C-c e’
‘M-x call-last-kbd-macro’
     Call the last keyboard macro that you defined with C-c (.  A prefix
     argument serves as a repeat count.  Zero means repeat until error.

   You can get a list of all the key sequences with a C-c prefix by
typing C-c C-h while in this sub-mode.  Some of those commands are only
available in the char sub-mode, while others are generally available.

11.2 Line Sub-mode of Term Mode
===============================

In line sub-mode of term mode, emacs editing commands work normally,
until you type RET which sends the current line to the inferior process.

   Here are some of the useful commands for the line sub-mode of the
term mode.  In addition, the usual commands for handling a buffer work
in this mode (C-x o to switch windows, C-x k to kill a buffer, C-x f to
find a file, and so forth).

‘C-c C-k’
‘M-x term-char-mode’
     Switch to char sub-mode of term mode.

‘C-c C-z’
‘M-x term-stop-subjob’
     Stop the current subjob.  Resume the subjob in the foreground with
     the ordinary command fg, or run it in the background with bg.
     WARNING: if there is no current subjob, you can end up suspending
     the top-level process running in the buffer.  If you accidentally
     do this, use M-x term-continue-subjob to resume the process.  (This
     is not a problem with with most shells, including bash, since they
     ignore this signal.)

‘C-c C-\’
‘M-x term-quit-subjob’
     Send quit signal to the current subjob.

‘C-c C-c’
‘M-x term-interrupt-subjob’
     Interrupt the current subjob.

‘C-c C-w’
‘M-x backward-kill-word’
     Kill characters backward until encountering the end of a word.

‘C-c C-u’
‘M-x term-kill-input’
     Kill all text from last stuff output by interpreter to point.

‘C-c C-a’
‘M-x term-bol’
     Goes to the beginning of line, then skips past the prompt, if any.
     If a prefix argument is given (C-u), then no prompt skip — go
     straight to column 0.

‘C-c C-d’
‘M-x term-send-eof’
     Send an end of file character (EOF) to the current buffer’s
     process.

   You can get a list of all the key sequences with a C-c prefix by
typing C-c C-h while in this sub-mode.  Some of those commands are only
available in the line sub-mode, while others are generally available.

11.3 Eterm Mode Commands
========================

The eterm mode maintains a pointer, which is not necessarily the same as
the terminal’s cursor.  It is intended to be used in eterm’s char
submode.  In char submode, C-t , (that’s control-t followed by comma)
will tell you where the eterm pointer is.  C-t C-i will tell you where
the terminal’s cursor is.  The top left corner of the window is "row 0
column 0".

   The eterm pointer can be moved with C-t < (to the top of the screen),
C-t > (to the bottom of the screen), C-t n (to the next line), C-t p (to
the previous line), and C-t .  (to the cursor).  Each of these also
speaks the line the pointer moves to.  You can also search forward with
C-t s.

   These commands speak without moving the pointer: C-t l (current
line), C-t w (current word), C-t c (current character), and C-t [space]
(from eterm pointer to cursor).

   You may enter review mode with C-t q.  In review mode, you can search
the buffer and speak its contents, without disturbing the terminal.
Commands for moving the pointer are similar to normal editing commands,
but without a control key: n and p for next and previous line, f and b
for forward and back by characters, < and > for the beginning or end of
the buffer.  c, w, and l speak the current character, word, and line.  s
searches forward (not incrementally).  A comma speaks the pointer
location.  A period moves the pointer to the terminal cursor.  Return to
normal term mode by typing q.


File: emacspeak.info,  Node: Emacspeak Commands And Options,  Next: Emacspeak Keyboard Commands,  Prev: Running Terminal Based Applications,  Up: Top

12 Emacspeak Commands And Options
*********************************

Overview
========

This chapter documents the various Emacspeak modules and is
auto-generated from the Emacspeak source code.  It is meant to be a
complete reference to the emacspeak implementation while also providing
high-level usage summaries of some of the larger Emacspeak modules.

   Each section provides a high-level overview of that module, followed
by detailed description of the commands and options defined in that
module.

   Emacspeak modules can be classified as follows:
  1. Modules that interface with various TTS engines, e.g.
     ‘espeak-voices’ and ‘dectalk-voices’.
  2. Modules that implement core Emacspeak functionality, e.g.,
     ‘emacspeak-speak’, ‘emacspeak-keymap’, ‘voice-lock’ and
     ‘emacspeak-advice’.
  3. Emacspeak extensions that speech-enable various emacs packages,
     these are all named using the convention ‘emacspeak-<packagename>’.

   The first two of the above are mostly of interest when extending
Emacspeak, or to learn how things are implemented.  The third category
is useful in understanding how emacspeak works with a given package;
thus, when learning to use the Emacs Web Browser (EWW), read the EWW
documentation, then read *Note emacspeak-eww::.

   This chapter documents a total of 1227 commands and 903 options.

* Menu:

* acss-structure::CSS – Cascaded Speech Style structure.
* amixer::Control AMixer from Emacs.
* cd-tool::Play  CDs from Emacs.
* dectalk-voices::Define various device independent voices in terms of Dectalk codes.
* dom-addons::dom.el addons.
* dtk-interp::Language specific (e.g. TCL) interface to speech server.
* dtk-speak::Provides Emacs Lisp interface to speech server.
* dtk-unicode::Pronounce Unicode characters correctly.
* emacspeak::The Complete Audio Desktop.
* emacspeak-2048::Speech-enable 2048 Game.
* emacspeak-actions::Emacspeak actions – callbacks that can be associated with portions of a buffer.
* emacspeak-add-log::Speech-enable add-log.
* emacspeak-advice::Advice Emacs Core.
* emacspeak-amark::BookMarks For Audio Content.
* emacspeak-analog::Speech-enable analog – a log viewer.
* emacspeak-ansi-color::Speech-enable ansi-color terminal.
* emacspeak-apt-sources::speech-enable APT’s sources.list file editor.
* emacspeak-arc::Speech enable archive-mode – a  Emacs interface to zip and friends.
* emacspeak-auctex::Speech enable AucTeX – a powerful TeX/LaTeX authoring environment.
* emacspeak-bbc::Speech-enabled  BBC client.
* emacspeak-bbdb::Speech enable BBDB – a powerful address manager.
* emacspeak-bibtex::Speech enable bibtex – Supports maintaining bibliographies in bibtex format.
* emacspeak-bookmark::Speech enable Emacs’ builtin bookmarks.
* emacspeak-bookshare::Speech-enabled  BOOKSHARE client.
* emacspeak-browse-kill-ring::browse-kill-ring  for emacspeak desktop.
* emacspeak-bs::speech-enable bs buffer selection.
* emacspeak-buff-menu::Speech enable Buffer Menu Mode – used to manage buffers.
* emacspeak-c::Speech enable CC-mode and friends – supports C, C++, Java.
* emacspeak-calc::Speech enable the Emacs Calculator – a powerful symbolic algebra system.
* emacspeak-calculator::Speech enable  desktop calculator.
* emacspeak-calendar::Speech enable Emacs Calendar – maintain a diary and appointments.
* emacspeak-cedet::Speech enable CEDET Development Environment.
* emacspeak-checkdoc::Speech-enable checkdoc.
* emacspeak-cider::Speech-enable CIDER, A Clojure IDE.
* emacspeak-ciel::Speech-enable CIEL.
* emacspeak-clojure::Speech-enable CLOJURE Mode.
* emacspeak-cmuscheme::Scheme support for emacspeak.
* emacspeak-company::Speech-enable COMPANY-mode.
* emacspeak-compile::Speech enable  navigation of  compile errors, grep matches.
* emacspeak-cperl::Speech enable CPerl Mode.
* emacspeak-custom::Speech enable interactive Emacs customization.
* emacspeak-dbus::DBus On Emacspeak Desktop.
* emacspeak-deadgrep::Speech-enable DEADGREP.
* emacspeak-debugger::Speech-enable DEBUGGER.
* emacspeak-desktop::Speech-enable desktop.
* emacspeak-dictionary::speech-enable dictionaries.
* emacspeak-diff-mode::Speech-enable DIFF-MODE.
* emacspeak-dired::Speech enable Dired Mode – A powerful File Manager.
* emacspeak-ecb::speech-enable Emacs Class Browser.
* emacspeak-eclim::Speech-enable ECLIM: emacs/eclipse integration.
* emacspeak-ediary::Speech-enable ediary.
* emacspeak-ediff::Speech enable Emacs interface to diff and merge.
* emacspeak-ein::Speech-enable EIN For IPython Notebooks.
* emacspeak-elfeed::Speech-enable ELFEED, A Feed Reader.
* emacspeak-elisp-refs::Speech-enable ELISP-REFS.
* emacspeak-elpy::Speech-enable ELPY, A Python IDE.
* emacspeak-elscreen::Speech-enable ELSCREEN.
* emacspeak-emms::Speech-enable EMMS Multimedia UI.
* emacspeak-enriched::Audio Formatting for Emacs’ WYSIWYG RichText  mode.
* emacspeak-entertain::Speech enable misc games.
* emacspeak-epa::Speech-enable EasyPG Assistant.
* emacspeak-eperiodic::Speech-enable Periodic Table.
* emacspeak-epub::On epubs emacspeak desktop.
* emacspeak-erc::speech-enable erc irc client.
* emacspeak-eshell::Speech-enable EShell - Emacs Shell.
* emacspeak-ess::Speech-enable ESS: Emacs Speaks Statistics.
* emacspeak-etable::Speech enable table.el.
* emacspeak-eterm::Speech enable eterm – Emacs’ terminal emulator  term.el.
* emacspeak-eudc::Speech enable  LDAP directory client.
* emacspeak-evil::Speech-enable EVIL.
* emacspeak-eww::Speech-enable EWW Browser.
* emacspeak-facemenu::Map default Emacs faces like bold to appropriate speech personalities.
* emacspeak-feeds::Feeds Support (Atom, RSS) For Emacspeak.
* emacspeak-filtertext::Utilities to filter text.
* emacspeak-find-dired::Speech enable  find-dired.
* emacspeak-find-func::Speech enable emacs’ code finder.
* emacspeak-fix-interactive::Make  Emacs’ builtin prompts   speak.
* emacspeak-flycheck::Speech-enable FLYCHECK.
* emacspeak-flyspell::Speech enable flyspell.
* emacspeak-folding::Speech enable Folding Mode – enables structured editing.
* emacspeak-forge::Speech-enable FORGE.
* emacspeak-forms::Speech enable Emacs’ forms mode  – provides  a convenient database interface.
* emacspeak-ftf::Speech-enable find-things-fast.
* emacspeak-geiser::Speech-enable GEISER.
* emacspeak-generic::Speech enable  generic modes.
* emacspeak-gh-explorer::Speech-enable GH-EXPLORER.
* emacspeak-gnuplot::speech-enable gnuplot mode.
* emacspeak-gnus::Speech enable GNUS – Fluent spoken access to imap, usenet.
* emacspeak-go-mode::Speech-enable GO-MODE.
* emacspeak-gomoku::Speech enable the game of Gomoku.
* emacspeak-google::Google Search Tools.
* emacspeak-gridtext::Overlay Grids To filter columnar text.
* emacspeak-gtags::Speech-enable GTAGS.
* emacspeak-gud::Speech enable Emacs’ debugger interface –covers GDB, JDB, and PerlDB.
* emacspeak-helm::Speech-enable HELM.
* emacspeak-hide::Provides user commands for hiding and exposing blocks of text.
* emacspeak-hideshow::speech-enable hideshow.
* emacspeak-hydra::Speech-Enable hydra.
* emacspeak-ibuffer::speech-enable ibuffer buffer selection.
* emacspeak-ido::speech-enable ido.
* emacspeak-iedit::Speech-enable IEDIT.
* emacspeak-imenu::Speech enable Imenu – produce buffer-specific table of contents.
* emacspeak-indium::Speech-enable INDIUM, A Javascript IDE.
* emacspeak-info::Speech enable Info – Emacs’ online documentation viewer.
* emacspeak-ispell::Speech enable Ispell – Emacs’ interactive spell checker.
* emacspeak-ivy::Speech-enable IVY.
* emacspeak-jabber::Speech-Enable jabber.
* emacspeak-jdee::Speech enable JDEE – An integrated Java Development Environment.
* emacspeak-js2::Speech-enable JS2.
* emacspeak-jss::Speech-enable JSS.
* emacspeak-keymap::Setup  keymaps and keybindings provided by Emacspeak.
* emacspeak-kite::Speech-enable KITE.
* emacspeak-kmacro::Speech-enable kbd macro interface.
* emacspeak-librivox::LIBRIVOX API client.
* emacspeak-lispy::Speech-enable LISPY.
* emacspeak-lua::Speech-enable LUA.
* emacspeak-m-player::Control mplayer from Emacs.
* emacspeak-magit::Speech-enable MAGIT: Git Client.
* emacspeak-make-mode::Speech enable make-mode.
* emacspeak-man::Speech enable Man mode – Use this for UNIX Man pages.
* emacspeak-markdown::Speech-enable MARKDOWN-mode.el.
* emacspeak-maths::Audio-Formatted Mathematics.
* emacspeak-message::Speech enable Message – Used to compose news postings and replies.
* emacspeak-metapost::speech-enable metapost mode.
* emacspeak-midge::Speech-enable MIDI editor.
* emacspeak-mines::Speech-enable MINES.
* emacspeak-mspools::Speech enable MSpools – Monitor multiple mail drops.
* emacspeak-muggles::Convenience Hydras For The Emacspeak Desktop.
* emacspeak-muse::Speech-enable Muse.
* emacspeak-navi-mode::Speech-enable NAVI-MODE.
* emacspeak-net-utils::Speech enable net-utils.
* emacspeak-newsticker::Speech-enable newsticker.
* emacspeak-nov::Speech-enable NOV.
* emacspeak-npr::Speech-enabled  NPR client.
* emacspeak-nxml::Speech enable nxml mode.
* emacspeak-ocr::ocr Front-end for emacspeak desktop.
* emacspeak-org::Speech-enable org.
* emacspeak-origami::Speech-enable ORIGAMI.
* emacspeak-outline::
* emacspeak-package::Speech-enable PACKAGE.
* emacspeak-paradox::Speech-enable PARADOX.
* emacspeak-perl::Speech enable Perl Mode.
* emacspeak-personality::
* emacspeak-php-mode::Speech-Enable php-mode.
* emacspeak-pianobar::Pandora Radio: Speech-enable PIANOBAR.
* emacspeak-popup::Speech-enable POPUP.
* emacspeak-proced::Speech-enable PROCED Task Manager.
* emacspeak-projectile::Speech-enable PROJECTILE.
* emacspeak-prompts::Pre-Defined Speech  PROMPTS.
* emacspeak-pronounce::Implements Emacspeak pronunciation dictionaries.
* emacspeak-py::Speech enable Python development environment.
* emacspeak-pydoc::Speech-enable PYDOC.
* emacspeak-python::Speech enable Python development environment.
* emacspeak-racket::Speech-enable RACKET.
* emacspeak-re-builder::speech-enable re-builder.
* emacspeak-redefine::Redefines some key Emacs builtins to speak.
* emacspeak-reftex::speech enable reftex, Cross-References In La)TeX.
* emacspeak-related::Speech-enable RELATED buffer switching.
* emacspeak-remote::Enables running remote Emacspeak sessions.
* emacspeak-rg::Speech-enable RG.
* emacspeak-rmail::Speech enable RMail – Emacs’ default mail agent.
* emacspeak-rpm::speech-enable RPM.
* emacspeak-rpm-spec::Speech enable rpm spec editor.
* emacspeak-rst::Speech-enable RST.
* emacspeak-ruby::Speech enable Ruby Mode.
* emacspeak-sage::Speech-enable SAGE.
* emacspeak-ses::Speech-enable ses spread-sheet.
* emacspeak-setup::Setup Emacspeak environment –loaded to start Emacspeak.
* emacspeak-sgml-mode::Speech enable SGML mode.
* emacspeak-sh-script::Speech enable  sh-script mode.
* emacspeak-shx::Speech-enable SHX.
* emacspeak-sigbegone::Speech-enable sigbegone.
* emacspeak-slime::Speech-enable SLIME, A Lisp IDE.
* emacspeak-smart-window::Speech-enable SMART-WINDOW.
* emacspeak-smartparens::Speech-enable SMARTPARENS.
* emacspeak-solitaire::Speech enable Solitaire game.
* emacspeak-sounds::Defines Emacspeak auditory icons.
* emacspeak-speak::Implements Emacspeak’s core speech services.
* emacspeak-speedbar::Speech enable speedbar – Tool for context-sensitive navigation.
* emacspeak-sql::Speech enable sql-mode.
* emacspeak-sudoku::Play SuDoku.
* emacspeak-supercite::Speech enable supercite.
* emacspeak-table::Implements data model for table browsing.
* emacspeak-table-ui::Table Navigation UI.
* emacspeak-tabulate::Interpret tabulated information as a table.
* emacspeak-tapestry::Speak information about current layout of windows.
* emacspeak-tar::Speech enable Tar Mode – Manipulate tar archives from Emacs.
* emacspeak-tcl::Speech enable TCL development environment.
* emacspeak-tdtd::Speech enable  DTD authoring.
* emacspeak-tempo::Speech enable tempo – template library used for Java and HTML authoring.
* emacspeak-tetris::Speech enable game of Tetris.
* emacspeak-texinfo::Speech enable texinfo mode.
* emacspeak-threes::Speech-enable THREES.
* emacspeak-tide::Speech-enable TIDE.
* emacspeak-todo-mode::speech-enable todo-mode.
* emacspeak-transient::Speech-enable TRANSIENT.
* emacspeak-twittering::Speech-enable Twittering-mode.
* emacspeak-typo::Speech-enable TYPO.
* emacspeak-url-template::Create library of URI templates.
* emacspeak-vdiff::Speech-enable VDIFF.
* emacspeak-view::Speech enable View mode – Efficient browsing of read-only content.
* emacspeak-vlc::Speech-enable VLC.
* emacspeak-vm::Speech enable VMMail.
* emacspeak-wdired::Speech-enable wdired.
* emacspeak-we::Transform Web Pages Using XSLT.
* emacspeak-websearch::search utilities.
* emacspeak-webspace::Webspaces In Emacspeak.
* emacspeak-webutils::Common Web Utilities For Emacspeak.
* emacspeak-widget::Speech enable Emacs’ native GUI widget library.
* emacspeak-windmove::speech-enable windmove.
* emacspeak-winring::Speech enable WinRing – Manage multiple Emacs window configurations.
* emacspeak-wizards::Magic For Power Users.
* emacspeak-woman::Speech-enable WOMAN.
* emacspeak-xkcd::Speech-enable XKCD.
* emacspeak-xml-shell::Implements a simple XML browser.
* emacspeak-xref::Speech-enable XREF.
* emacspeak-xslt::Implements Emacspeak  xslt transform engine.
* emacspeak-yaml::Speech-enable YAML.
* emacspeak-yasnippet::Speech-enable YASNIPPET.
* espeak-voices::Define  Espeak tags.
* g::Google Client.
* g-utils::Google Client Utilities.
* gm-nnir::Searching GMail Using NNIR.
* gmaps::Google Maps.
* ladspa::Ladspa Tools For Emacs.
* mac-voices::Define  Mac tags.
* outloud-voices::Define  OutLoud tags.
* plain-voices::Define various device independent voices in terms of Plain codes.
* soundscape::Soundscapes for The Emacspeak Desktop.
* sox::An Audio Work-Bench.
* sox-gen::Binaural Beats And More Using SoX.
* stack-f::
* tetris::implementation of Tetris for Emacs.
* toy-braille::
* tts::Engine-specific TTS Environment.
* tts-cmds::Engine-specific TTS Commands.
* voice-setup::Setup voices for voice-lock.
* xbacklight::Control Display Brightness From Emacs.
* URL Templates ::


File: emacspeak.info,  Node: acss-structure,  Next: amixer,  Up: Emacspeak Commands And Options

12.1 acss-structure
===================

The CSS Speech Style Sheet specification defines a number of abstract
device independent voice properties.  A setting conforming to the CSS
speech specification can be represented in elisp as a structure.

   We will refer to this structure as a "speech style".  This structure
needs to be mapped to device dependent codes to produce the desired
effect.  This module forms a bridge between emacs packages that wish to
implement audio formatting and Emacspeak’s TTS module.  Emacspeak
produces voice change effects by examining the value of text-property
’personality.

   Think of a buffer of formatted text along with the text-property
’personality appropriately set as a "aural display list".  Applications
like EWW that produce such formatted buffers call function
acss-personality-from-speech-style with a "speech-style" –a structure as
defined in this module and get back a symbol that they then assign to
the value of property ’personality.  Emacspeak’s rendering engine then
does the needful at the time speech is produced.  Function
acss-personality-from-speech-style does the following: Takes as input a
"speech style" (1) Computes a symbol that will be used henceforth to
refer to this specific speech style.  (2) Examines emacspeak’s internal
voice table to see if this speech style has a voice already defined.  If
so it returns immediately.  Otherwise, it does the additional work of
defining a dectalk-voice for future use.  See module dectalk-voices.el
to see how voices are defined.


File: emacspeak.info,  Node: amixer,  Next: cd-tool,  Prev: acss-structure,  Up: Emacspeak Commands And Options

12.2 amixer
===========

Provide an emacs front-end to amixer, the sound mixer in ALSA that is
used to configure the audio device.

   The main entry point is command ‘emacspeak-audio-setup’ bound to
‘C-e)’.  When called for the first time, this command builds up a
database of available controls on the default audio device.  These
control names are then available for completion in the minibuffer.  Pick
a desired control, e.g., "master playback volume", and this displays a
prompt with the current value.  Enter the new value and press <RETURN>.
To reset all controls to their default values, Press ‘C-j’.

12.2.1 amixer Commands
----------------------

12.2.1.1 amixer
...............

 -- Command: amixer (&optional refresh)

     Interactively manipulate ALSA settings.
     Interactive prefix arg refreshes cache.

     (fn &optional REFRESH)

12.2.1.2 amixer-equalize
........................

 -- Command: amixer-equalize

     Set equalizer. Only affects device ‘equal’.

12.2.1.3 amixer-reset-equalizer
...............................

 -- Command: amixer-reset-equalizer

     Reset equalizer to default values – 66% for all 10 bands.

12.2.1.4 amixer-store
.....................

 -- Command: amixer-store

     Persist current amixer settings.

12.2.2 amixer Options
---------------------

 -- Variable: User Option amixer-device
     ALSA Control Device.


File: emacspeak.info,  Node: cd-tool,  Next: dectalk-voices,  Prev: amixer,  Up: Emacspeak Commands And Options

12.3 cd-tool
============

Provide an emacs front-end to cdtool.  cdtool can be obtained as an rpm
check using rpmfind or from its home site at sunsite.unc.edu
/pub/Linux/apps/sound/cdrom/cli This module also provides the ability to
play or save clips from a CD if you have cdda2wav installed.  cdda2wav
is a cd to wav converter.

12.3.1 cd-tool Commands
-----------------------

12.3.1.1 cd-tool
................

 -- Command: cd-tool
     ‘C-e DEL’
     ‘<fn> DEL’

     Front-end to CDTool.
     Bind this function to a convenient key-
     Emacspeak users automatically have
     this bound to <DEL> in the emacspeak keymap.

     Key     Action
     —     ——

     +       Next Track
     -       Previous Track
     SPC     Pause or Resume
     e       Eject
     =       Shuffle
     i       CD Info
     p       Play
     s       Stop
     t       track
     c       clip
     cap C   Save clip to disk


12.3.2 cd-tool Options
----------------------

 -- Variable: User Option cd-tool-start-command
     *Name of cdstart command; most likely either "cdstart" or "cdplay".


File: emacspeak.info,  Node: dectalk-voices,  Next: dom-addons,  Prev: cd-tool,  Up: Emacspeak Commands And Options

12.4 dectalk-voices
===================

This module defines the various voices used in voice-lock mode.  This
module is Dectalk specific.

12.4.1 dectalk-voices Commands
------------------------------

12.4.1.1 dectalk
................

 -- Command: dectalk
     ‘C-e d C-d’
     ‘<fn> d C-d’

     Select Dectalk TTS server.

12.4.1.2 dtk-exp
................

 -- Command: dtk-exp

     Select Dectalk TTS server.

12.4.2 dectalk-voices Options
-----------------------------

 -- Variable: User Option dectalk-default-speech-rate
     *Default speech rate at which TTS is started.


File: emacspeak.info,  Node: dom-addons,  Next: dtk-interp,  Prev: dectalk-voices,  Up: Emacspeak Commands And Options

12.5 dom-addons
===============

Useful additional functions for dom.el


File: emacspeak.info,  Node: dtk-interp,  Next: dtk-speak,  Prev: dom-addons,  Up: Emacspeak Commands And Options

12.6 dtk-interp
===============

All requests to the speech server are factored out into this module.
These calls are declared here as defun so they are inlined by the byte
compiler.  This keeps the code efficient, but gives us the flexibility
to call out to different speech servers.


File: emacspeak.info,  Node: dtk-speak,  Next: dtk-unicode,  Prev: dtk-interp,  Up: Emacspeak Commands And Options

12.7 dtk-speak
==============

Defines the TTS interface.

12.7.1 dtk-speak Commands
-------------------------

12.7.1.1 dtk-add-cleanup-pattern
................................

 -- Command: dtk-add-cleanup-pattern (&optional delete)
     ‘C-e d a’
     ‘<fn> d a’

     Add this pattern to the list of repeating patterns that
     are cleaned up.  Optional interactive prefix arg deletes
     this pattern if previously added.  Cleaning up repeated
     patterns results in emacspeak speaking the pattern followed
     by a repeat count instead of speaking all the characters
     making up the pattern.  Thus, by adding the repeating
     pattern ‘.’ (this is already added by default) emacspeak
     will say ‘‘aw fifteen dot’’ when speaking the string
     ‘‘...............’’ instead of ‘‘period period period period
     ’’

     (fn &optional DELETE)

12.7.1.2 dtk-cloud
..................

 -- Command: dtk-cloud
     ‘C-e d C-c’
     ‘<fn> d C-c’

     Select preferred Cloud TTS server.

12.7.1.3 dtk-local-server
.........................

 -- Command: dtk-local-server (program &optional prompt-port)
     ‘C-e d L’
     ‘<fn> d L’

     Select and start an local speech server interactively. Local server
     lets Emacspeak on a remote host connect back via SSH port forwarding
     for instance. Argument PROGRAM specifies the speech server
     program. Port defaults to dtk-local-server-port

     (fn PROGRAM &optional PROMPT-PORT)

12.7.1.4 dtk-notify-initialize
..............................

 -- Command: dtk-notify-initialize
     ‘C-e d C-n’
     ‘<fn> d C-n’

     Initialize notification TTS stream.

12.7.1.5 dtk-notify-shutdown
............................

 -- Command: dtk-notify-shutdown
     ‘C-e d C-s’
     ‘<fn> d C-s’

     Shutdown notification TTS stream.

12.7.1.6 dtk-notify-stop
........................

 -- Command: dtk-notify-stop
     ‘C-e .’
     ‘<fn> .’

     Stop  speech on notification stream.

12.7.1.7 dtk-reset-state
........................

 -- Command: dtk-reset-state
     ‘C-e d R’
     ‘<fn> d R’

     Restore sanity to the Dectalk.
     Typically used after the Dectalk has been power   cycled.

12.7.1.8 dtk-select-server
..........................

 -- Command: dtk-select-server (program &optional device)
     ‘C-e d d’
     ‘<fn> d d’

     Select a speech server interactively.
     When called interactively, restarts speech server.
     Argument PROGRAM specifies the speech server program.
      Optional arg device sets up environment variable
     ALSA_DEFAULT to specified device before starting the server.

     (fn PROGRAM &optional DEVICE)

12.7.1.9 dtk-set-character-scale
................................

 -- Command: dtk-set-character-scale (factor &optional prefix)
     ‘C-e d f’
     ‘<fn> d f’

     Set scale FACTOR for   speech rate.
     Speech rate is scaled by this factor
     when speaking characters.
     Interactive PREFIX arg means set   the global default value, and then set the
     current local  value to the result.

     (fn FACTOR &optional PREFIX)

12.7.1.10 dtk-set-chunk-separator-syntax
........................................

 -- Command: dtk-set-chunk-separator-syntax (s)
     ‘C-e d RET’
     ‘<fn> d RET’

     Interactively set how text is split in chunks.
     See the Emacs documentation on syntax tables for details on how characters are
     classified into various syntactic classes.
     Argument S specifies the syntax class.

     (fn S)

12.7.1.11 dtk-set-language
..........................

 -- Command: dtk-set-language (lang)
     ‘C-e d S’
     ‘<fn> d S’

     Set language according to the argument lang.

     (fn LANG)

12.7.1.12 dtk-set-next-language
...............................

 -- Command: dtk-set-next-language
     ‘C-e d N’
     ‘<fn> d N’

     Switch to the next available language

12.7.1.13 dtk-set-predefined-speech-rate
........................................

 -- Command: dtk-set-predefined-speech-rate (&optional prefix)
     ‘C-e d 9’
     ‘C-e d 8’
     ‘C-e d 7’
     ‘C-e d 6’
     ‘C-e d 5’
     ‘C-e d 4’
     ‘C-e d 3’
     ‘C-e d 2’
     ‘C-e d 1’
     ‘C-e d 0’
     ‘<fn> d 9’
     ‘<fn> d 8’
     ‘<fn> d 7’
     ‘<fn> d 6’
     ‘<fn> d 5’
     ‘<fn> d 4’
     ‘<fn> d 3’
     ‘<fn> d 2’
     ‘<fn> d 1’
     ‘<fn> d 0’

     Set speech rate to one of nine predefined levels.
     Interactive PREFIX arg says to set the rate globally.
     Formula used is:
     rate = dtk-speech-rate-base + dtk-speech-rate-step * level.

     (fn &optional PREFIX)

12.7.1.14 dtk-set-preferred-language
....................................

 -- Command: dtk-set-preferred-language (alias lang)

     Set the alias of the preferred language:
     For example if alias="en" lang="en_GB",
     then the following call:
      dtk-set-language("en")
     will set "en_GB".

     (fn ALIAS LANG)

12.7.1.15 dtk-set-previous-language
...................................

 -- Command: dtk-set-previous-language
     ‘C-e d P’
     ‘<fn> d P’

     Switch to the previous available language

12.7.1.16 dtk-set-punctuations
..............................

 -- Command: dtk-set-punctuations (mode &optional prefix)
     ‘C-e d p’
     ‘<fn> d p’

     Set punctuation mode to MODE.
     Possible values are ‘some’, ‘all’, or ‘none’.
     Interactive PREFIX arg means set   the global default value, and then set the
     current local  value to the result.

     (fn MODE &optional PREFIX)

12.7.1.17 dtk-set-punctuations-to-all
.....................................

 -- Command: dtk-set-punctuations-to-all (&optional prefix)

     Set punctuation  mode to all.
     Interactive PREFIX arg sets punctuation mode globally.

     (fn &optional PREFIX)

12.7.1.18 dtk-set-punctuations-to-some
......................................

 -- Command: dtk-set-punctuations-to-some (&optional prefix)

     Set punctuation  mode to some.
     Interactive PREFIX arg sets punctuation mode globally.

     (fn &optional PREFIX)

12.7.1.19 dtk-set-rate
......................

 -- Command: dtk-set-rate (rate &optional prefix)
     ‘C-e d r’
     ‘<fn> d r’

     Set speaking RATE for the tts.
     Interactive PREFIX arg means set   the global default value, and then set the
     current local  value to the result.

     (fn RATE &optional PREFIX)

12.7.1.20 dtk-stop
..................

 -- Command: dtk-stop (&optional all)
     ‘C-e s’
     ‘C-e <fn>’
     ‘<fn> s’
     ‘<fn> <fn>’

     Stop speech now.
     Optional arg ‘all’ or interactive call   silences notification stream as well.

     (fn &optional ALL)

12.7.1.21 dtk-toggle-allcaps-beep
.................................

 -- Command: dtk-toggle-allcaps-beep (&optional prefix)
     ‘C-e d C’
     ‘<fn> d C’

     Toggle allcaps-beep.
     when set, allcaps words  are  indicated by a
     short beep.  Interactive PREFIX arg means toggle the global default
     value, and then set the current local value to the result.
     Note that allcaps-beep is a very useful thing when programming.
     However it is irritating to have it on when reading documents.

12.7.1.22 dtk-toggle-capitalization
...................................

 -- Command: dtk-toggle-capitalization (&optional prefix)
     ‘C-e d c’
     ‘<fn> d c’

     Toggle capitalization.
     when set, capitalization is indicated by a
     short beep.  Interactive PREFIX arg means toggle the global default
     value, and then set the current local value to the result.

12.7.1.23 dtk-toggle-punctuation-mode
.....................................

 -- Command: dtk-toggle-punctuation-mode (&optional prefix)
     ‘C-e d ,’
     ‘<fn> d ,’

     Toggle punctuation mode between "some" and "all".
     Interactive PREFIX arg makes the new setting global.

     (fn &optional PREFIX)

12.7.1.24 dtk-toggle-quiet
..........................

 -- Command: dtk-toggle-quiet (&optional prefix)

     Toggles state of  dtk-quiet.
     Turning on this switch silences speech.
     Optional interactive prefix arg causes this setting to become global.

12.7.1.25 dtk-toggle-speak-nonprinting-chars
............................................

 -- Command: dtk-toggle-speak-nonprinting-chars (&optional prefix)
     ‘C-e d n’
     ‘<fn> d n’

     Toggle speak-nonprinting-chars.
     Switches behavior of how characters with the high bit set are handled.
     Interactive PREFIX arg means toggle the global default
     value, and then set the current local value to the result.

12.7.1.26 dtk-toggle-split-caps
...............................

 -- Command: dtk-toggle-split-caps (&optional prefix)
     ‘C-e d s’
     ‘<fn> d s’

     Toggle split caps mode.
     Split caps mode is useful when reading
     Hungarian notation in program source code.  Interactive PREFIX arg
     means toggle the global default value, and then set the current local
     value to the result.

12.7.1.27 dtk-toggle-splitting-on-white-space
.............................................

 -- Command: dtk-toggle-splitting-on-white-space
     ‘C-e d SPC’
     ‘<fn> d SPC’

     Toggle splitting of speech on white space.
     This affects the internal state of emacspeak that decides if we split
     text purely by clause boundaries, or also include
     whitespace.  By default, emacspeak sends a clause at a time
     to the speech device.  This produces fluent speech for
     normal use.  However in modes such as ‘shell-mode’ and some
     programming language modes, clause markers appear
     infrequently, and this can result in large amounts of text
     being sent to the speech device at once, making the system
     unresponsive when asked to stop talking.  Splitting on white
     space makes emacspeak’s stop command responsive.  However,
     when splitting on white space, the speech sounds choppy
     since the synthesizer is getting a word at a time.

12.7.1.28 dtk-toggle-strip-octals
.................................

 -- Command: dtk-toggle-strip-octals (&optional prefix)
     ‘C-e d o’
     ‘<fn> d o’

     Toggle stripping of octals.
     Interactive prefix arg means
      toggle the global default value, and then set the current local
     value to the result.

12.7.1.29 tts-cycle-device
..........................

 -- Command: tts-cycle-device (&optional restart)

     Cycle through available ALSA devices.
     Optional interactive prefix arg restarts current TTS server.

     (fn &optional RESTART)

12.7.1.30 tts-restart
.....................

 -- Command: tts-restart
     ‘C-e C-s’
     ‘<fn> C-s’

     Use this to nuke the currently running TTS server and restart it.

12.7.1.31 tts-speak-version
...........................

 -- Command: tts-speak-version

     Speak version.

12.7.2 dtk-speak Options
------------------------

 -- Variable: User Option dtk-cleanup-repeats
     List of repeating patterns to clean up.  You can use command
     ‘dtk-add-cleanup-pattern’ bound to C-e d a to add more patterns.
     Specify patterns that people use to decorate their ASCII files, and
     cause untold pain to the speech synthesizer.

     If more than 3 consecutive occurrences of a specified pattern is
     found, the TTS engine replaces it with a repeat count.

 -- Variable: User Option dtk-cloud-server
     Set this to your preferred cloud TTS server.

 -- Variable: User Option dtk-local-engine
     Engine we use for our local TTS server.

 -- Variable: User Option dtk-speak-nonprinting-chars
     *Option that specifies handling of non-printing chars.  Non nil
     value means non printing characters should be spoken as their octal
     value.  Set this to t to avoid a dectalk bug that makes the speech
     box die if it seems some accented characters in certain contexts.

 -- Variable: User Option dtk-speech-rate-base
     *Value of lowest tolerable speech rate.

 -- Variable: User Option dtk-speech-rate-step
     *Value of speech rate increment.  This determines step size used
     when setting speech rate via command
     ‘dtk-set-predefined-speech-rate’.  Formula used is
     dtk-speech-rate-base + dtk-speech-rate-step*level.

 -- Variable: User Option dtk-use-tones
     Allow tones to be turned off.

 -- Variable: User Option tts-device-list
     List of ALSA sound devices we can use.

 -- Variable: User Option tts-strip-octals
     Set to T to strip all octal chars before speaking.  Particularly
     useful for web browsing.


File: emacspeak.info,  Node: dtk-unicode,  Next: emacspeak,  Prev: dtk-speak,  Up: Emacspeak Commands And Options

12.8 dtk-unicode
================

This Provides Unicode support to the speech layer.

12.8.1 dtk-unicode Commands
---------------------------

12.8.1.1 dtk-unicode-customize-char
...................................

 -- Command: dtk-unicode-customize-char (char replacement)

     Add a custom replacement string for CHAR.

     When called interactively, CHAR defaults to the character after point.

     (fn CHAR REPLACEMENT)

12.8.1.2 dtk-unicode-uncustomize-char
.....................................

 -- Command: dtk-unicode-uncustomize-char (char)

     Delete custom replacement for CHAR.

     When called interactively, CHAR defaults to the character after point.

     (fn CHAR)

12.8.2 dtk-unicode Options
--------------------------

 -- Variable: User Option dtk-unicode-character-replacement-alist
     Explicit replacements for some characters.

 -- Variable: User Option dtk-unicode-name-transformation-rules-alist
     Alist of character name transformation rules.

 -- Variable: User Option dtk-unicode-process-utf8
     Turn this off when working with TTS engines that handle UTF8
     themselves, e.g., when using an Asian language.

 -- Variable: User Option dtk-unicode-untouched-charsets
     *Characters of these charsets are completely ignored by
     dtk-unicode-replace-chars.


File: emacspeak.info,  Node: emacspeak,  Next: emacspeak-2048,  Prev: dtk-unicode,  Up: Emacspeak Commands And Options

12.9 emacspeak
==============

Emacspeak extends Emacs to be a fully functional audio desktop.  This is
the main emacspeak module.  It actually does very little: It sets up
Emacs to load package-specific Emacspeak modules as each package is
loaded.  It implements function emacspeak which loads the rest of the
system.

12.9.1 emacspeak Commands
-------------------------

12.9.1.1 emacspeak
..................

 -- Command: emacspeak

     Start the Emacspeak Audio Desktop.
     Use Emacs as you normally would,
     emacspeak will provide you spoken feedback as you work.  Emacspeak also
     provides commands for having parts of the current buffer, the
     mode-line etc to be spoken.

     If you are hearing this description as a result of pressing
     C-h C-e you may want to press C-e s to
     stop speech, and then use the arrow keys to move around in the Help
     buffer to read the rest of this description, which includes a summary
     of all emacspeak keybindings.

     All emacspeak commands use C-e as a prefix
     key.  You can also set the state of the TTS engine by using
     C-e d as a prefix.  Here is a summary of all
     emacspeak commands along with their bindings.  You need to precede the
     keystrokes listed below with C-e.

     Emacspeak also provides a fluent speech extension to the Emacs
     terminal emulator (eterm).  Note: You need to use the term package that
     comes with emacs-19.29 and later.

     key             binding
     —             ——-

     C-@		emacspeak-speak-current-mark
     C-a		emacspeak-toggle-auditory-icons
     C-b		emacspeak-bookshare
     C-c		emacspeak-clipboard-copy
     C-d		emacspeak-toggle-show-point
     C-e		end-of-line
     TAB		emacspeak-open-info
     C-j		emacspeak-hide-speak-block-sans-prefix
     C-l		emacspeak-speak-line-number
     RET		emacspeak-speak-continuously
     C-n		emacspeak-speak-next-window
     C-o		emacspeak-ocr
     C-p		emacspeak-speak-previous-window
     C-q		emacspeak-toggle-inaudible-or-comint-autospeak
     C-s		tts-restart
     C-t		emacspeak-table-submap-command
     C-u		emacspeak-feeds-browse
     C-v		view-mode
     C-w		emacspeak-speak-window-information
     C-x		emacspeak-personal-ctlx-keymap
     C-y		emacspeak-clipboard-paste
     ESC		Prefix Command
     SPC		emacspeak-speak-header-line
     !		emacspeak-speak-run-shell-command
     "		emacspeak-speak-sexp
     #		emacspeak-gridtext
     $		emacspeak-shell-command
     %		emacspeak-speak-current-percentage
     &		emacspeak-wizards-shell-command-on-current-file
     ’		emacspeak-pianobar
     (		emacspeak-audio-setup
     )		emacspeak-sounds-select-theme
     ,		emacspeak-speak-skim-buffer
     .		dtk-notify-stop
     /		emacspeak-speak-this-buffer-other-window-display
     0 .. 9		emacspeak-speak-predefined-window
     :		emacspeak-m-player-shuffle
     ;		emacspeak-multimedia
     <		emacspeak-speak-previous-field
     =		emacspeak-speak-current-column
     >		emacspeak-speak-next-field
     ?		emacspeak-websearch-dispatch
     @		emacspeak-speak-message-at-time
     A		emacspeak-appt-repeat-announcement
     B		emacspeak-speak-buffer-interactively
     C		emacspeak-customize
     I		emacspeak-speak-show-active-network-interfaces
     L		emacspeak-speak-line-interactively
     M		emacspeak-speak-minor-mode-line
     N		emacspeak-view-emacspeak-news
     P		emacspeak-speak-paragraph-interactively
     R		emacspeak-speak-rectangle
     T		emacspeak-view-emacspeak-tips
     V		emacspeak-speak-version
     W		emacspeak-tapestry-select-window-by-name
     [		emacspeak-speak-page
     \		emacspeak-toggle-speak-line-invert-filter
     ]		emacspeak-speak-page-interactively
     ^		emacspeak-filtertext
     a		emacspeak-speak-message-again
     b		emacspeak-speak-buffer
     c		emacspeak-speak-char
     d		emacspeak-dtk-submap-command
     e		end-of-line
     f		emacspeak-speak-buffer-filename
     g		emacspeak-epub
     h		emacspeak-speak-help
     i		emacspeak-tabulate-region
     j		emacspeak-hide-or-expose-block
     k		emacspeak-speak-current-kill
     l		emacspeak-speak-line
     m		emacspeak-speak-mode-line
     n		emacspeak-speak-rest-of-buffer
     o		emacspeak-toggle-comint-output-monitor
     p		emacspeak-speak-paragraph
     q		emacspeak-toggle-speak-messages
     r		emacspeak-speak-region
     s		dtk-stop
     t		emacspeak-speak-time
     u		emacspeak-url-template-fetch
     v		view-register
     w		emacspeak-speak-word
     x		emacspeak-personal-keymap
     {		emacspeak-speak-paragraph
     |		emacspeak-speak-line-set-column-filter
     DEL		cd-tool
     C-SPC		emacspeak-speak-current-mark
     <C-left>	emacspeak-select-this-buffer-previous-display
     <C-right>	emacspeak-select-this-buffer-next-display
     <fn>	dtk-stop
     <delete>	emacspeak-ssh-tts-restart
     <down>		emacspeak-read-next-line
     <f1>		emacspeak-learn-emacs-mode
     <f11>		emacspeak-wizards-shell-toggle
     <insert>	emacspeak-emergency-tts-restart
     <left>		emacspeak-speak-this-buffer-previous-display
     <right>		emacspeak-speak-this-buffer-next-display
     <up>		emacspeak-read-previous-line
     <(deletechar>	emacspeak-ssh-tts-restart

     x SPC		emacspeak-jabber-speak-recent-message
     x ,		emacspeak-wizards-shell-directory-set
     x .		emacspeak-wizards-shell-directory-reset
     x 0 .. x 9	emacspeak-wizards-shell-by-key
     x =		emacspeak-wizards-find-longest-line-in-region
     x C		emacspeak-wizards-colors
     x a		emacspeak-wizards-alpha-vantage-quotes
     x b		battery
     x c		emacspeak-wizards-color-wheel
     x d		deadgrep
     x e		emacspeak-we-xsl-map
     x h		emacspeak-wizards-how-many-matches
     x i		ibuffer
     x j		emacspeak-jabber-popup-roster
     x m		mspools-show
     x o		emacspeak-wizards-occur-header-lines
     x p		package-list-packages
     x q		emacspeak-wizards-quote
     x r		jabber-activity-switch-to
     x s		emacspeak-emergency-tts-restart
     x t		emacspeak-speak-telephone-directory
     x u		emacspeak-wizards-units
     x v		emacspeak-wizards-vc-viewer
     x w		emacspeak-wizards-noaa-weather
     x |		emacspeak-wizards-squeeze-blanks
     x DEL		desktop-clear

     # a		emacspeak-gridtext-apply
     # l		emacspeak-gridtext-load
     # s		emacspeak-gridtext-save

     C-M-@		emacspeak-speak-spaces-at-point
     C-M-b		emacspeak-submit-bug
     C-M-k		kill-emacs
     C-M-l		emacspeak-speak-overlay-properties
     M-%		emacspeak-goto-percent
     M-;		emacspeak-webutils-play-media-at-point
     M-a		emacspeak-set-auditory-icon-player
     M-b		emacspeak-speak-other-buffer
     M-c		emacspeak-copy-current-file
     M-d		emacspeak-pronounce-dispatch
     M-f		emacspeak-frame-label-or-switch-to-labelled-frame
     M-h		emacspeak-speak-hostname
     M-i		emacspeak-table-display-table-in-region
     M-l		emacspeak-link-current-file
     M-m		emacspeak-toggle-mail-alert
     M-p		emacspeak-show-property-at-point
     M-q		voice-setup-toggle-silence-personality
     M-r		emacspeak-remote-connect-to-server
     M-s		emacspeak-symlink-current-file
     M-t		emacspeak-tapestry-describe-tapestry
     M-u		emacspeak-feeds-add-feed
     M-v		emacspeak-show-style-at-point
     M-w		emacspeak-speak-which-function
     M-x		emacspeak-wizards-execute-emacspeak-command
     C-M-SPC		emacspeak-speak-spaces-at-point

     C-t C-b		emacspeak-table-previous-column
     C-t C-f		emacspeak-table-next-column
     C-t TAB		emacspeak-table-next-column
     C-t C-n		emacspeak-table-next-row
     C-t C-p		emacspeak-table-previous-row
     C-t ESC		Prefix Command
     C-t SPC		emacspeak-table-speak-current-element
     C-t #		emacspeak-table-sort-on-current-column
     C-t ,		emacspeak-table-find-csv-file
     C-t .		emacspeak-table-speak-coordinates
     C-t <		emacspeak-table-goto-left
     C-t =		emacspeak-table-speak-dimensions
     C-t >		emacspeak-table-goto-right
     C-t A		emacspeak-table-goto-left
     C-t B		emacspeak-table-goto-bottom
     C-t C		emacspeak-table-search-column
     C-t E		emacspeak-table-goto-right
     C-t Q		emacspeak-kill-buffer-quietly
     C-t R		emacspeak-table-search-row
     C-t T		emacspeak-table-goto-top
     C-t a		emacspeak-table-select-automatic-speaking-method
     C-t b		emacspeak-table-speak-both-headers-and-element
     C-t c		emacspeak-table-speak-column-header-and-element
     C-t f		emacspeak-table-speak-row-filtered
     C-t g		emacspeak-table-speak-column-filtered
     C-t h		emacspeak-table-search-headers
     C-t j		emacspeak-table-goto
     C-t k		emacspeak-table-copy-to-clipboard
     C-t n		emacspeak-table-next-row
     C-t p		emacspeak-table-previous-row
     C-t q		quit-window
     C-t r		emacspeak-table-speak-row-header-and-element
     C-t s		emacspeak-table-search
     C-t v		emacspeak-table-view-csv-buffer
     C-t w		emacspeak-table-copy-current-element-to-kill-ring
     C-t x		emacspeak-table-copy-current-element-to-register
     C-t <S-tab>	emacspeak-table-previous-column
     C-t <down>	emacspeak-table-next-row
     C-t <left>	emacspeak-table-previous-column
     C-t <right>	emacspeak-table-next-column
     C-t <up>	emacspeak-table-previous-row

     d C-c		dtk-cloud
     d C-d		dectalk
     d C-e		espeak
     d RET		dtk-set-chunk-separator-syntax
     d C-n		dtk-notify-initialize
     d C-o		outloud
     d C-s		dtk-notify-shutdown
     d SPC		dtk-toggle-splitting-on-white-space
     d ,		dtk-toggle-punctuation-mode
     d 0 .. d 9	dtk-set-predefined-speech-rate
     d C		dtk-toggle-allcaps-beep
     d L		dtk-local-server
     d N		dtk-set-next-language
     d P		dtk-set-previous-language
     d R		dtk-reset-state
     d S		dtk-set-language
     d V		global-voice-lock-mode
     d a		dtk-add-cleanup-pattern
     d c		dtk-toggle-capitalization
     d d		dtk-select-server
     d f		dtk-set-character-scale
     d i		emacspeak-toggle-audio-indentation
     d k		emacspeak-toggle-character-echo
     d l		emacspeak-toggle-line-echo
     d m		emacspeak-speak-set-mode-punctuations
     d n		dtk-toggle-speak-nonprinting-chars
     d o		dtk-toggle-strip-octals
     d p		dtk-set-punctuations
     d r		dtk-set-rate
     d s		dtk-toggle-split-caps
     d v		voice-lock-toggle
     d w		emacspeak-toggle-word-echo
     d z		emacspeak-zap-tts

     x e C-c		emacspeak-we-junk-by-class-list
     x e C-f		emacspeak-we-count-matches
     x e C-p		emacspeak-we-xpath-junk-and-follow
     x e C-t		emacspeak-we-count-tables
     x e C-x		emacspeak-we-count-nested-tables
     x e C		emacspeak-we-extract-by-class-list
     x e D		emacspeak-we-junk-by-class-list
     x e I		emacspeak-we-extract-by-id-list
     x e M		emacspeak-we-extract-tables-by-match-list
     x e P		emacspeak-we-follow-and-extract-main
     x e S		emacspeak-we-style-filter
     x e T		emacspeak-we-extract-tables-by-position-list
     x e X		emacspeak-we-extract-nested-table-list
     x e a		emacspeak-we-xslt-apply
     x e b		emacspeak-we-follow-and-filter-by-id
     x e c		emacspeak-we-extract-by-class
     x e d		emacspeak-we-junk-by-class
     x e e		emacspeak-we-url-expand-and-execute
     x e f		emacspeak-we-xslt-filter
     x e i		emacspeak-we-extract-by-id
     x e j		emacspeak-we-xslt-junk
     x e k		emacspeak-we-toggle-xsl-keep-result
     x e m		emacspeak-we-extract-table-by-match
     x e o		emacspeak-we-xsl-toggle
     x e p		emacspeak-we-xpath-filter-and-follow
     x e r		emacspeak-we-extract-by-role
     x e s		emacspeak-we-xslt-select
     x e t		emacspeak-we-extract-table-by-position
     x e u		emacspeak-we-extract-matching-urls
     x e v		emacspeak-we-class-filter-and-follow-link
     x e x		emacspeak-we-extract-nested-table
     x e y		emacspeak-we-class-filter-and-follow
     x e z		emacspeak-we-extract-speakable

     C-t M-<		emacspeak-table-goto-top
     C-t M->		emacspeak-table-goto-bottom
     C-t M-l		emacspeak-table-ui-filter-load
     C-t M-s		emacspeak-table-ui-filter-save

     Emacspeak provides a set of additional keymaps to give easy access to
     its extensive facilities.

     Press C-; to access keybindings in emacspeak-hyper-keymap:
     key             binding
     —             ——-

     C-e		eshell
     TAB		hippie-expand
     C-r		flx-isearch-backward
     C-s		flx-isearch-forward
     C-u		emacspeak-feeds-browse
     SPC		emacspeak-webspace
     ’		emacspeak-m-player-using-hrtf
     /		emacspeak-wizards-web-clean-up-processes
     :		emacspeak-wizards-view-buffers-filtered-by-m-player-mode
     ;		emacspeak-m-player-using-openal
     B		eww-list-bookmarks
     F		rg-dwim
     N		emacspeak-npr-listing
     a		emacspeak-wizards-term
     b		eww-list-buffers
     c		browse-url-chrome
     d		magit-dispatch
     e		gmaps
     f		rg
     g		gnus
     h		emacspeak-org-capture-link
     i		yas-insert-snippet
     j		emacspeak-wizards-shell-toggle
     k		emacspeak-webspace-knowledge-search
     l		emacspeak-librivox
     m		vm
     n		emacspeak-npr-play-program
     o		helm-mini
     p		emacspeak-wizards-pdf-open
     r		org-capture
     s		emacspeak-wizards-shell
     t		twit
     u		list-unicode-display
     w		emacspeak-wizards-noaa-weather
     y		yas-expand

     SPC SPC		emacspeak-webspace-headlines-browse
     SPC h		emacspeak-webspace-headlines

     .

     Press C-’ or C-.  to access keybindings in emacspeak-super-keymap:
     key             binding
     —             ——-

     C-n		emacspeak-wizards-google-headlines
     SPC		emacspeak-wizards-scratch
     ’		emacspeak-vlc
     .		emacspeak-wizards-shell-directory-reset
     R		emacspeak-webspace-feed-reader
     S		soundscape-stop
     a		emacspeak-wizards-execute-asynchronously
     c		calculator
     d		emacspeak-dired-downloads
     e		elfeed
     f		flyspell-mode
     g		emacspeak-google-tts-region
     h		emacspeak-m-player-from-media-history
     j		ido-imenu-anywhere
     l		emacspeak-m-player-locate-media
     m		emacspeak-wizards-view-buffers-filtered-by-this-mode
     n		emacspeak-wizards-google-news
     o		org-switchb
     p		proced
     q		emacspeak-wizards-iex-show-quote
     r		soundscape-restart
     s		soundscape
     t		soundscape-toggle
     u		soundscape-update-mood
     w		define-word

     .

     Press C-, to access keybindings in emacspeak-alt-keymap:
     key             binding
     —             ——-

     SPC		emacspeak-eww-smart-tabs
     ,		emacspeak-eldoc-speak-doc
     a		emacspeak-feeds-atom-display
     b		sox-binaural
     c		emacspeak-wizards-view-buffers-filtered-by-this-mode
     e		eww
     i		emacspeak-wizards-iheart
     l		eww-open-file
     m		magit-status
     n		emacspeak-wizards-cycle-to-next-buffer
     o		emacspeak-feeds-opml-display
     p		emacspeak-wizards-cycle-to-previous-buffer
     q		emacspeak-wizards-iex-show-price
     r		emacspeak-feeds-rss-display
     s		emacspeak-wizards-tune-in-radio-search
     t		emacspeak-wizards-tune-in-radio-browse
     u		emacspeak-m-player-url
     v		visual-line-mode
     y		emacspeak-m-player-youtube-player

     .

     See the online documentation C-e TAB for individual
     commands and options for details.

12.9.1.2 emacspeak-describe-emacspeak
.....................................

 -- Command: emacspeak-describe-emacspeak
     ‘C-h C-e’
     ‘<f1> C-e’
     ‘<help> C-e’

     Give a brief overview of emacspeak.

12.9.1.3 emacspeak-info
.......................

 -- Command: emacspeak-info

     Open Emacspeak Info Manual.

12.9.1.4 emacspeak-sage-describe-symbol
.......................................

 -- Command: emacspeak-sage-describe-symbol (s)

     Describe Sage symbol at point.

     (fn S)

12.9.1.5 emacspeak-sage-get-output
..................................

 -- Command: emacspeak-sage-get-output

     Return most recent Sage output

12.9.1.6 emacspeak-sage-get-output-as-latex
...........................................

 -- Command: emacspeak-sage-get-output-as-latex

     Return most recent Sage output as LaTeX markup.

12.9.1.7 emacspeak-sage-speak-output
....................................

 -- Command: emacspeak-sage-speak-output

     Speak last output from Sage.

12.9.1.8 emacspeak-submit-bug
.............................

 -- Command: emacspeak-submit-bug
     ‘C-e C-M-b’
     ‘<fn> C-M-b’

     Function to submit a bug to the programs maintainer.

12.9.2 emacspeak Options
------------------------

 -- Variable: User Option emacspeak-play-emacspeak-startup-icon
     If set to T, emacspeak plays its icon as it launches.

 -- Variable: User Option voice-Info-quoted
     Personality used for Info-quoted This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option voice-Man-overstrike
     Personality used for Man-overstrike This personality uses
     voice-bolden-medium whose effect can be changed globally by
     customizing voice-bolden-medium-settings.

 -- Variable: User Option voice-Man-reverse
     Personality used for Man-reverse This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option voice-Man-underline
     Personality used for Man-underline This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option voice-bold
     Personality used for bold This personality uses voice-bolden whose
     effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-bold-italic
     Personality used for bold-italic This personality uses
     voice-bolden-and-animate whose effect can be changed globally by
     customizing voice-bolden-and-animate-settings.

 -- Variable: User Option voice-buffer-menu-buffer
     Personality used for buffer-menu-buffer This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-builtin-personality
     Personality used for font-lock-builtin-face This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-button
     Personality used for button This personality uses
     voice-bolden-medium whose effect can be changed globally by
     customizing voice-bolden-medium-settings.

 -- Variable: User Option voice-calendar-today
     Personality used for calendar-today This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option voice-comint-highlight-input
     Personality used for comint-highlight-input This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-comint-highlight-prompt
     Personality used for comint-highlight-prompt This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option voice-comment-delimiter-personality
     Personality used for font-lock-comment-delimiter-face This
     personality uses voice-smoothen-medium whose effect can be changed
     globally by customizing voice-smoothen-medium-settings.

 -- Variable: User Option voice-comment-personality
     Personality used for font-lock-comment-face This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option voice-completions-annotations
     Personality used for completions-annotations This personality uses
     voice-annotate whose effect can be changed globally by customizing
     voice-annotate-settings.

 -- Variable: User Option voice-completions-common-part
     Personality used for completions-common-part This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option voice-completions-first-difference
     Personality used for completions-first-difference This personality
     uses voice-brighten whose effect can be changed globally by
     customizing voice-brighten-settings.

 -- Variable: User Option voice-constant-personality
     Personality used for font-lock-constant-face This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option voice-custom-button
     Personality used for custom-button This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-custom-button-mouse
     Personality used for custom-button-mouse This personality uses
     voice-bolden-medium whose effect can be changed globally by
     customizing voice-bolden-medium-settings.

 -- Variable: User Option voice-custom-button-pressed
     Personality used for custom-button-pressed This personality uses
     voice-bolden-extra whose effect can be changed globally by
     customizing voice-bolden-extra-settings.

 -- Variable: User Option voice-custom-button-pressed-unraised
     Personality used for custom-button-pressed-unraised This
     personality uses voice-bolden-extra whose effect can be changed
     globally by customizing voice-bolden-extra-settings.

 -- Variable: User Option voice-custom-button-unraised
     Personality used for custom-button-unraised This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option voice-custom-changed
     Personality used for custom-changed This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option voice-custom-comment
     Personality used for custom-comment This personality uses
     voice-monotone-medium whose effect can be changed globally by
     customizing voice-monotone-medium-settings.

 -- Variable: User Option voice-custom-comment-tag
     Personality used for custom-comment-tag This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option voice-custom-documentation
     Personality used for custom-documentation This personality uses
     voice-brighten-medium whose effect can be changed globally by
     customizing voice-brighten-medium-settings.

 -- Variable: User Option voice-custom-face-tag
     Personality used for custom-face-tag This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option voice-custom-group-subtitle
     Personality used for custom-group-subtitle This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option voice-custom-group-tag
     Personality used for custom-group-tag This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-custom-group-tag-1
     Personality used for custom-group-tag-1 This personality uses
     voice-lighten-medium whose effect can be changed globally by
     customizing voice-lighten-medium-settings.

 -- Variable: User Option voice-custom-invalid
     Personality used for custom-invalid This personality uses
     voice-animate-extra whose effect can be changed globally by
     customizing voice-animate-extra-settings.

 -- Variable: User Option voice-custom-link
     Personality used for custom-link This personality uses voice-bolden
     whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-custom-modified
     Personality used for custom-modified This personality uses
     voice-lighten-medium whose effect can be changed globally by
     customizing voice-lighten-medium-settings.

 -- Variable: User Option voice-custom-rogue
     Personality used for custom-rogue This personality uses
     voice-bolden-and-animate whose effect can be changed globally by
     customizing voice-bolden-and-animate-settings.

 -- Variable: User Option voice-custom-saved
     Personality used for custom-saved This personality uses
     voice-smoothen-extra whose effect can be changed globally by
     customizing voice-smoothen-extra-settings.

 -- Variable: User Option voice-custom-set
     Personality used for custom-set This personality uses
     voice-smoothen-medium whose effect can be changed globally by
     customizing voice-smoothen-medium-settings.

 -- Variable: User Option voice-custom-state
     Personality used for custom-state This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option voice-custom-themed
     Personality used for custom-themed This personality uses
     voice-brighten whose effect can be changed globally by customizing
     voice-brighten-settings.

 -- Variable: User Option voice-custom-variable-button
     Personality used for custom-variable-button This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option voice-custom-variable-tag
     Personality used for custom-variable-tag This personality uses
     voice-bolden-medium whose effect can be changed globally by
     customizing voice-bolden-medium-settings.

 -- Variable: User Option voice-custom-visibility
     Personality used for custom-visibility This personality uses
     voice-annotate whose effect can be changed globally by customizing
     voice-annotate-settings.

 -- Variable: User Option voice-diary
     Personality used for diary This personality uses voice-bolden whose
     effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-diff-added
     Personality used for diff-added This personality uses
     voice-brighten whose effect can be changed globally by customizing
     voice-brighten-settings.

 -- Variable: User Option voice-diff-changed
     Personality used for diff-changed This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option voice-diff-context
     Personality used for diff-context This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option voice-diff-file-header
     Personality used for diff-file-header This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-diff-function
     Personality used for diff-function This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option voice-diff-header
     Personality used for diff-header This personality uses
     voice-bolden-extra whose effect can be changed globally by
     customizing voice-bolden-extra-settings.

 -- Variable: User Option voice-diff-hunk-header
     Personality used for diff-hunk-header This personality uses
     voice-bolden-medium whose effect can be changed globally by
     customizing voice-bolden-medium-settings.

 -- Variable: User Option voice-diff-index
     Personality used for diff-index This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option voice-diff-indicator-added
     Personality used for diff-indicator-added This personality uses
     voice-annotate whose effect can be changed globally by customizing
     voice-annotate-settings.

 -- Variable: User Option voice-diff-indicator-changed
     Personality used for diff-indicator-changed This personality uses
     voice-annotate whose effect can be changed globally by customizing
     voice-annotate-settings.

 -- Variable: User Option voice-diff-indicator-removed
     Personality used for diff-indicator-removed This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option voice-diff-nonexistent
     Personality used for diff-nonexistent This personality uses
     voice-lighten-extra whose effect can be changed globally by
     customizing voice-lighten-extra-settings.

 -- Variable: User Option voice-diff-refine-added
     Personality used for diff-refine-added This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option voice-diff-refine-changed
     Personality used for diff-refine-changed This personality uses
     voice-brighten-medium whose effect can be changed globally by
     customizing voice-brighten-medium-settings.

 -- Variable: User Option voice-diff-refine-removed
     Personality used for diff-refine-removed This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option voice-diff-removed
     Personality used for diff-removed This personality uses
     voice-smoothen-extra whose effect can be changed globally by
     customizing voice-smoothen-extra-settings.

 -- Variable: User Option voice-dired-directory
     Personality used for dired-directory This personality uses
     voice-bolden-medium whose effect can be changed globally by
     customizing voice-bolden-medium-settings.

 -- Variable: User Option voice-dired-flagged
     Personality used for dired-flagged This personality uses
     voice-animate-extra whose effect can be changed globally by
     customizing voice-animate-extra-settings.

 -- Variable: User Option voice-dired-header
     Personality used for dired-header This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option voice-dired-ignored
     Personality used for dired-ignored This personality uses
     voice-lighten-extra whose effect can be changed globally by
     customizing voice-lighten-extra-settings.

 -- Variable: User Option voice-dired-mark
     Personality used for dired-mark This personality uses voice-lighten
     whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option voice-dired-marked
     Personality used for dired-marked This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option voice-dired-perm-write
     Personality used for dired-perm-write This personality uses
     voice-lighten-extra whose effect can be changed globally by
     customizing voice-lighten-extra-settings.

 -- Variable: User Option voice-dired-symlink
     Personality used for dired-symlink This personality uses
     voice-animate-extra whose effect can be changed globally by
     customizing voice-animate-extra-settings.

 -- Variable: User Option voice-dired-warning
     Personality used for dired-warning This personality uses
     voice-animate-extra whose effect can be changed globally by
     customizing voice-animate-extra-settings.

 -- Variable: User Option voice-doc-personality
     Personality used for font-lock-doc-face This personality uses
     voice-monotone-medium whose effect can be changed globally by
     customizing voice-monotone-medium-settings.

 -- Variable: User Option voice-ediff-current-diff-A
     Personality used for ediff-current-diff-A This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option voice-ediff-current-diff-Ancestor
     Personality used for ediff-current-diff-Ancestor This personality
     uses voice-lighten-extra whose effect can be changed globally by
     customizing voice-lighten-extra-settings.

 -- Variable: User Option voice-ediff-current-diff-B
     Personality used for ediff-current-diff-B This personality uses
     voice-brighten whose effect can be changed globally by customizing
     voice-brighten-settings.

 -- Variable: User Option voice-ediff-current-diff-C
     Personality used for ediff-current-diff-C This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option voice-ediff-even-diff-A
     Personality used for ediff-even-diff-A This personality uses
     voice-brighten whose effect can be changed globally by customizing
     voice-brighten-settings.

 -- Variable: User Option voice-ediff-even-diff-Ancestor
     Personality used for ediff-even-diff-Ancestor This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option voice-ediff-even-diff-B
     Personality used for ediff-even-diff-B This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option voice-ediff-even-diff-C
     Personality used for ediff-even-diff-C This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option voice-ediff-fine-diff-A
     Personality used for ediff-fine-diff-A This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option voice-ediff-fine-diff-Ancestor
     Personality used for ediff-fine-diff-Ancestor This personality uses
     voice-lighten-extra whose effect can be changed globally by
     customizing voice-lighten-extra-settings.

 -- Variable: User Option voice-ediff-fine-diff-B
     Personality used for ediff-fine-diff-B This personality uses
     voice-brighten whose effect can be changed globally by customizing
     voice-brighten-settings.

 -- Variable: User Option voice-ediff-fine-diff-C
     Personality used for ediff-fine-diff-C This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option voice-ediff-odd-diff-A
     Personality used for ediff-odd-diff-A This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option voice-ediff-odd-diff-Ancestor
     Personality used for ediff-odd-diff-Ancestor This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option voice-ediff-odd-diff-B
     Personality used for ediff-odd-diff-B This personality uses
     voice-brighten whose effect can be changed globally by customizing
     voice-brighten-settings.

 -- Variable: User Option voice-ediff-odd-diff-C
     Personality used for ediff-odd-diff-C This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option voice-eldoc-highlight-function-argument
     Personality used for eldoc-highlight-function-argument This
     personality uses voice-bolden whose effect can be changed globally
     by customizing voice-bolden-settings.

 -- Variable: User Option voice-epa-field-body
     Personality used for epa-field-body This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option voice-epa-field-name
     Personality used for epa-field-name This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option voice-epa-mark
     Personality used for epa-mark This personality uses voice-bolden
     whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-epa-string
     Personality used for epa-string This personality uses voice-lighten
     whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option voice-epa-validity-disabled
     Personality used for epa-validity-disabled This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option voice-epa-validity-high
     Personality used for epa-validity-high This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option voice-epa-validity-low
     Personality used for epa-validity-low This personality uses
     voice-smoothen-extra whose effect can be changed globally by
     customizing voice-smoothen-extra-settings.

 -- Variable: User Option voice-epa-validity-medium
     Personality used for epa-validity-medium This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option voice-error
     Personality used for error This personality uses voice-animate
     whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option voice-eww-form-checkbox
     Personality used for eww-form-checkbox This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option voice-eww-form-file
     Personality used for eww-form-file This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option voice-eww-form-select
     Personality used for eww-form-select This personality uses
     voice-annotate whose effect can be changed globally by customizing
     voice-annotate-settings.

 -- Variable: User Option voice-eww-form-submit
     Personality used for eww-form-submit This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option voice-eww-form-text
     Personality used for eww-form-text This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option voice-eww-form-textarea
     Personality used for eww-form-textarea This personality uses
     voice-brighten whose effect can be changed globally by customizing
     voice-brighten-settings.

 -- Variable: User Option voice-eww-invalid-certificate
     Personality used for eww-invalid-certificate This personality uses
     voice-bolden-and-animate whose effect can be changed globally by
     customizing voice-bolden-and-animate-settings.

 -- Variable: User Option voice-eww-valid-certificate
     Personality used for eww-valid-certificate This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-file-name-shadow
     Personality used for file-name-shadow This personality uses
     voice-monotone-medium whose effect can be changed globally by
     customizing voice-monotone-medium-settings.

 -- Variable: User Option voice-fixed-pitch
     Personality used for fixed-pitch This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option voice-flyspell-duplicate
     Personality used for flyspell-duplicate This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option voice-flyspell-incorrect
     Personality used for flyspell-incorrect This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-function-name-personality
     Personality used for font-lock-function-name-face This personality
     uses voice-bolden-medium whose effect can be changed globally by
     customizing voice-bolden-medium-settings.

 -- Variable: User Option voice-gnus-cite-1
     Personality used for gnus-cite-1 This personality uses
     voice-bolden-medium whose effect can be changed globally by
     customizing voice-bolden-medium-settings.

 -- Variable: User Option voice-gnus-cite-10
     Personality used for gnus-cite-10 This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option voice-gnus-cite-11
     Personality used for gnus-cite-11 This personality uses
     voice-lighten-extra whose effect can be changed globally by
     customizing voice-lighten-extra-settings.

 -- Variable: User Option voice-gnus-cite-2
     Personality used for gnus-cite-2 This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option voice-gnus-cite-3
     Personality used for gnus-cite-3 This personality uses
     voice-lighten-extra whose effect can be changed globally by
     customizing voice-lighten-extra-settings.

 -- Variable: User Option voice-gnus-cite-4
     Personality used for gnus-cite-4 This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option voice-gnus-cite-5
     Personality used for gnus-cite-5 This personality uses
     voice-smoothen-extra whose effect can be changed globally by
     customizing voice-smoothen-extra-settings.

 -- Variable: User Option voice-gnus-cite-6
     Personality used for gnus-cite-6 This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option voice-gnus-cite-7
     Personality used for gnus-cite-7 This personality uses
     voice-lighten-extra whose effect can be changed globally by
     customizing voice-lighten-extra-settings.

 -- Variable: User Option voice-gnus-cite-8
     Personality used for gnus-cite-8 This personality uses voice-bolden
     whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-gnus-cite-9
     Personality used for gnus-cite-9 This personality uses
     voice-bolden-medium whose effect can be changed globally by
     customizing voice-bolden-medium-settings.

 -- Variable: User Option voice-gnus-emphasis-bold
     Personality used for gnus-emphasis-bold This personality uses
     voice-bolden-and-animate whose effect can be changed globally by
     customizing voice-bolden-and-animate-settings.

 -- Variable: User Option voice-gnus-emphasis-highlight-words
     Personality used for gnus-emphasis-highlight-words This personality
     uses voice-lighten-extra whose effect can be changed globally by
     customizing voice-lighten-extra-settings.

 -- Variable: User Option voice-gnus-emphasis-italic
     Personality used for gnus-emphasis-italic This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option voice-gnus-emphasis-strikethru
     Personality used for gnus-emphasis-strikethru This personality uses
     voice-bolden-extra whose effect can be changed globally by
     customizing voice-bolden-extra-settings.

 -- Variable: User Option voice-gnus-emphasis-underline
     Personality used for gnus-emphasis-underline This personality uses
     voice-brighten-extra whose effect can be changed globally by
     customizing voice-brighten-extra-settings.

 -- Variable: User Option voice-gnus-group-mail-1-empty
     Personality used for gnus-group-mail-1-empty This personality uses
     voice-bolden-extra whose effect can be changed globally by
     customizing voice-bolden-extra-settings.

 -- Variable: User Option voice-gnus-group-mail-2-empty
     Personality used for gnus-group-mail-2-empty This personality uses
     voice-bolden-extra whose effect can be changed globally by
     customizing voice-bolden-extra-settings.

 -- Variable: User Option voice-gnus-group-mail-3-empty
     Personality used for gnus-group-mail-3-empty This personality uses
     voice-bolden-extra whose effect can be changed globally by
     customizing voice-bolden-extra-settings.

 -- Variable: User Option voice-gnus-group-mail-low-empty
     Personality used for gnus-group-mail-low-empty This personality
     uses voice-bolden-extra whose effect can be changed globally by
     customizing voice-bolden-extra-settings.

 -- Variable: User Option voice-gnus-group-news-1-empty
     Personality used for gnus-group-news-1-empty This personality uses
     voice-bolden-extra whose effect can be changed globally by
     customizing voice-bolden-extra-settings.

 -- Variable: User Option voice-gnus-group-news-2-empty
     Personality used for gnus-group-news-2-empty This personality uses
     voice-bolden-extra whose effect can be changed globally by
     customizing voice-bolden-extra-settings.

 -- Variable: User Option voice-gnus-group-news-3-empty
     Personality used for gnus-group-news-3-empty This personality uses
     voice-bolden-extra whose effect can be changed globally by
     customizing voice-bolden-extra-settings.

 -- Variable: User Option voice-gnus-group-news-4-empty
     Personality used for gnus-group-news-4-empty This personality uses
     voice-bolden-extra whose effect can be changed globally by
     customizing voice-bolden-extra-settings.

 -- Variable: User Option voice-gnus-group-news-5-empty
     Personality used for gnus-group-news-5-empty This personality uses
     voice-bolden-extra whose effect can be changed globally by
     customizing voice-bolden-extra-settings.

 -- Variable: User Option voice-gnus-group-news-6-empty
     Personality used for gnus-group-news-6-empty This personality uses
     voice-bolden-extra whose effect can be changed globally by
     customizing voice-bolden-extra-settings.

 -- Variable: User Option voice-gnus-group-news-low-empty
     Personality used for gnus-group-news-low-empty This personality
     uses voice-bolden-extra whose effect can be changed globally by
     customizing voice-bolden-extra-settings.

 -- Variable: User Option voice-gnus-header-content
     Personality used for gnus-header-content This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-gnus-header-from
     Personality used for gnus-header-from This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-gnus-header-name
     Personality used for gnus-header-name This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option voice-gnus-header-newsgroups
     Personality used for gnus-header-newsgroups This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-gnus-header-subject
     Personality used for gnus-header-subject This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-gnus-server-agent
     Personality used for gnus-server-agent This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-gnus-server-closed
     Personality used for gnus-server-closed This personality uses
     voice-bolden-medium whose effect can be changed globally by
     customizing voice-bolden-medium-settings.

 -- Variable: User Option voice-gnus-server-denied
     Personality used for gnus-server-denied This personality uses
     voice-bolden-extra whose effect can be changed globally by
     customizing voice-bolden-extra-settings.

 -- Variable: User Option voice-gnus-server-offline
     Personality used for gnus-server-offline This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option voice-gnus-server-opened
     Personality used for gnus-server-opened This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option voice-gnus-signature
     Personality used for gnus-signature This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option voice-gnus-summary-cancelled
     Personality used for gnus-summary-cancelled This personality uses
     voice-bolden-extra whose effect can be changed globally by
     customizing voice-bolden-extra-settings.

 -- Variable: User Option voice-gnus-summary-high-ancient
     Personality used for gnus-summary-high-ancient This personality
     uses voice-smoothen-extra whose effect can be changed globally by
     customizing voice-smoothen-extra-settings.

 -- Variable: User Option voice-gnus-summary-high-read
     Personality used for gnus-summary-high-read This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-gnus-summary-high-ticked
     Personality used for gnus-summary-high-ticked This personality uses
     voice-brighten-extra whose effect can be changed globally by
     customizing voice-brighten-extra-settings.

 -- Variable: User Option voice-gnus-summary-high-unread
     Personality used for gnus-summary-high-unread This personality uses
     voice-brighten-extra whose effect can be changed globally by
     customizing voice-brighten-extra-settings.

 -- Variable: User Option voice-gnus-summary-low-ancient
     Personality used for gnus-summary-low-ancient This personality uses
     voice-smoothen-extra whose effect can be changed globally by
     customizing voice-smoothen-extra-settings.

 -- Variable: User Option voice-gnus-summary-low-read
     Personality used for gnus-summary-low-read This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-gnus-summary-low-ticked
     Personality used for gnus-summary-low-ticked This personality uses
     voice-brighten-extra whose effect can be changed globally by
     customizing voice-brighten-extra-settings.

 -- Variable: User Option voice-gnus-summary-low-undownloaded
     Personality used for gnus-summary-low-undownloaded This personality
     uses voice-bolden-and-animate whose effect can be changed globally
     by customizing voice-bolden-and-animate-settings.

 -- Variable: User Option voice-gnus-summary-low-unread
     Personality used for gnus-summary-low-unread This personality uses
     voice-bolden-medium whose effect can be changed globally by
     customizing voice-bolden-medium-settings.

 -- Variable: User Option voice-gnus-summary-normal-ancient
     Personality used for gnus-summary-normal-ancient This personality
     uses voice-smoothen-extra whose effect can be changed globally by
     customizing voice-smoothen-extra-settings.

 -- Variable: User Option voice-gnus-summary-normal-read
     Personality used for gnus-summary-normal-read This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option voice-gnus-summary-normal-ticked
     Personality used for gnus-summary-normal-ticked This personality
     uses voice-brighten-extra whose effect can be changed globally by
     customizing voice-brighten-extra-settings.

 -- Variable: User Option voice-gnus-summary-normal-undownloaded
     Personality used for gnus-summary-normal-undownloaded This
     personality uses voice-bolden-and-animate whose effect can be
     changed globally by customizing voice-bolden-and-animate-settings.

 -- Variable: User Option voice-gnus-summary-selected
     Personality used for gnus-summary-selected This personality uses
     voice-animate-extra whose effect can be changed globally by
     customizing voice-animate-extra-settings.

 -- Variable: User Option voice-header-line
     Personality used for header-line This personality uses voice-bolden
     whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-help-argument-name
     Personality used for help-argument-name This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option voice-highlight
     Personality used for highlight This personality uses voice-animate
     whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option voice-holiday
     Personality used for holiday This personality uses
     voice-brighten-extra whose effect can be changed globally by
     customizing voice-brighten-extra-settings.

 -- Variable: User Option voice-hydra-face-amaranth
     Personality used for hydra-face-amaranth This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option voice-hydra-face-blue
     Personality used for hydra-face-blue This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option voice-hydra-face-pink
     Personality used for hydra-face-pink This personality uses
     voice-bolden-medium whose effect can be changed globally by
     customizing voice-bolden-medium-settings.

 -- Variable: User Option voice-hydra-face-red
     Personality used for hydra-face-red This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-hydra-face-teal
     Personality used for hydra-face-teal This personality uses
     voice-lighten-medium whose effect can be changed globally by
     customizing voice-lighten-medium-settings.

 -- Variable: User Option voice-ido-first-match
     Personality used for ido-first-match This personality uses
     voice-brighten whose effect can be changed globally by customizing
     voice-brighten-settings.

 -- Variable: User Option voice-ido-incomplete-regexp
     Personality used for ido-incomplete-regexp This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option voice-ido-indicator
     Personality used for ido-indicator This personality uses
     voice-brighten whose effect can be changed globally by customizing
     voice-brighten-settings.

 -- Variable: User Option voice-ido-only-match
     Personality used for ido-only-match This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-ido-subdir
     Personality used for ido-subdir This personality uses voice-lighten
     whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option voice-ido-virtual
     Personality used for ido-virtual This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option voice-info-header-node
     Personality used for info-header-node This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option voice-info-header-xref
     Personality used for info-header-xref This personality uses
     voice-brighten whose effect can be changed globally by customizing
     voice-brighten-settings.

 -- Variable: User Option voice-info-index-match
     Personality used for info-index-match This personality uses
     ’voice-bolden-medium whose effect can be changed globally by
     customizing ’voice-bolden-medium-settings.

 -- Variable: User Option voice-info-menu-header
     Personality used for info-menu-header This personality uses
     voice-bolden-medium whose effect can be changed globally by
     customizing voice-bolden-medium-settings.

 -- Variable: User Option voice-info-menu-star
     Personality used for info-menu-star This personality uses
     voice-brighten whose effect can be changed globally by customizing
     voice-brighten-settings.

 -- Variable: User Option voice-info-node
     Personality used for info-node This personality uses voice-monotone
     whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option voice-info-title-1
     Personality used for info-title-1 This personality uses
     voice-bolden-extra whose effect can be changed globally by
     customizing voice-bolden-extra-settings.

 -- Variable: User Option voice-info-title-2
     Personality used for info-title-2 This personality uses
     voice-bolden-medium whose effect can be changed globally by
     customizing voice-bolden-medium-settings.

 -- Variable: User Option voice-info-title-3
     Personality used for info-title-3 This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-info-title-4
     Personality used for info-title-4 This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option voice-info-xref
     Personality used for info-xref This personality uses
     voice-animate-extra whose effect can be changed globally by
     customizing voice-animate-extra-settings.

 -- Variable: User Option voice-info-xref-visited
     Personality used for info-xref-visited This personality uses
     voice-animate-medium whose effect can be changed globally by
     customizing voice-animate-medium-settings.

 -- Variable: User Option voice-isearch
     Personality used for isearch This personality uses voice-bolden
     whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-isearch-fail
     Personality used for isearch-fail This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option voice-italic
     Personality used for italic This personality uses voice-animate
     whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option voice-jabber-chat-error
     Personality used for jabber-chat-error This personality uses
     voice-bolden-and-animate whose effect can be changed globally by
     customizing voice-bolden-and-animate-settings.

 -- Variable: User Option voice-jabber-chat-prompt-foreign
     Personality used for jabber-chat-prompt-foreign This personality
     uses voice-brighten-medium whose effect can be changed globally by
     customizing voice-brighten-medium-settings.

 -- Variable: User Option voice-jabber-chat-prompt-local
     Personality used for jabber-chat-prompt-local This personality uses
     voice-smoothen-medium whose effect can be changed globally by
     customizing voice-smoothen-medium-settings.

 -- Variable: User Option voice-jabber-chat-prompt-system
     Personality used for jabber-chat-prompt-system This personality
     uses voice-brighten-extra whose effect can be changed globally by
     customizing voice-brighten-extra-settings.

 -- Variable: User Option voice-jabber-chat-text-local
     Personality used for jabber-chat-text-local This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option voice-jabber-roster-user-away
     Personality used for jabber-roster-user-away This personality uses
     voice-smoothen-extra whose effect can be changed globally by
     customizing voice-smoothen-extra-settings.

 -- Variable: User Option voice-jabber-roster-user-chatty
     Personality used for jabber-roster-user-chatty This personality
     uses voice-brighten whose effect can be changed globally by
     customizing voice-brighten-settings.

 -- Variable: User Option voice-jabber-roster-user-dnd
     Personality used for jabber-roster-user-dnd This personality uses
     voice-lighten-medium whose effect can be changed globally by
     customizing voice-lighten-medium-settings.

 -- Variable: User Option voice-jabber-roster-user-error
     Personality used for jabber-roster-user-error This personality uses
     voice-bolden-and-animate whose effect can be changed globally by
     customizing voice-bolden-and-animate-settings.

 -- Variable: User Option voice-jabber-roster-user-offline
     Personality used for jabber-roster-user-offline This personality
     uses voice-smoothen-extra whose effect can be changed globally by
     customizing voice-smoothen-extra-settings.

 -- Variable: User Option voice-jabber-roster-user-online
     Personality used for jabber-roster-user-online This personality
     uses voice-bolden whose effect can be changed globally by
     customizing voice-bolden-settings.

 -- Variable: User Option voice-jabber-roster-user-xa
     Personality used for jabber-roster-user-xa This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option voice-jabber-title-large
     Personality used for jabber-title-large This personality uses
     voice-bolden-extra whose effect can be changed globally by
     customizing voice-bolden-extra-settings.

 -- Variable: User Option voice-jabber-title-medium
     Personality used for jabber-title-medium This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-jabber-title-small
     Personality used for jabber-title-small This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option voice-js2-error
     Personality used for js2-error This personality uses
     voice-bolden-extra whose effect can be changed globally by
     customizing voice-bolden-extra-settings.

 -- Variable: User Option voice-js2-external-variable
     Personality used for js2-external-variable This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option voice-js2-function-param
     Personality used for js2-function-param This personality uses
     voice-lighten-extra whose effect can be changed globally by
     customizing voice-lighten-extra-settings.

 -- Variable: User Option voice-js2-instance-member
     Personality used for js2-instance-member This personality uses
     voice-lighten-medium whose effect can be changed globally by
     customizing voice-lighten-medium-settings.

 -- Variable: User Option voice-js2-jsdoc-html-tag-delimiter
     Personality used for js2-jsdoc-html-tag-delimiter This personality
     uses voice-smoothen whose effect can be changed globally by
     customizing voice-smoothen-settings.

 -- Variable: User Option voice-js2-jsdoc-html-tag-name
     Personality used for js2-jsdoc-html-tag-name This personality uses
     voice-bolden-medium whose effect can be changed globally by
     customizing voice-bolden-medium-settings.

 -- Variable: User Option voice-js2-jsdoc-tag
     Personality used for js2-jsdoc-tag This personality uses
     voice-bolden-medium whose effect can be changed globally by
     customizing voice-bolden-medium-settings.

 -- Variable: User Option voice-js2-jsdoc-type
     Personality used for js2-jsdoc-type This personality uses
     voice-smoothen-medium whose effect can be changed globally by
     customizing voice-smoothen-medium-settings.

 -- Variable: User Option voice-js2-jsdoc-value
     Personality used for js2-jsdoc-value This personality uses
     voice-lighten-medium whose effect can be changed globally by
     customizing voice-lighten-medium-settings.

 -- Variable: User Option voice-js2-magic-paren
     Personality used for js2-magic-paren This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option voice-js2-private-function-call
     Personality used for js2-private-function-call This personality
     uses voice-smoothen-extra whose effect can be changed globally by
     customizing voice-smoothen-extra-settings.

 -- Variable: User Option voice-js2-private-member
     Personality used for js2-private-member This personality uses
     voice-lighten-extra whose effect can be changed globally by
     customizing voice-lighten-extra-settings.

 -- Variable: User Option voice-js2-warning
     Personality used for js2-warning This personality uses
     voice-bolden-and-animate whose effect can be changed globally by
     customizing voice-bolden-and-animate-settings.

 -- Variable: User Option voice-keyword-personality
     Personality used for font-lock-keyword-face This personality uses
     voice-animate-extra whose effect can be changed globally by
     customizing voice-animate-extra-settings.

 -- Variable: User Option voice-latex-bold-personality
     Personality used for font-latex-bold-face This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-latex-doctex-documentation-personality
     Personality used for font-latex-doctex-documentation-face This
     personality uses voice-monotone-medium whose effect can be changed
     globally by customizing voice-monotone-medium-settings.

 -- Variable: User Option voice-latex-doctex-preprocessor-personality
     Personality used for font-latex-doctex-preprocessor-face This
     personality uses voice-brighten-medium whose effect can be changed
     globally by customizing voice-brighten-medium-settings.

 -- Variable: User Option voice-latex-italic-personality
     Personality used for font-latex-italic-face This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option voice-latex-math-personality
     Personality used for font-latex-math-face This personality uses
     voice-brighten-extra whose effect can be changed globally by
     customizing voice-brighten-extra-settings.

 -- Variable: User Option voice-latex-sedate-personality
     Personality used for font-latex-sedate-face This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option voice-latex-string-personality
     Personality used for font-latex-string-face This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option voice-latex-subscript-personality
     Personality used for font-latex-subscript-face This personality
     uses voice-smoothen whose effect can be changed globally by
     customizing voice-smoothen-settings.

 -- Variable: User Option voice-latex-superscript-personality
     Personality used for font-latex-superscript-face This personality
     uses voice-brighten whose effect can be changed globally by
     customizing voice-brighten-settings.

 -- Variable: User Option voice-latex-verbatim-personality
     Personality used for font-latex-verbatim-face This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option voice-latex-warning-personality
     Personality used for font-latex-warning-face This personality uses
     voice-bolden-and-animate whose effect can be changed globally by
     customizing voice-bolden-and-animate-settings.

 -- Variable: User Option voice-link
     Personality used for link This personality uses voice-bolden-medium
     whose effect can be changed globally by customizing
     voice-bolden-medium-settings.

 -- Variable: User Option voice-link-visited
     Personality used for link-visited This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-lispy-face-hint
     Personality used for lispy-face-hint This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option voice-lispy-face-key-nosel
     Personality used for lispy-face-key-nosel This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option voice-lispy-face-key-sel
     Personality used for lispy-face-key-sel This personality uses
     voice-brighten whose effect can be changed globally by customizing
     voice-brighten-settings.

 -- Variable: User Option voice-lispy-face-opt-nosel
     Personality used for lispy-face-opt-nosel This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option voice-lispy-face-opt-sel
     Personality used for lispy-face-opt-sel This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option voice-lispy-face-req-nosel
     Personality used for lispy-face-req-nosel This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option voice-lispy-face-req-sel
     Personality used for lispy-face-req-sel This personality uses
     voice-brighten-extra whose effect can be changed globally by
     customizing voice-brighten-extra-settings.

 -- Variable: User Option voice-lispy-face-rst-nosel
     Personality used for lispy-face-rst-nosel This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option voice-lispy-face-rst-sel
     Personality used for lispy-face-rst-sel This personality uses
     voice-lighten-extra whose effect can be changed globally by
     customizing voice-lighten-extra-settings.

 -- Variable: User Option voice-log-edit-header
     Personality used for log-edit-header This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-log-edit-summary
     Personality used for log-edit-summary This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option voice-log-edit-unknown-header
     Personality used for log-edit-unknown-header This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option voice-match
     Personality used for match This personality uses voice-lighten
     whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option voice-message-cited-text
     Personality used for message-cited-text This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-message-header-cc
     Personality used for message-header-cc This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-message-header-name
     Personality used for message-header-name This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option voice-message-header-newsgroups
     Personality used for message-header-newsgroups This personality
     uses voice-bolden whose effect can be changed globally by
     customizing voice-bolden-settings.

 -- Variable: User Option voice-message-header-other
     Personality used for message-header-other This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-message-header-subject
     Personality used for message-header-subject This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-message-header-to
     Personality used for message-header-to This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-message-header-xheader
     Personality used for message-header-xheader This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-message-mml
     Personality used for message-mml This personality uses
     voice-brighten whose effect can be changed globally by customizing
     voice-brighten-settings.

 -- Variable: User Option voice-message-separator
     Personality used for message-separator This personality uses
     voice-bolden-extra whose effect can be changed globally by
     customizing voice-bolden-extra-settings.

 -- Variable: User Option voice-minibuffer-prompt
     Personality used for minibuffer-prompt This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-negation-char-personality
     Personality used for font-lock-negation-char-face This personality
     uses voice-brighten-extra whose effect can be changed globally by
     customizing voice-brighten-extra-settings.

 -- Variable: User Option voice-org-agenda-calendar-event
     Personality used for org-agenda-calendar-event This personality
     uses voice-animate-extra whose effect can be changed globally by
     customizing voice-animate-extra-settings.

 -- Variable: User Option voice-org-agenda-calendar-sexp
     Personality used for org-agenda-calendar-sexp This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option voice-org-agenda-column-dateline
     Personality used for org-agenda-column-dateline This personality
     uses voice-monotone whose effect can be changed globally by
     customizing voice-monotone-settings.

 -- Variable: User Option voice-org-agenda-diary
     Personality used for org-agenda-diary This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option voice-org-agenda-done
     Personality used for org-agenda-done This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option voice-org-agenda-filter-category
     Personality used for org-agenda-filter-category This personality
     uses voice-lighten-extra whose effect can be changed globally by
     customizing voice-lighten-extra-settings.

 -- Variable: User Option voice-org-agenda-filter-tags
     Personality used for org-agenda-filter-tags This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option voice-org-agenda-restriction-lock
     Personality used for org-agenda-restriction-lock This personality
     uses voice-monotone whose effect can be changed globally by
     customizing voice-monotone-settings.

 -- Variable: User Option voice-org-agenda-structure
     Personality used for org-agenda-structure This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-org-archived
     Personality used for org-archived This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option voice-org-beamer-tag
     Personality used for org-beamer-tag This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-org-block
     Personality used for org-block This personality uses voice-monotone
     whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option voice-org-block-background
     Personality used for org-block-background This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option voice-org-checkbox
     Personality used for org-checkbox This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option voice-org-clock-overlay
     Personality used for org-clock-overlay This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option voice-org-code
     Personality used for org-code This personality uses voice-monotone
     whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option voice-org-column
     Personality used for org-column This personality uses voice-lighten
     whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option voice-org-column-title
     Personality used for org-column-title This personality uses
     voice-lighten-extra whose effect can be changed globally by
     customizing voice-lighten-extra-settings.

 -- Variable: User Option voice-org-date
     Personality used for org-date This personality uses voice-animate
     whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option voice-org-date-selected
     Personality used for org-date-selected This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-org-default
     Personality used for org-default This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option voice-org-document-info
     Personality used for org-document-info This personality uses
     voice-bolden-medium whose effect can be changed globally by
     customizing voice-bolden-medium-settings.

 -- Variable: User Option voice-org-document-info-keyword
     Personality used for org-document-info-keyword This personality
     uses voice-bolden-extra whose effect can be changed globally by
     customizing voice-bolden-extra-settings.

 -- Variable: User Option voice-org-document-title
     Personality used for org-document-title This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-org-done
     Personality used for org-done This personality uses voice-monotone
     whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option voice-org-drawer
     Personality used for org-drawer This personality uses
     voice-smoothen-medium whose effect can be changed globally by
     customizing voice-smoothen-medium-settings.

 -- Variable: User Option voice-org-ellipsis
     Personality used for org-ellipsis This personality uses
     voice-smoothen-extra whose effect can be changed globally by
     customizing voice-smoothen-extra-settings.

 -- Variable: User Option voice-org-footnote
     Personality used for org-footnote This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option voice-org-formula
     Personality used for org-formula This personality uses
     voice-animate-extra whose effect can be changed globally by
     customizing voice-animate-extra-settings.

 -- Variable: User Option voice-org-headline-done
     Personality used for org-headline-done This personality uses
     voice-monotone-medium whose effect can be changed globally by
     customizing voice-monotone-medium-settings.

 -- Variable: User Option voice-org-hide
     Personality used for org-hide This personality uses
     voice-smoothen-extra whose effect can be changed globally by
     customizing voice-smoothen-extra-settings.

 -- Variable: User Option voice-org-indent
     Personality used for org-indent This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option voice-org-inlinetask
     Personality used for org-inlinetask This personality uses
     voice-smoothen-extra whose effect can be changed globally by
     customizing voice-smoothen-extra-settings.

 -- Variable: User Option voice-org-latex-and-export-specials
     Personality used for org-latex-and-export-specials This personality
     uses voice-monotone whose effect can be changed globally by
     customizing voice-monotone-settings.

 -- Variable: User Option voice-org-level-1
     Personality used for org-level-1 This personality uses
     voice-bolden-medium whose effect can be changed globally by
     customizing voice-bolden-medium-settings.

 -- Variable: User Option voice-org-level-2
     Personality used for org-level-2 This personality uses voice-bolden
     whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-org-level-3
     Personality used for org-level-3 This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option voice-org-level-4
     Personality used for org-level-4 This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option voice-org-level-5
     Personality used for org-level-5 This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option voice-org-level-6
     Personality used for org-level-6 This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option voice-org-level-7
     Personality used for org-level-7 This personality uses
     voice-lighten-medium whose effect can be changed globally by
     customizing voice-lighten-medium-settings.

 -- Variable: User Option voice-org-level-8
     Personality used for org-level-8 This personality uses
     voice-lighten-extra whose effect can be changed globally by
     customizing voice-lighten-extra-settings.

 -- Variable: User Option voice-org-link
     Personality used for org-link This personality uses voice-bolden
     whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-org-meta-line
     Personality used for org-meta-line This personality uses
     voice-smoothen-medium whose effect can be changed globally by
     customizing voice-smoothen-medium-settings.

 -- Variable: User Option voice-org-property-value
     Personality used for org-property-value This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option voice-org-scheduled
     Personality used for org-scheduled This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option voice-org-scheduled-previously
     Personality used for org-scheduled-previously This personality uses
     voice-lighten-medium whose effect can be changed globally by
     customizing voice-lighten-medium-settings.

 -- Variable: User Option voice-org-scheduled-today
     Personality used for org-scheduled-today This personality uses
     voice-bolden-extra whose effect can be changed globally by
     customizing voice-bolden-extra-settings.

 -- Variable: User Option voice-org-sexp-date
     Personality used for org-sexp-date This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option voice-org-special-keyword
     Personality used for org-special-keyword This personality uses
     voice-lighten-extra whose effect can be changed globally by
     customizing voice-lighten-extra-settings.

 -- Variable: User Option voice-org-table
     Personality used for org-table This personality uses
     voice-bolden-medium whose effect can be changed globally by
     customizing voice-bolden-medium-settings.

 -- Variable: User Option voice-org-tag
     Personality used for org-tag This personality uses voice-smoothen
     whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option voice-org-target
     Personality used for org-target This personality uses
     voice-bolden-medium whose effect can be changed globally by
     customizing voice-bolden-medium-settings.

 -- Variable: User Option voice-org-time-grid
     Personality used for org-time-grid This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-org-todo
     Personality used for org-todo This personality uses
     voice-bolden-and-animate whose effect can be changed globally by
     customizing voice-bolden-and-animate-settings.

 -- Variable: User Option voice-org-upcoming-deadline
     Personality used for org-upcoming-deadline This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option voice-org-verbatim
     Personality used for org-verbatim This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option voice-org-warning
     Personality used for org-warning This personality uses
     voice-bolden-and-animate whose effect can be changed globally by
     customizing voice-bolden-and-animate-settings.

 -- Variable: User Option voice-outline-1
     Personality used for outline-1 This personality uses
     voice-bolden-extra whose effect can be changed globally by
     customizing voice-bolden-extra-settings.

 -- Variable: User Option voice-outline-2
     Personality used for outline-2 This personality uses
     voice-bolden-medium whose effect can be changed globally by
     customizing voice-bolden-medium-settings.

 -- Variable: User Option voice-outline-3
     Personality used for outline-3 This personality uses voice-bolden
     whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-outline-4
     Personality used for outline-4 This personality uses voice-lighten
     whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option voice-outline-5
     Personality used for outline-5 This personality uses
     voice-lighten-medium whose effect can be changed globally by
     customizing voice-lighten-medium-settings.

 -- Variable: User Option voice-outline-6
     Personality used for outline-6 This personality uses voice-lighten
     whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option voice-package-description
     Personality used for package-description This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option voice-package-help-section-name
     Personality used for package-help-section-name This personality
     uses voice-lighten whose effect can be changed globally by
     customizing voice-lighten-settings.

 -- Variable: User Option voice-package-name
     Personality used for package-name This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-package-status-avail-obso
     Personality used for package-status-avail-obso This personality
     uses voice-monotone whose effect can be changed globally by
     customizing voice-monotone-settings.

 -- Variable: User Option voice-package-status-available
     Personality used for package-status-available This personality uses
     voice-annotate whose effect can be changed globally by customizing
     voice-annotate-settings.

 -- Variable: User Option voice-package-status-built-in
     Personality used for package-status-built-in This personality uses
     voice-monotone-medium whose effect can be changed globally by
     customizing voice-monotone-medium-settings.

 -- Variable: User Option voice-package-status-dependency
     Personality used for package-status-dependency This personality
     uses voice-monotone-medium whose effect can be changed globally by
     customizing voice-monotone-medium-settings.

 -- Variable: User Option voice-package-status-disabled
     Personality used for package-status-disabled This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option voice-package-status-external
     Personality used for package-status-external This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option voice-package-status-held
     Personality used for package-status-held This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option voice-package-status-incompat
     Personality used for package-status-incompat This personality uses
     voice-animate-extra whose effect can be changed globally by
     customizing voice-animate-extra-settings.

 -- Variable: User Option voice-package-status-installed
     Personality used for package-status-installed This personality uses
     voice-lighten-extra whose effect can be changed globally by
     customizing voice-lighten-extra-settings.

 -- Variable: User Option voice-package-status-new
     Personality used for package-status-new This personality uses
     voice-brighten whose effect can be changed globally by customizing
     voice-brighten-settings.

 -- Variable: User Option voice-package-status-unsigned
     Personality used for package-status-unsigned This personality uses
     voice-animate-extra whose effect can be changed globally by
     customizing voice-animate-extra-settings.

 -- Variable: User Option voice-preprocessor-personality
     Personality used for font-lock-preprocessor-face This personality
     uses voice-monotone-medium whose effect can be changed globally by
     customizing voice-monotone-medium-settings.

 -- Variable: User Option voice-query-replace
     Personality used for query-replace This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-regexp-grouping-backslash
     Personality used for font-lock-regexp-grouping-backslash This
     personality uses voice-smoothen-extra whose effect can be changed
     globally by customizing voice-smoothen-extra-settings.

 -- Variable: User Option voice-regexp-grouping-construct
     Personality used for font-lock-regexp-grouping-construct This
     personality uses voice-smoothen whose effect can be changed
     globally by customizing voice-smoothen-settings.

 -- Variable: User Option voice-region
     Personality used for region This personality uses voice-brighten
     whose effect can be changed globally by customizing
     voice-brighten-settings.

 -- Variable: User Option voice-shadow
     Personality used for shadow This personality uses
     voice-monotone-medium whose effect can be changed globally by
     customizing voice-monotone-medium-settings.

 -- Variable: User Option voice-shr-link
     Personality used for shr-link This personality uses voice-bolden
     whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-shr-selected-link
     Personality used for shr-selected-link This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option voice-shr-strike-through
     Personality used for shr-strike-through This personality uses
     voice-annotate whose effect can be changed globally by customizing
     voice-annotate-settings.

 -- Variable: User Option voice-sp-show-pair-enclosing
     Personality used for sp-show-pair-enclosing This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-sp-wrap-overlay-closing-pair
     Personality used for sp-wrap-overlay-closing-pair This personality
     uses voice-smoothen whose effect can be changed globally by
     customizing voice-smoothen-settings.

 -- Variable: User Option voice-sp-wrap-overlay-opening-pair
     Personality used for sp-wrap-overlay-opening-pair This personality
     uses voice-bolden whose effect can be changed globally by
     customizing voice-bolden-settings.

 -- Variable: User Option voice-string-personality
     Personality used for font-lock-string-face This personality uses
     voice-lighten-extra whose effect can be changed globally by
     customizing voice-lighten-extra-settings.

 -- Variable: User Option voice-success
     Personality used for success This personality uses
     voice-brighten-extra whose effect can be changed globally by
     customizing voice-brighten-extra-settings.

 -- Variable: User Option voice-term-underline
     Personality used for term-underline This personality uses
     voice-brighten-medium whose effect can be changed globally by
     customizing voice-brighten-medium-settings.

 -- Variable: User Option voice-type-personality
     Personality used for font-lock-type-face This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option voice-underline
     Personality used for underline This personality uses
     voice-lighten-extra whose effect can be changed globally by
     customizing voice-lighten-extra-settings.

 -- Variable: User Option voice-variable-name-personality
     Personality used for font-lock-variable-name-face This personality
     uses voice-bolden-extra whose effect can be changed globally by
     customizing voice-bolden-extra-settings.

 -- Variable: User Option voice-warning
     Personality used for warning This personality uses voice-smoothen
     whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option voice-warning-personality
     Personality used for font-lock-warning-face This personality uses
     voice-bolden-and-animate whose effect can be changed globally by
     customizing voice-bolden-and-animate-settings.

 -- Variable: User Option voice-widget-button
     Personality used for widget-button This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-widget-button-pressed
     Personality used for widget-button-pressed This personality uses
     voice-bolden-extra whose effect can be changed globally by
     customizing voice-bolden-extra-settings.

 -- Variable: User Option voice-widget-documentation
     Personality used for widget-documentation This personality uses
     voice-smoothen-extra whose effect can be changed globally by
     customizing voice-smoothen-extra-settings.

 -- Variable: User Option voice-widget-field
     Personality used for widget-field This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option voice-widget-inactive
     Personality used for widget-inactive This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option voice-widget-single-line-field
     Personality used for widget-single-line-field This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option voice-woman-bold
     Personality used for woman-bold This personality uses voice-bolden
     whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-woman-edition
     Personality used for woman-edition This personality uses
     voice-bolden-medium whose effect can be changed globally by
     customizing voice-bolden-medium-settings.

 -- Variable: User Option voice-woman-italic
     Personality used for woman-italic This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option voice-woman-unknown
     Personality used for woman-unknown This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.


File: emacspeak.info,  Node: emacspeak-2048,  Next: emacspeak-actions,  Prev: emacspeak,  Up: Emacspeak Commands And Options

12.10 emacspeak-2048
====================

Speech-enable 2048 Game

12.10.1 emacspeak-2048 Commands
-------------------------------

12.10.1.1 emacspeak-2048-add-column
...................................

 -- Command: emacspeak-2048-add-column

     Add a column  to the current board.

12.10.1.2 emacspeak-2048-add-row
................................

 -- Command: emacspeak-2048-add-row

     Add a row  to the current board.

12.10.1.3 emacspeak-2048-drop-column
....................................

 -- Command: emacspeak-2048-drop-column

     Drop last  row  from  the current board.

12.10.1.4 emacspeak-2048-drop-row
.................................

 -- Command: emacspeak-2048-drop-row

     Drop last  row  from  the current board.

12.10.1.5 emacspeak-2048-export
...............................

 -- Command: emacspeak-2048-export (&optional prompt)

     Exports game stack to a file.
     Optional interactive prefix arg prompts for a file.
     Note that the file is overwritten silently.

     (fn &optional PROMPT)

12.10.1.6 emacspeak-2048-import
...............................

 -- Command: emacspeak-2048-import (&optional prompt)

     Import game.
     Optional interactive prefix arg prompts for a filename.

     (fn &optional PROMPT)

12.10.1.7 emacspeak-2048-pop-state
..................................

 -- Command: emacspeak-2048-pop-state

     Reset state from stack.

12.10.1.8 emacspeak-2048-prune-stack
....................................

 -- Command: emacspeak-2048-prune-stack (drop)

     Prune game stack to specified length.

     (fn DROP)

12.10.1.9 emacspeak-2048-push-state
...................................

 -- Command: emacspeak-2048-push-state

     Push current game state on stack.

12.10.1.10 emacspeak-2048-randomize-game
........................................

 -- Command: emacspeak-2048-randomize-game (&optional count)

     Puts game in a randomized new state.

     (fn &optional COUNT)

12.10.1.11 emacspeak-2048-score
...............................

 -- Command: emacspeak-2048-score

     Show total on board.

12.10.1.12 emacspeak-2048-speak-board
.....................................

 -- Command: emacspeak-2048-speak-board

     Speak board.

12.10.1.13 emacspeak-2048-speak-transposed-board
................................................

 -- Command: emacspeak-2048-speak-transposed-board

     Speak board column-wise.


File: emacspeak.info,  Node: emacspeak-actions,  Next: emacspeak-add-log,  Prev: emacspeak-2048,  Up: Emacspeak Commands And Options

12.11 emacspeak-actions
=======================

Define mode-specific actions.  Actions are defined by adding them to
hook emacspeak-<mode-name>-actions-hook


File: emacspeak.info,  Node: emacspeak-add-log,  Next: emacspeak-advice,  Prev: emacspeak-actions,  Up: Emacspeak Commands And Options

12.12 emacspeak-add-log
=======================

Speech-enable Changelog mode

12.12.1 emacspeak-add-log Options
---------------------------------

 -- Variable: User Option voice-change-log-acknowledgment
     Personality used for change-log-acknowledgment This personality
     uses voice-smoothen whose effect can be changed globally by
     customizing voice-smoothen-settings.

 -- Variable: User Option voice-change-log-conditionals
     Personality used for change-log-conditionals This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.

 -- Variable: User Option voice-change-log-date
     Personality used for change-log-date This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option voice-change-log-email
     Personality used for change-log-email This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option voice-change-log-file
     Personality used for change-log-file This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-change-log-function
     Personality used for change-log-function This personality uses
     voice-bolden-extra whose effect can be changed globally by
     customizing voice-bolden-extra-settings.

 -- Variable: User Option voice-change-log-list
     Personality used for change-log-list This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option voice-change-log-name
     Personality used for change-log-name This personality uses
     voice-lighten-extra whose effect can be changed globally by
     customizing voice-lighten-extra-settings.


File: emacspeak.info,  Node: emacspeak-advice,  Next: emacspeak-amark,  Prev: emacspeak-add-log,  Up: Emacspeak Commands And Options

12.13 emacspeak-advice
======================

This module defines the advice forms for making the core of Emacs speak
Advice forms that are specific to Emacs subsystems do not belong here!
I violate this at present by advising completion comint and shell here.

   Note that we needed to advice a lot more for Emacs 19 and Emacs 20
than we do for Emacs 21 and Emacs 22.  As of August 2007, this file is
being purged of advice forms not needed in Emacs 22.  This also means
that this and subsequent versions of Emacspeak should not be run on
versions of Emacs older than Emacs 21, And preferably only run on Emacs
22.  This version of Emacspeak is only tested on Emacs 24 and later.

12.13.1 emacspeak-advice Commands
---------------------------------

12.13.1.1 emacspeak-eldoc-speak-doc
...................................

 -- Command: emacspeak-eldoc-speak-doc
     ‘C-, ,’
     ‘C-x @ a ,’

     Speak Eldoc documentation if available.

12.13.2 emacspeak-advice Options
--------------------------------

 -- Variable: User Option emacspeak-advice-progress-reporter
     Set to true if progress reporter should produce an auditory icon.

 -- Variable: User Option emacspeak-replace-personality
     Personality used in search and replace to indicate word that is
     being replaced.

 -- Variable: User Option emacspeak-speak-errors
     Specifies if error messages are cued.

 -- Variable: User Option emacspeak-speak-tooltips
     Enable to get tooltips spoken.

 -- Variable: User Option emacspeak-untabify-fixes-non-breaking-space
     Advice untabify to change non-breaking space chars to space.


File: emacspeak.info,  Node: emacspeak-amark,  Next: emacspeak-analog,  Prev: emacspeak-advice,  Up: Emacspeak Commands And Options

12.14 emacspeak-amark
=====================

Structure emacspeak-amark holds a bookmark into an mp3 file path: fully
qualified pathname to file being marked name: Bookmark tag Position:
time offset from start

   This library will be used from emacspeak-m-player, emacspeak-mplayer
and friends to set and jump to bookmarks.

12.14.1 emacspeak-amark Commands
--------------------------------

12.14.1.1 emacspeak-amark-add
.............................

 -- Command: emacspeak-amark-add (path name position)

     Add an AMark to the buffer local list of AMarks. AMarks are
     bookmarks in audio content. If there is an existing amark of the
     given name, it is updated with path and position.

     (fn PATH NAME POSITION)

12.14.1.2 emacspeak-amark-find
..............................

 -- Command: emacspeak-amark-find (name)

     Return matching AMark if found in buffer-local AMark list.

     (fn NAME)

12.14.1.3 emacspeak-amark-save
..............................

 -- Command: emacspeak-amark-save

     Save buffer-local AMarks in  directory of currently playing resource.


File: emacspeak.info,  Node: emacspeak-analog,  Next: emacspeak-ansi-color,  Prev: emacspeak-amark,  Up: Emacspeak Commands And Options

12.15 emacspeak-analog
======================

Speech-enables package analog –convenient log analyzer

12.15.1 emacspeak-analog Commands
---------------------------------

12.15.1.1 emacspeak-analog-backward-field-or-char
.................................................

 -- Command: emacspeak-analog-backward-field-or-char

     Move back to next field if field specification is available.
     Otherwise move to previous char.
     Speak field or char moved to.

12.15.1.2 emacspeak-analog-forward-field-or-char
................................................

 -- Command: emacspeak-analog-forward-field-or-char

     Move forward to next field if field specification is available.
     Otherwise move to next char.
     Speak field or char moved to.

12.15.1.3 emacspeak-analog-next-line
....................................

 -- Command: emacspeak-analog-next-line

     Move down and speak current field.

12.15.1.4 emacspeak-analog-previous-line
........................................

 -- Command: emacspeak-analog-previous-line

     Move up and speak current field.

12.15.1.5 emacspeak-analog-speak-this-field
...........................................

 -- Command: emacspeak-analog-speak-this-field

     Speak current field.


File: emacspeak.info,  Node: emacspeak-ansi-color,  Next: emacspeak-apt-sources,  Prev: emacspeak-analog,  Up: Emacspeak Commands And Options

12.16 emacspeak-ansi-color
==========================

Module ansi-color (bundled with Emacs 21) handles ansi escape sequences
and turns them into appropriate faces.  This is useful in things like
shell buffers.  This module maps ansi codes to the appropriate voices.


File: emacspeak.info,  Node: emacspeak-apt-sources,  Next: emacspeak-arc,  Prev: emacspeak-ansi-color,  Up: Emacspeak Commands And Options

12.17 emacspeak-apt-sources
===========================

This module speech-enables apt-sources.el that is included in the
debian-el package and provides a major mode for editing APT’s
sources.list file.


File: emacspeak.info,  Node: emacspeak-arc,  Next: emacspeak-auctex,  Prev: emacspeak-apt-sources,  Up: Emacspeak Commands And Options

12.18 emacspeak-arc
===================

Auditory interface to archive mode This lets Emacs manipulate package
files such as .zip and .jar files.

12.18.1 emacspeak-arc Commands
------------------------------

12.18.1.1 emacspeak-arc-speak-file-modification-time
....................................................

 -- Command: emacspeak-arc-speak-file-modification-time

     Speak modification time of the file on current line

12.18.1.2 emacspeak-arc-speak-file-name
.......................................

 -- Command: emacspeak-arc-speak-file-name

     Speak the name of the file on current line

12.18.1.3 emacspeak-arc-speak-file-permissions
..............................................

 -- Command: emacspeak-arc-speak-file-permissions

     Speak permissions of file current entry

12.18.1.4 emacspeak-arc-speak-file-size
.......................................

 -- Command: emacspeak-arc-speak-file-size

     Speak the size of the file on current line


File: emacspeak.info,  Node: emacspeak-auctex,  Next: emacspeak-bbc,  Prev: emacspeak-arc,  Up: Emacspeak Commands And Options

12.19 emacspeak-auctex
======================

Speech-enables the AucTeX package.  AucTeX, now available from ELPA, has
been my authoring environment of choice for writing LaTeX since 1991.


File: emacspeak.info,  Node: emacspeak-bbc,  Next: emacspeak-bbdb,  Prev: emacspeak-auctex,  Up: Emacspeak Commands And Options

12.20 emacspeak-bbc
===================

BBC: http://www.bbc.co.uk This module uses publicly available REST APIs
to implement a native Emacs client for browsing and listening to BBC
programs.

   See http://www.bbc.co.uk/programmes/developers The BBC API helps
locate a PID for a given program stream.  We then construct the BBC
IPlayer URL for that PID, And either hand that link off to Chrome, Or
stream it via get_iplayer and mplayer.  get_iplayer:
https://github.com/get-iplayer/get_iplayer.git get_player vs Chrome:
Pro/Con: Chrome: Has the UI for seeking in the stream.  get_iplayer: We
use a named pipe, and cannot seek, but the rest of emacspeak-m-player is
available.  For downloading a program etc., use Emacs package iplayer.

12.20.1 emacspeak-bbc Commands
------------------------------

12.20.1.1 emacspeak-bbc
.......................

 -- Command: emacspeak-bbc (&optional genre)

     Launch BBC Interaction.
     See http://www.bbc.co.uk/radio/stations for full list of stations.
     See http://www.bbc.co.uk/radio/programmes/genres for list of genres.
     Interactive prefix arg filters  content by genre.

     (fn &optional GENRE)

12.20.1.2 emacspeak-bbc-genre
.............................

 -- Command: emacspeak-bbc-genre

     Launch BBC Interaction for specified Genre.

12.20.1.3 emacspeak-bbc-get-iplayer-stream-pid
..............................................

 -- Command: emacspeak-bbc-get-iplayer-stream-pid (pid)

     Stream using get_iplayer.

     (fn PID)

12.20.1.4 emacspeak-bbc-get-iplayer-stream-url
..............................................

 -- Command: emacspeak-bbc-get-iplayer-stream-url (url)

     Stream using get_iplayer.

     (fn URL)

12.20.2 emacspeak-bbc Options
-----------------------------

 -- Variable: User Option emacspeak-bbc-button-action
     Action to use for BBC iPlayer buttons.  get-iplayer: use
     get_iplayer.  chrome: Hand off URL to Chrome.

 -- Variable: User Option emacspeak-bbc-get-iplayer
     Name of get_iplayer executable.


File: emacspeak.info,  Node: emacspeak-bbdb,  Next: emacspeak-bibtex,  Prev: emacspeak-bbc,  Up: Emacspeak Commands And Options

12.21 emacspeak-bbdb
====================

Speech-enables BBDB. I have used BBDB to manage email address and
contact information since 1991.

12.21.1 emacspeak-bbdb Options
------------------------------

 -- Variable: User Option voice-bbdb-field-name
     Personality used for bbdb-field-name This personality uses
     voice-monotone whose effect can be changed globally by customizing
     voice-monotone-settings.

 -- Variable: User Option voice-bbdb-name
     Personality used for bbdb-name This personality uses voice-bolden
     whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-bbdb-organization
     Personality used for bbdb-organization This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.


File: emacspeak.info,  Node: emacspeak-bibtex,  Next: emacspeak-bookmark,  Prev: emacspeak-bbdb,  Up: Emacspeak Commands And Options

12.22 emacspeak-bibtex
======================

Speech extensions for bibtex mode.


File: emacspeak.info,  Node: emacspeak-bookmark,  Next: emacspeak-bookshare,  Prev: emacspeak-bibtex,  Up: Emacspeak Commands And Options

12.23 emacspeak-bookmark
========================

Speech enable bookmarks


File: emacspeak.info,  Node: emacspeak-bookshare,  Next: emacspeak-browse-kill-ring,  Prev: emacspeak-bookmark,  Up: Emacspeak Commands And Options

12.24 emacspeak-bookshare
=========================

BOOKSHARE == http://www.bookshare.org provides book access to
print-disabled users.  It provides a simple Web API
http://developer.bookshare.org This module implements an Emacspeak
Bookshare client.

12.24.1 requirements
--------------------

   • You need to get your own API key
   • You need Emacs built with libxml2 support
   • You need Emacs 24.1 or higher.

12.24.2 Usage
-------------

The main entry point is command ‘emacspeak-bookshare’ bound to ‘C-e
C-b’.  This creates a special _Bookshare Interaction_ buffer that is
placed in _emacspeak-bookshare-mode_.  Se the help for that mode on
detailed usage instructions and key-bindings.

12.24.3 Sample Interaction
--------------------------

Assuming you have correctly setup your API key:
   • Customize group ‘emacspeak-bookshare’ by pressing ‘C-h G’.
   • Press ‘C-e C-b’ to open or switch to the Bookshare buffer.
   • Perform a search ‘a’ or ‘t’ for author or title search.
   • You will be prompted for your Bookshare password if this is the
     first time.
   • The password will be saved to your configured ‘auth-source’ —
     usually ‘~/.authinfo.gpg’.  You can also use ‘password-store[.]’
   • The results of the search appear in the Bookshare buffer.  Audio
     formatting and auditory icons convey if a result is already
     available locally.
   • If not available locally, press ‘D’ to download the content.
   • Press ‘U’ to unpack the downloaded content.
   • Press ‘e’ to display the entire book.
   • Press ‘c’ to display the table of contents.
   • Now, use all of EWW *Note emacspeak-eww:: extensions and profit!

12.24.4 emacspeak-bookshare Commands
------------------------------------

12.24.4.1 emacspeak-bookshare
.............................

 -- Command: emacspeak-bookshare
     ‘C-e C-b’
     ‘<fn> C-b’

     Bookshare  Interaction.

12.24.4.2 emacspeak-bookshare-action
....................................

 -- Command: emacspeak-bookshare-action

     Call action specified by  invoking key.

12.24.4.3 emacspeak-bookshare-author-search
...........................................

 -- Command: emacspeak-bookshare-author-search (query &optional
          category)

     Perform a Bookshare author search.
     Interactive prefix arg filters search by category.

     (fn QUERY &optional CATEGORY)

12.24.4.4 emacspeak-bookshare-browse
....................................

 -- Command: emacspeak-bookshare-browse

     Browse Bookshare.

12.24.4.5 emacspeak-bookshare-browse-latest
...........................................

 -- Command: emacspeak-bookshare-browse-latest

     Return latest books.

12.24.4.6 emacspeak-bookshare-browse-popular
............................................

 -- Command: emacspeak-bookshare-browse-popular (&optional category)

     Browse popular books.
     Optional interactive prefix arg prompts for a category to use as a filter.

     (fn &optional CATEGORY)

12.24.4.7 emacspeak-bookshare-debugInfo-handler
...............................................

 -- Command: emacspeak-bookshare-debugInfo-handler (&rest ignore)

     Do nothing and return nil.
     This function accepts any number of arguments, but ignores them.

     (fn &rest IGNORE)

12.24.4.8 emacspeak-bookshare-download-audio
............................................

 -- Command: emacspeak-bookshare-download-audio (id target)

     Download audio format of specified book to target location.

     (fn ID TARGET)

12.24.4.9 emacspeak-bookshare-download-audio-at-point
.....................................................

 -- Command: emacspeak-bookshare-download-audio-at-point

     Download audio version of book under point.
     Target location is generated from author and title.

12.24.4.10 emacspeak-bookshare-download-brf
...........................................

 -- Command: emacspeak-bookshare-download-brf (id target)

     Download Daisy format of specified book to target location.

     (fn ID TARGET)

12.24.4.11 emacspeak-bookshare-download-brf-at-point
....................................................

 -- Command: emacspeak-bookshare-download-brf-at-point

     Download Braille version of book under point.
     Target location is generated from author and title.

12.24.4.12 emacspeak-bookshare-download-daisy
.............................................

 -- Command: emacspeak-bookshare-download-daisy (id target)

     Download Daisy format of specified book to target location.

     (fn ID TARGET)

12.24.4.13 emacspeak-bookshare-download-daisy-at-point
......................................................

 -- Command: emacspeak-bookshare-download-daisy-at-point

     Download Daisy version of book under point.
     Target location is generated from author and title.

12.24.4.14 emacspeak-bookshare-download-epub-3
..............................................

 -- Command: emacspeak-bookshare-download-epub-3 (id target)

     Download epub-3 format of specified book to target location.

     (fn ID TARGET)

12.24.4.15 emacspeak-bookshare-download-epub-3-at-point
.......................................................

 -- Command: emacspeak-bookshare-download-epub-3-at-point

     Download epub-3 version of book under point.
     Target location is generated from author and title.

12.24.4.16 emacspeak-bookshare-download-internal
................................................

 -- Command: emacspeak-bookshare-download-internal (url target)

     Download content  to target location.

     (fn URL TARGET)

12.24.4.17 emacspeak-bookshare-eww
..................................

 -- Command: emacspeak-bookshare-eww (directory)

     Render complete book using EWW

     (fn DIRECTORY)

12.24.4.18 emacspeak-bookshare-expand-at-point
..............................................

 -- Command: emacspeak-bookshare-expand-at-point

     Expand entry at point by retrieving metadata.
     Once retrieved, memoize to avoid multiple retrievals.

12.24.4.19 emacspeak-bookshare-extract-and-view
...............................................

 -- Command: emacspeak-bookshare-extract-and-view (url)

     Extract content referred to by link under point, and render via the browser.

     (fn URL)

12.24.4.20 emacspeak-bookshare-extract-xml
..........................................

 -- Command: emacspeak-bookshare-extract-xml (url)

     Extract content referred to by link under point, and return an XML buffer.

     (fn URL)

12.24.4.21 emacspeak-bookshare-flush-lines
..........................................

 -- Command: emacspeak-bookshare-flush-lines (regexp)

     Flush lines matching regexp in Bookshare buffer.

     (fn REGEXP)

12.24.4.22 emacspeak-bookshare-fulltext
.......................................

 -- Command: emacspeak-bookshare-fulltext (directory)

     Display fulltext contents of  book in specified directory.
     Useful for fulltext search in a book.

     (fn DIRECTORY)

12.24.4.23 emacspeak-bookshare-fulltext-search
..............................................

 -- Command: emacspeak-bookshare-fulltext-search (query)

     Perform a Bookshare fulltext search.

     (fn QUERY)

12.24.4.24 emacspeak-bookshare-get-more-results
...............................................

 -- Command: emacspeak-bookshare-get-more-results

     Get next page of results for last query.

12.24.4.25 emacspeak-bookshare-id-search
........................................

 -- Command: emacspeak-bookshare-id-search (query)

     Perform a Bookshare id search.

     (fn QUERY)

12.24.4.26 emacspeak-bookshare-isbn-search
..........................................

 -- Command: emacspeak-bookshare-isbn-search (query)

     Perform a Bookshare isbn search.

     (fn QUERY)

12.24.4.27 emacspeak-bookshare-list-preferences
...............................................

 -- Command: emacspeak-bookshare-list-preferences

     Return preference list.

12.24.4.28 emacspeak-bookshare-mode
...................................

 -- Command: emacspeak-bookshare-mode

     A Bookshare front-end for the Emacspeak desktop.

     The Emacspeak Bookshare front-end is launched by command
     emacspeak-bookshare bound to C-e C-b

     This command switches to a special buffer that has Bookshare
     commands bounds to single keystrokes– see the key-binding list at
     the end of this description. Use Emacs online help facility to
     look up help on these commands.

     emacspeak-bookshare-mode provides the necessary functionality to
     Search and download Bookshare material, Manage a local library of
     downloaded Bookshare content, And commands to easily read newer
     Daisy books from Bookshare.

     Here is a list of all emacspeak Bookshare commands  with their key-bindings:
     a Author Search
     A Author/Title Search
     t Title Search
     s Full Text Search
     d Date Search
     b Browse

     key             binding
     —             ——-

     RET		emacspeak-bookshare-toc-at-point
     ESC		Prefix Command
     SPC		emacspeak-bookshare-expand-at-point
     +		emacspeak-bookshare-action
     /		emacspeak-bookshare-action
     3		emacspeak-bookshare-download-epub-3-at-point
     A		emacspeak-bookshare-download-audio-at-point
     B		emacspeak-bookshare-download-brf-at-point
     C		emacspeak-bookshare-fulltext
     D		emacspeak-bookshare-download-daisy-at-point
     E		emacspeak-bookshare-eww
     I		emacspeak-bookshare-action
     P		emacspeak-bookshare-action
     S		emacspeak-bookshare-action
     U		emacspeak-bookshare-unpack-at-point
     V		emacspeak-bookshare-view-at-point
     [		backward-page
     ]		forward-page
     a		emacspeak-bookshare-action
     b		emacspeak-bookshare-browse
     c		emacspeak-bookshare-toc-at-point
     d		emacspeak-bookshare-action
     e		emacspeak-bookshare-eww
     f		emacspeak-bookshare-flush-lines
     i		emacspeak-bookshare-action
     j		next-line
     k		previous-line
     l .. m		emacspeak-bookshare-action
     p		emacspeak-bookshare-action
     q		bury-buffer
     s .. t		emacspeak-bookshare-action
     v		emacspeak-bookshare-view

     M-n		emacspeak-bookshare-next-result
     M-p		emacspeak-bookshare-previous-result

     In addition to any hooks its parent mode ‘special-mode’ might have run,
     this mode runs the hook ‘emacspeak-bookshare-mode-hook’, as the final or penultimate step
     during initialization.

12.24.4.29 emacspeak-bookshare-next-result
..........................................

 -- Command: emacspeak-bookshare-next-result

     Move to next result.

12.24.4.30 emacspeak-bookshare-periodical-list
..............................................

 -- Command: emacspeak-bookshare-periodical-list

     Return list of periodicals.

12.24.4.31 emacspeak-bookshare-previous-result
..............................................

 -- Command: emacspeak-bookshare-previous-result

     Move to previous result.

12.24.4.32 emacspeak-bookshare-set-preference
.............................................

 -- Command: emacspeak-bookshare-set-preference (preference-id value)

     Set preference preference-id to value.

     (fn PREFERENCE-ID VALUE)

12.24.4.33 emacspeak-bookshare-since-search
...........................................

 -- Command: emacspeak-bookshare-since-search (query &optional category)

     Perform a Bookshare date  search.
     Optional interactive prefix arg filters by category.

     (fn QUERY &optional CATEGORY)

12.24.4.34 emacspeak-bookshare-title-search
...........................................

 -- Command: emacspeak-bookshare-title-search (query &optional category)

     Perform a Bookshare title search.
     Interactive prefix arg filters search by category.

     (fn QUERY &optional CATEGORY)

12.24.4.35 emacspeak-bookshare-toc
..................................

 -- Command: emacspeak-bookshare-toc (directory)

     View TOC for book in specified directory.

     (fn DIRECTORY)

12.24.4.36 emacspeak-bookshare-toc-at-point
...........................................

 -- Command: emacspeak-bookshare-toc-at-point

     View TOC for book at point.
     Make sure it’s downloaded and unpacked first.

12.24.4.37 emacspeak-bookshare-unpack-at-point
..............................................

 -- Command: emacspeak-bookshare-unpack-at-point

     Unpack downloaded content if necessary.

12.24.4.38 emacspeak-bookshare-url-executor
...........................................

 -- Command: emacspeak-bookshare-url-executor (url)

     Custom URL executor for use in Bookshare TOC.

     (fn URL)

12.24.4.39 emacspeak-bookshare-version-handler
..............................................

 -- Command: emacspeak-bookshare-version-handler (&rest ignore)

     Do nothing and return nil.
     This function accepts any number of arguments, but ignores them.

     (fn &rest IGNORE)

12.24.4.40 emacspeak-bookshare-view
...................................

 -- Command: emacspeak-bookshare-view (directory)

     View book in specified directory.

     (fn DIRECTORY)

12.24.4.41 emacspeak-bookshare-view-at-point
............................................

 -- Command: emacspeak-bookshare-view-at-point

     View book at point.
     Make sure it’s downloaded and unpacked first.

12.24.4.42 emacspeak-bookshare-view-page-range
..............................................

 -- Command: emacspeak-bookshare-view-page-range (url)

     Play pages in specified page range from URL.

     (fn URL)

12.24.5 emacspeak-bookshare Options
-----------------------------------

 -- Variable: User Option emacspeak-bookshare-api-key
     Web API key for this application.  See
     http://developer.bookshare.org/docs for details on how to get an
     API key.

 -- Variable: User Option emacspeak-bookshare-browser-function
     Function to display Bookshare Book content in a WWW browser.  This
     is used by the various Bookshare view commands to display content
     from Bookshare books.

 -- Variable: User Option emacspeak-bookshare-directory
     Customize this to the root of where books are organized.

 -- Variable: User Option emacspeak-bookshare-html-to-text-command
     Command to convert html to text on stdin.

 -- Variable: User Option emacspeak-bookshare-xslt
     Name of bookshare XSL transform.


File: emacspeak.info,  Node: emacspeak-browse-kill-ring,  Next: emacspeak-bs,  Prev: emacspeak-bookshare,  Up: Emacspeak Commands And Options

12.25 emacspeak-browse-kill-ring
================================

Browse the kill ring using browse-kill-ring.el - interactively insert
items from kill-ring (by Colin Walters)


File: emacspeak.info,  Node: emacspeak-bs,  Next: emacspeak-buff-menu,  Prev: emacspeak-browse-kill-ring,  Up: Emacspeak Commands And Options

12.26 emacspeak-bs
==================

speech-enable bs.el – an alternative to Emacs’ default list-buffers

12.26.1 emacspeak-bs Commands
-----------------------------

12.26.1.1 emacspeak-bs-speak-buffer-line
........................................

 -- Command: emacspeak-bs-speak-buffer-line

     Speak information about this buffer


File: emacspeak.info,  Node: emacspeak-buff-menu,  Next: emacspeak-c,  Prev: emacspeak-bs,  Up: Emacspeak Commands And Options

12.27 emacspeak-buff-menu
=========================

Speech-enable buffer-menus.

12.27.1 emacspeak-buff-menu Commands
------------------------------------

12.27.1.1 emacspeak-list-buffers-next-line
..........................................

 -- Command: emacspeak-list-buffers-next-line (count)

     Speech enabled buffer menu navigation

     (fn COUNT)

12.27.1.2 emacspeak-list-buffers-previous-line
..............................................

 -- Command: emacspeak-list-buffers-previous-line (count)

     Speech enabled buffer menu navigation

     (fn COUNT)

12.27.1.3 emacspeak-list-buffers-speak-buffer-line
..................................................

 -- Command: emacspeak-list-buffers-speak-buffer-line

     Speak information about this buffer

12.27.1.4 emacspeak-list-buffers-speak-buffer-name
..................................................

 -- Command: emacspeak-list-buffers-speak-buffer-name

     Speak the name of the buffer on this line


File: emacspeak.info,  Node: emacspeak-c,  Next: emacspeak-calc,  Prev: emacspeak-buff-menu,  Up: Emacspeak Commands And Options

12.28 emacspeak-c
=================

Make some of C and C++ mode more emacspeak friendly Works with both
boring c-mode and the excellent cc-mode

12.28.1 emacspeak-c Commands
----------------------------

12.28.1.1 emacspeak-c-speak-semantics
.....................................

 -- Command: emacspeak-c-speak-semantics

     Speak the C semantics of this line.


File: emacspeak.info,  Node: emacspeak-calc,  Next: emacspeak-calculator,  Prev: emacspeak-c,  Up: Emacspeak Commands And Options

12.29 emacspeak-calc
====================

This module extends the Emacs Calculator.  Extensions are minimal.  We
force a calc-load-everything, And use an after advice on this function
To fix all of calc’s interactive functions


File: emacspeak.info,  Node: emacspeak-calculator,  Next: emacspeak-calendar,  Prev: emacspeak-calc,  Up: Emacspeak Commands And Options

12.30 emacspeak-calculator
==========================

Speech enable desktop calculator


File: emacspeak.info,  Node: emacspeak-calendar,  Next: emacspeak-cedet,  Prev: emacspeak-calculator,  Up: Emacspeak Commands And Options

12.31 emacspeak-calendar
========================

This module speech enables the Emacs Calendar.  Speech enabling is not
the same as speaking the screen: This is an excellent example of the
advantages of speech-enabled interaction.

12.31.1 emacspeak-calendar Commands
-----------------------------------

12.31.1.1 emacspeak-appt-repeat-announcement
............................................

 -- Command: emacspeak-appt-repeat-announcement
     ‘C-e A’
     ‘<fn> A’

     Speaks the most recently displayed appointment message if any.

12.31.1.2 emacspeak-calendar-setup-sunrise-sunset
.................................................

 -- Command: emacspeak-calendar-setup-sunrise-sunset

     Set up geo-coordinates using Google Maps reverse geocoding.
     To use, configure variable gweb-my-address via M-x customize-variable.

12.31.1.3 emacspeak-calendar-speak-date
.......................................

 -- Command: emacspeak-calendar-speak-date

     Speak the date under point when called in Calendar Mode.

12.31.2 emacspeak-calendar Options
----------------------------------

 -- Variable: User Option emacspeak-calendar-mark-personality
     Personality to use when showing marked calendar entries.


File: emacspeak.info,  Node: emacspeak-cedet,  Next: emacspeak-checkdoc,  Prev: emacspeak-calendar,  Up: Emacspeak Commands And Options

12.32 emacspeak-cedet
=====================

CEDET consists of speedbar semantic ede and friends.  This module speech
enables new functionality in semantic, senator and friends


File: emacspeak.info,  Node: emacspeak-checkdoc,  Next: emacspeak-cider,  Prev: emacspeak-cedet,  Up: Emacspeak Commands And Options

12.33 emacspeak-checkdoc
========================

Speech-enable checkdoc.el


File: emacspeak.info,  Node: emacspeak-cider,  Next: emacspeak-ciel,  Prev: emacspeak-checkdoc,  Up: Emacspeak Commands And Options

12.34 emacspeak-cider
=====================

Speech-Enable CIDER — Clojure IDE CIDER ==

12.34.1 emacspeak-cider Options
-------------------------------

 -- Variable: User Option voice-cider-repl-stderr-facevoice-animate
     Personality used for cider-repl-stderr-facevoice-animate This
     personality uses nil whose effect can be changed globally by
     customizing nil-settings.


File: emacspeak.info,  Node: emacspeak-ciel,  Next: emacspeak-clojure,  Prev: emacspeak-cider,  Up: Emacspeak Commands And Options

12.35 emacspeak-ciel
====================

Package ciel provides vim’s "copy inside" and "clear inside" commands.
Emacspeak binds these commands to <Super i> and <Super o>.  This module
speech-enables ciel.


File: emacspeak.info,  Node: emacspeak-clojure,  Next: emacspeak-cmuscheme,  Prev: emacspeak-ciel,  Up: Emacspeak Commands And Options

12.36 emacspeak-clojure
=======================

CLOJURE-mode: Specialized mode for Clojure programming.


File: emacspeak.info,  Node: emacspeak-cmuscheme,  Next: emacspeak-company,  Prev: emacspeak-clojure,  Up: Emacspeak Commands And Options

12.37 emacspeak-cmuscheme
=========================

speech-enable scheme support


File: emacspeak.info,  Node: emacspeak-company,  Next: emacspeak-compile,  Prev: emacspeak-cmuscheme,  Up: Emacspeak Commands And Options

12.38 emacspeak-company
=======================

COMPANY -mode: Complete Anything Support for emacs.

   This module provides an Emacspeak Company Front-end, And advises the
needed interactive commands in Company.  It adds an emacspeak-specific
front-end ‘emacspeak-company-frontend’ to the value of
company-frontends.  Note that COMPANY-FRONTENDS is a user-customizable
option and ends up getting saved by emacs along with other custom
settings.  Function ‘emacspeak-company-frontend’ handles providing
spoken feedback, and leaves it to other frontends on COMPANY-FRONTENDS
to generate their own feedback.

12.38.1 emacspeak-company Options
---------------------------------

 -- Variable: User Option voice-company-echo
     Personality used for company-echo This personality uses
     voice-bolden whose effect can be changed globally by customizing
     voice-bolden-settings.

 -- Variable: User Option voice-company-echo-common
     Personality used for company-echo-common This personality uses
     voice-bolden-medium whose effect can be changed globally by
     customizing voice-bolden-medium-settings.

 -- Variable: User Option voice-company-preview
     Personality used for company-preview This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option voice-company-preview-common
     Personality used for company-preview-common This personality uses
     voice-lighten-medium whose effect can be changed globally by
     customizing voice-lighten-medium-settings.

 -- Variable: User Option voice-company-preview-search
     Personality used for company-preview-search This personality uses
     voice-brighten whose effect can be changed globally by customizing
     voice-brighten-settings.

 -- Variable: User Option voice-company-template-field
     Personality used for company-template-field This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.


File: emacspeak.info,  Node: emacspeak-compile,  Next: emacspeak-cperl,  Prev: emacspeak-company,  Up: Emacspeak Commands And Options

12.39 emacspeak-compile
=======================

This module makes compiling code from inside Emacs speech friendly.  It
is an example of how a little amount of code can make Emacspeak even
better.

12.39.1 emacspeak-compile Commands
----------------------------------

12.39.1.1 emacspeak-compilation-speak-error
...........................................

 -- Command: emacspeak-compilation-speak-error

     Speech feedback about the compilation error.

12.39.2 emacspeak-compile Options
---------------------------------

 -- Variable: User Option voice-compilation-column-number
     Personality used for compilation-column-number This personality
     uses voice-smoothen whose effect can be changed globally by
     customizing voice-smoothen-settings.

 -- Variable: User Option voice-compilation-error
     Personality used for compilation-error This personality uses
     voice-animate-extra whose effect can be changed globally by
     customizing voice-animate-extra-settings.

 -- Variable: User Option voice-compilation-info
     Personality used for compilation-info This personality uses
     voice-lighten whose effect can be changed globally by customizing
     voice-lighten-settings.

 -- Variable: User Option voice-compilation-line-number
     Personality used for compilation-line-number This personality uses
     voice-smoothen whose effect can be changed globally by customizing
     voice-smoothen-settings.

 -- Variable: User Option voice-compilation-mode-line-exit
     Personality used for compilation-mode-line-exit This personality
     uses voice-animate whose effect can be changed globally by
     customizing voice-animate-settings.

 -- Variable: User Option voice-compilation-mode-line-fail
     Personality used for compilation-mode-line-fail This personality
     uses voice-brighten whose effect can be changed globally by
     customizing voice-brighten-settings.

 -- Variable: User Option voice-compilation-mode-line-run
     Personality used for compilation-mode-line-run This personality
     uses voice-annotate whose effect can be changed globally by
     customizing voice-annotate-settings.

 -- Variable: User Option voice-compilation-warning
     Personality used for compilation-warning This personality uses
     voice-animate whose effect can be changed globally by customizing
     voice-animate-settings.


File: emacspeak.info,  Node: emacspeak-cperl,  Next: emacspeak-custom,  Prev: emacspeak-compile,  Up: Emacspeak Commands And Options

12.40 emacspeak-cperl
=====================

Provide additional advice to CPerl mode


File: emacspeak.info,  Node: emacspeak-custom,  Next: emacspeak-dbus,  Prev: emacspeak-cperl,  Up: Emacspeak Commands And Options

12.41 emacspeak-custom
======================

Advise custom to speak.  most of the work is actually done by
emacspeak-widget.el which speech-enables the widget libraries.

12.41.1 emacspeak-custom Commands
---------------------------------

12.41.1.1 emacspeak-custom-goto-group
.....................................

 -- Command: emacspeak-custom-goto-group

     Jump to custom group when in a customization buffer.

12.41.1.2 emacspeak-custom-goto-toolbar
.......................................

 -- Command: emacspeak-custom-goto-toolbar

     Jump to custom toolbar when in a customization buffer.


File: emacspeak.info,  Node: emacspeak-dbus,  Next: emacspeak-deadgrep,  Prev: emacspeak-custom,  Up: Emacspeak Commands And Options

12.42 emacspeak-dbus
====================

Loading this module sets up Emacspeak to respond to DBus notifications.
This module needs to be loaded explicitly from the user’s init file
after emacspeak has been started.

12.42.1 Overview
----------------

This module provides integration via DBus for the following:
   • Respond to network coming up or going down — ‘(nm-enable)’.
   • Respond to screen getting locked/unlocked by gnome-screen-saver —
     ‘(emacspeak-dbus-watch-screen-lock)’.
   • Respond to laptop going to sleep or waking up —
     ‘(emacspeak-dbus-sleep-enable)’.
   • Respond to insertion/ejection of removable storage —
     ‘(emacspeak-dbus-udisks-enable)’.
   • Watch for power devices — ‘(emacspeak-dbus-upower-enable)’.
   • An interactive command ‘emacspeak-dbus-lock-screen’ bound to ‘C-,
     C-d’ to lock the screen using DBus.  Note: this key-binding is
     available only if this module is loaded.
   Add calls to the desired functions from the above list to the emacs
startup file after this module has been loaded.  See relevant hooks for
customizing behavior.  Note that each of the sleep/wake-up, UDisks2 and
network/up-down can be separately enabled/disabled, and the actions
customized via appropriately named hook functions.

12.42.2 emacspeak-dbus Commands
-------------------------------

12.42.2.1 emacspeak-dbus-lock-screen
....................................

 -- Command: emacspeak-dbus-lock-screen

     Lock screen using DBus.

12.42.2.2 emacspeak-dbus-sleep-disable
......................................

 -- Command: emacspeak-dbus-sleep-disable

     Disable integration with login1 daemon. Does nothing if
     already disabled.

12.42.2.3 emacspeak-dbus-sleep-enable
.....................................

 -- Command: emacspeak-dbus-sleep-enable

     Enable integration with Login1. Does nothing if already enabled.

12.42.2.4 emacspeak-dbus-udisks-disable
.......................................

 -- Command: emacspeak-dbus-udisks-disable

     Disable integration with UDisks2 daemon. Does nothing if
     already disabled.

12.42.2.5 emacspeak-dbus-udisks-enable
......................................

 -- Command: emacspeak-dbus-udisks-enable

     Enable integration with UDisks2. Does nothing if already enabled.

12.42.2.6 emacspeak-dbus-upower-disable
.......................................

 -- Command: emacspeak-dbus-upower-disable

     Disable integration with UPower daemon. Does nothing if
     already disabled.

12.42.2.7 emacspeak-dbus-upower-enable
......................................

 -- Command: emacspeak-dbus-upower-enable

     Enable integration with UPower. Does nothing if already enabled.

12.42.2.8 emacspeak-screen-saver-mode
.....................................

 -- Command: emacspeak-screen-saver-mode

     A light-weight mode for the ‘*Emacspeak Screen Saver *’ buffer.
     This is a hidden buffer that is made current so we automatically
     switch to a screen-saver soundscape.

     In addition to any hooks its parent mode ‘special-mode’ might have run,
     this mode runs the hook ‘emacspeak-screen-saver-mode-hook’, as the final or penultimate step
     during initialization.

     key             binding
     —             ——-



File: emacspeak.info,  Node: emacspeak-deadgrep,  Next: emacspeak-debugger,  Prev: emacspeak-dbus,  Up: Emacspeak Commands And Options

12.43 emacspeak-deadgrep
========================

DEADGREP == Front-end to ripgrep.


File: emacspeak.info,  Node: emacspeak-debugger,  Next: emacspeak-desktop,  Prev: emacspeak-deadgrep,  Up: Emacspeak Commands And Options

12.44 emacspeak-debugger
========================

DEBUGGER == Emacs Interactive Debugger.  Speech-enable the debugger by
speech-enabling interactive commands.


File: emacspeak.info,  Node: emacspeak-desktop,  Next: emacspeak-dictionary,  Prev: emacspeak-debugger,  Up: Emacspeak Commands And Options

12.45 emacspeak-desktop
=======================

advice desktop package


File: emacspeak.info,  Node: emacspeak-dictionary,  Next: emacspeak-diff-mode,  Prev: emacspeak-desktop,  Up: Emacspeak Commands And Options

12.46 emacspeak-dictionary
==========================

Speech-enables emacs client for accessing dictionary server at
dict.org:2628

